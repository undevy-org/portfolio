"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/components/AnimatedScreenTransition.js":
/*!********************************************************!*\
  !*** ./src/app/components/AnimatedScreenTransition.js ***!
  \********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AnimatedScreenTransition)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_SessionContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/SessionContext */ \"(app-pages-browser)/./src/app/context/SessionContext.js\");\n// src/app/components/AnimatedScreenTransition.js\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n/**\n * AnimatedScreenTransition Component - SIMPLIFIED VERSION\n * \n * Fixed issues:\n * 1. Content was disappearing and never coming back\n * 2. Animation timing was causing race conditions\n * 3. Children updates were not properly handled\n * \n * New approach: Simpler fade transition without scale\n */ function AnimatedScreenTransition(param) {\n    let { children } = param;\n    _s();\n    const { currentScreen } = (0,_context_SessionContext__WEBPACK_IMPORTED_MODULE_2__.useSession)();\n    const [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [opacity, setOpacity] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const previousScreenRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(currentScreen);\n    const contentRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AnimatedScreenTransition.useEffect\": ()=>{\n            // If screen hasn't changed, just update content\n            if (previousScreenRef.current === currentScreen) {\n                return;\n            }\n            // Screen changed, trigger animation\n            const animateTransition = {\n                \"AnimatedScreenTransition.useEffect.animateTransition\": async ()=>{\n                    // Start fade out\n                    setIsAnimating(true);\n                    setOpacity(0);\n                    // Wait for fade out to complete\n                    await new Promise({\n                        \"AnimatedScreenTransition.useEffect.animateTransition\": (resolve)=>setTimeout(resolve, 150)\n                    }[\"AnimatedScreenTransition.useEffect.animateTransition\"]);\n                    // Fade in with new content\n                    setOpacity(1);\n                    // Wait for fade in to complete\n                    await new Promise({\n                        \"AnimatedScreenTransition.useEffect.animateTransition\": (resolve)=>setTimeout(resolve, 150)\n                    }[\"AnimatedScreenTransition.useEffect.animateTransition\"]);\n                    // Animation complete\n                    setIsAnimating(false);\n                }\n            }[\"AnimatedScreenTransition.useEffect.animateTransition\"];\n            animateTransition();\n            previousScreenRef.current = currentScreen;\n        }\n    }[\"AnimatedScreenTransition.useEffect\"], [\n        currentScreen\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: contentRef,\n        className: \"transition-container w-full h-full\",\n        style: {\n            opacity: opacity,\n            transition: isAnimating ? 'opacity 150ms ease-in-out' : 'none'\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/undevy/portfolio-project/src/app/components/AnimatedScreenTransition.js\",\n        lineNumber: 54,\n        columnNumber: 5\n    }, this);\n} /**\n * ALTERNATIVE: If animations are still problematic, use this version without any animation:\n * \n * export default function AnimatedScreenTransition({ children }) {\n *   return <>{children}</>;\n * }\n * \n * You can uncomment the above and comment out the animated version to test\n * if the disappearing content is related to animations or something else.\n */ \n_s(AnimatedScreenTransition, \"0d1N0d5McRzqo1e1P2VigAlho74=\", false, function() {\n    return [\n        _context_SessionContext__WEBPACK_IMPORTED_MODULE_2__.useSession\n    ];\n});\n_c = AnimatedScreenTransition;\nvar _c;\n$RefreshReg$(_c, \"AnimatedScreenTransition\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvY29tcG9uZW50cy9BbmltYXRlZFNjcmVlblRyYW5zaXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxpREFBaUQ7OztBQUdHO0FBQ0c7QUFFdkQ7Ozs7Ozs7OztDQVNDLEdBQ2MsU0FBU0kseUJBQXlCLEtBQVk7UUFBWixFQUFFQyxRQUFRLEVBQUUsR0FBWjs7SUFDL0MsTUFBTSxFQUFFQyxhQUFhLEVBQUUsR0FBR0gsbUVBQVVBO0lBQ3BDLE1BQU0sQ0FBQ0ksYUFBYUMsZUFBZSxHQUFHUiwrQ0FBUUEsQ0FBQztJQUMvQyxNQUFNLENBQUNTLFNBQVNDLFdBQVcsR0FBR1YsK0NBQVFBLENBQUM7SUFDdkMsTUFBTVcsb0JBQW9CVCw2Q0FBTUEsQ0FBQ0k7SUFDakMsTUFBTU0sYUFBYVYsNkNBQU1BLENBQUM7SUFFMUJELGdEQUFTQTs4Q0FBQztZQUNSLGdEQUFnRDtZQUNoRCxJQUFJVSxrQkFBa0JFLE9BQU8sS0FBS1AsZUFBZTtnQkFDL0M7WUFDRjtZQUVBLG9DQUFvQztZQUNwQyxNQUFNUTt3RUFBb0I7b0JBQ3hCLGlCQUFpQjtvQkFDakJOLGVBQWU7b0JBQ2ZFLFdBQVc7b0JBRVgsZ0NBQWdDO29CQUNoQyxNQUFNLElBQUlLO2dGQUFRQyxDQUFBQSxVQUFXQyxXQUFXRCxTQUFTOztvQkFFakQsMkJBQTJCO29CQUMzQk4sV0FBVztvQkFFWCwrQkFBK0I7b0JBQy9CLE1BQU0sSUFBSUs7Z0ZBQVFDLENBQUFBLFVBQVdDLFdBQVdELFNBQVM7O29CQUVqRCxxQkFBcUI7b0JBQ3JCUixlQUFlO2dCQUNqQjs7WUFFQU07WUFDQUgsa0JBQWtCRSxPQUFPLEdBQUdQO1FBQzlCOzZDQUFHO1FBQUNBO0tBQWM7SUFFbEIscUJBQ0UsOERBQUNZO1FBQ0NDLEtBQUtQO1FBQ0xRLFdBQVU7UUFDVkMsT0FBTztZQUNMWixTQUFTQTtZQUNUYSxZQUFZZixjQUFjLDhCQUE4QjtRQUMxRDtrQkFFQ0Y7Ozs7OztBQUdQLEVBRUE7Ozs7Ozs7OztDQVNDO0dBM0R1QkQ7O1FBQ0lELCtEQUFVQTs7O0tBRGRDIiwic291cmNlcyI6WyIvVXNlcnMvdW5kZXZ5L3BvcnRmb2xpby1wcm9qZWN0L3NyYy9hcHAvY29tcG9uZW50cy9BbmltYXRlZFNjcmVlblRyYW5zaXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2FwcC9jb21wb25lbnRzL0FuaW1hdGVkU2NyZWVuVHJhbnNpdGlvbi5qc1xuJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZXNzaW9uIH0gZnJvbSAnLi4vY29udGV4dC9TZXNzaW9uQ29udGV4dCc7XG5cbi8qKlxuICogQW5pbWF0ZWRTY3JlZW5UcmFuc2l0aW9uIENvbXBvbmVudCAtIFNJTVBMSUZJRUQgVkVSU0lPTlxuICogXG4gKiBGaXhlZCBpc3N1ZXM6XG4gKiAxLiBDb250ZW50IHdhcyBkaXNhcHBlYXJpbmcgYW5kIG5ldmVyIGNvbWluZyBiYWNrXG4gKiAyLiBBbmltYXRpb24gdGltaW5nIHdhcyBjYXVzaW5nIHJhY2UgY29uZGl0aW9uc1xuICogMy4gQ2hpbGRyZW4gdXBkYXRlcyB3ZXJlIG5vdCBwcm9wZXJseSBoYW5kbGVkXG4gKiBcbiAqIE5ldyBhcHByb2FjaDogU2ltcGxlciBmYWRlIHRyYW5zaXRpb24gd2l0aG91dCBzY2FsZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBbmltYXRlZFNjcmVlblRyYW5zaXRpb24oeyBjaGlsZHJlbiB9KSB7XG4gIGNvbnN0IHsgY3VycmVudFNjcmVlbiB9ID0gdXNlU2Vzc2lvbigpO1xuICBjb25zdCBbaXNBbmltYXRpbmcsIHNldElzQW5pbWF0aW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW29wYWNpdHksIHNldE9wYWNpdHldID0gdXNlU3RhdGUoMSk7XG4gIGNvbnN0IHByZXZpb3VzU2NyZWVuUmVmID0gdXNlUmVmKGN1cnJlbnRTY3JlZW4pO1xuICBjb25zdCBjb250ZW50UmVmID0gdXNlUmVmKG51bGwpO1xuICBcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBJZiBzY3JlZW4gaGFzbid0IGNoYW5nZWQsIGp1c3QgdXBkYXRlIGNvbnRlbnRcbiAgICBpZiAocHJldmlvdXNTY3JlZW5SZWYuY3VycmVudCA9PT0gY3VycmVudFNjcmVlbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICAvLyBTY3JlZW4gY2hhbmdlZCwgdHJpZ2dlciBhbmltYXRpb25cbiAgICBjb25zdCBhbmltYXRlVHJhbnNpdGlvbiA9IGFzeW5jICgpID0+IHtcbiAgICAgIC8vIFN0YXJ0IGZhZGUgb3V0XG4gICAgICBzZXRJc0FuaW1hdGluZyh0cnVlKTtcbiAgICAgIHNldE9wYWNpdHkoMCk7XG4gICAgICBcbiAgICAgIC8vIFdhaXQgZm9yIGZhZGUgb3V0IHRvIGNvbXBsZXRlXG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTUwKSk7XG4gICAgICBcbiAgICAgIC8vIEZhZGUgaW4gd2l0aCBuZXcgY29udGVudFxuICAgICAgc2V0T3BhY2l0eSgxKTtcbiAgICAgIFxuICAgICAgLy8gV2FpdCBmb3IgZmFkZSBpbiB0byBjb21wbGV0ZVxuICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDE1MCkpO1xuICAgICAgXG4gICAgICAvLyBBbmltYXRpb24gY29tcGxldGVcbiAgICAgIHNldElzQW5pbWF0aW5nKGZhbHNlKTtcbiAgICB9O1xuICAgIFxuICAgIGFuaW1hdGVUcmFuc2l0aW9uKCk7XG4gICAgcHJldmlvdXNTY3JlZW5SZWYuY3VycmVudCA9IGN1cnJlbnRTY3JlZW47XG4gIH0sIFtjdXJyZW50U2NyZWVuXSk7XG4gIFxuICByZXR1cm4gKFxuICAgIDxkaXYgXG4gICAgICByZWY9e2NvbnRlbnRSZWZ9XG4gICAgICBjbGFzc05hbWU9XCJ0cmFuc2l0aW9uLWNvbnRhaW5lciB3LWZ1bGwgaC1mdWxsXCJcbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIG9wYWNpdHk6IG9wYWNpdHksXG4gICAgICAgIHRyYW5zaXRpb246IGlzQW5pbWF0aW5nID8gJ29wYWNpdHkgMTUwbXMgZWFzZS1pbi1vdXQnIDogJ25vbmUnLFxuICAgICAgfX1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbi8qKlxuICogQUxURVJOQVRJVkU6IElmIGFuaW1hdGlvbnMgYXJlIHN0aWxsIHByb2JsZW1hdGljLCB1c2UgdGhpcyB2ZXJzaW9uIHdpdGhvdXQgYW55IGFuaW1hdGlvbjpcbiAqIFxuICogZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQW5pbWF0ZWRTY3JlZW5UcmFuc2l0aW9uKHsgY2hpbGRyZW4gfSkge1xuICogICByZXR1cm4gPD57Y2hpbGRyZW59PC8+O1xuICogfVxuICogXG4gKiBZb3UgY2FuIHVuY29tbWVudCB0aGUgYWJvdmUgYW5kIGNvbW1lbnQgb3V0IHRoZSBhbmltYXRlZCB2ZXJzaW9uIHRvIHRlc3RcbiAqIGlmIHRoZSBkaXNhcHBlYXJpbmcgY29udGVudCBpcyByZWxhdGVkIHRvIGFuaW1hdGlvbnMgb3Igc29tZXRoaW5nIGVsc2UuXG4gKi8iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTZXNzaW9uIiwiQW5pbWF0ZWRTY3JlZW5UcmFuc2l0aW9uIiwiY2hpbGRyZW4iLCJjdXJyZW50U2NyZWVuIiwiaXNBbmltYXRpbmciLCJzZXRJc0FuaW1hdGluZyIsIm9wYWNpdHkiLCJzZXRPcGFjaXR5IiwicHJldmlvdXNTY3JlZW5SZWYiLCJjb250ZW50UmVmIiwiY3VycmVudCIsImFuaW1hdGVUcmFuc2l0aW9uIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0IiwiZGl2IiwicmVmIiwiY2xhc3NOYW1lIiwic3R5bGUiLCJ0cmFuc2l0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/AnimatedScreenTransition.js\n"));

/***/ })

});