"use strict";exports.id=9736,exports.ids=[9736],exports.modules={99736:(a,b,c)=>{c.d(b,{coinbaseWallet:()=>i,safe:()=>l});var d=c(22214),e=c(80646),f=c(6141),g=c(67221),h=c(45548);function i(a={}){var b,j;let k,l,m,n,o,p,q,r,s;return"3"===a.version||a.headlessMode?(b=a,(0,d.U)(a=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:i.type,async connect({chainId:a}={}){try{let b=await this.getProvider(),c=(await b.request({method:"eth_requestAccounts"})).map(a=>(0,f.b)(a));m||(m=this.onAccountsChanged.bind(this),b.on("accountsChanged",m)),n||(n=this.onChainChanged.bind(this),b.on("chainChanged",n)),o||(o=this.onDisconnect.bind(this),b.on("disconnect",o));let d=await this.getChainId();if(a&&d!==a){let b=await this.switchChain({chainId:a}).catch(a=>{if(a.code===g.vx.code)throw a;return{id:d}});d=b?.id??d}return{accounts:c,chainId:d}}catch(a){if(/(user closed modal|accounts received is empty|user denied account)/i.test(a.message))throw new g.vx(a);throw a}},async disconnect(){let a=await this.getProvider();m&&(a.removeListener("accountsChanged",m),m=void 0),n&&(a.removeListener("chainChanged",n),n=void 0),o&&(a.removeListener("disconnect",o),o=void 0),a.disconnect(),a.close()},async getAccounts(){let a=await this.getProvider();return(await a.request({method:"eth_accounts"})).map(a=>(0,f.b)(a))},async getChainId(){let a=await this.getProvider();return Number(await a.request({method:"eth_chainId"}))},async getProvider(){if(!l){k=new(await (async()=>{let{default:a}=await c.e(8554).then(c.t.bind(c,58554,19));return"function"!=typeof a&&"function"==typeof a.default?a.default:a})())({...b,reloadOnDisconnect:!1});let d=k.walletExtension?.getChainId(),e=a.chains.find(a=>b.chainId?a.id===b.chainId:a.id===d)||a.chains[0],f=b.chainId||e?.id,g=b.jsonRpcUrl||e?.rpcUrls.default.http[0];l=k.makeWeb3Provider(g,f)}return l},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:b,chainId:c}){let d=a.chains.find(a=>a.id===c);if(!d)throw new g.ch(new e.nk);let f=await this.getProvider();try{return await f.request({method:"wallet_switchEthereumChain",params:[{chainId:(0,h.cK)(d.id)}]}),d}catch(a){if(4902===a.code)try{let a,e;a=b?.blockExplorerUrls?b.blockExplorerUrls:d.blockExplorers?.default.url?[d.blockExplorers?.default.url]:[],e=b?.rpcUrls?.length?b.rpcUrls:[d.rpcUrls.default?.http[0]??""];let g={blockExplorerUrls:a,chainId:(0,h.cK)(c),chainName:b?.chainName??d.name,iconUrls:b?.iconUrls,nativeCurrency:b?.nativeCurrency??d.nativeCurrency,rpcUrls:e};return await f.request({method:"wallet_addEthereumChain",params:[g]}),d}catch(a){throw new g.vx(a)}throw new g.ch(a)}},onAccountsChanged(b){0===b.length?this.onDisconnect():a.emitter.emit("change",{accounts:b.map(a=>(0,f.b)(a))})},onChainChanged(b){let c=Number(b);a.emitter.emit("change",{chainId:c})},async onDisconnect(b){a.emitter.emit("disconnect");let c=await this.getProvider();m&&(c.removeListener("accountsChanged",m),m=void 0),n&&(c.removeListener("chainChanged",n),n=void 0),o&&(c.removeListener("disconnect",o),o=void 0)}}))):(j=a,(0,d.U)(a=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:i.type,async connect({chainId:a,...b}={}){try{let c=await this.getProvider(),d=(await c.request({method:"eth_requestAccounts",params:"instantOnboarding"in b&&b.instantOnboarding?[{onboarding:"instant"}]:[]})).map(a=>(0,f.b)(a));q||(q=this.onAccountsChanged.bind(this),c.on("accountsChanged",q)),r||(r=this.onChainChanged.bind(this),c.on("chainChanged",r)),s||(s=this.onDisconnect.bind(this),c.on("disconnect",s));let e=await this.getChainId();if(a&&e!==a){let b=await this.switchChain({chainId:a}).catch(a=>{if(a.code===g.vx.code)throw a;return{id:e}});e=b?.id??e}return{accounts:d,chainId:e}}catch(a){if(/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(a.message))throw new g.vx(a);throw a}},async disconnect(){let a=await this.getProvider();q&&(a.removeListener("accountsChanged",q),q=void 0),r&&(a.removeListener("chainChanged",r),r=void 0),s&&(a.removeListener("disconnect",s),s=void 0),a.disconnect(),a.close?.()},async getAccounts(){let a=await this.getProvider();return(await a.request({method:"eth_accounts"})).map(a=>(0,f.b)(a))},async getChainId(){let a=await this.getProvider();return Number(await a.request({method:"eth_chainId"}))},async getProvider(){if(!p){let b="string"==typeof j.preference?{options:j.preference}:{...j.preference,options:j.preference?.options??"all"},{createCoinbaseWalletSDK:d}=await Promise.all([c.e(559),c.e(9585)]).then(c.bind(c,49585));p=d({...j,appChainIds:a.chains.map(a=>a.id),preference:b}).getProvider()}return p},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:b,chainId:c}){let d=a.chains.find(a=>a.id===c);if(!d)throw new g.ch(new e.nk);let f=await this.getProvider();try{return await f.request({method:"wallet_switchEthereumChain",params:[{chainId:(0,h.cK)(d.id)}]}),d}catch(a){if(4902===a.code)try{let a,e;a=b?.blockExplorerUrls?b.blockExplorerUrls:d.blockExplorers?.default.url?[d.blockExplorers?.default.url]:[],e=b?.rpcUrls?.length?b.rpcUrls:[d.rpcUrls.default?.http[0]??""];let g={blockExplorerUrls:a,chainId:(0,h.cK)(c),chainName:b?.chainName??d.name,iconUrls:b?.iconUrls,nativeCurrency:b?.nativeCurrency??d.nativeCurrency,rpcUrls:e};return await f.request({method:"wallet_addEthereumChain",params:[g]}),d}catch(a){throw new g.vx(a)}throw new g.ch(a)}},onAccountsChanged(b){0===b.length?this.onDisconnect():a.emitter.emit("change",{accounts:b.map(a=>(0,f.b)(a))})},onChainChanged(b){let c=Number(b);a.emitter.emit("change",{chainId:c})},async onDisconnect(b){a.emitter.emit("disconnect");let c=await this.getProvider();q&&(c.removeListener("accountsChanged",q),q=void 0),r&&(c.removeListener("chainChanged",r),r=void 0),s&&(c.removeListener("disconnect",s),s=void 0)}})))}i.type="coinbaseWallet";var j=c(65177),k=c(32483);function l(a={}){let b,e,{shimDisconnect:g=!1}=a;return(0,d.U)(d=>({id:"safe",name:"Safe",type:l.type,async connect(){let a=await this.getProvider();if(!a)throw new j.N;let b=await this.getAccounts(),c=await this.getChainId();return e||(e=this.onDisconnect.bind(this),a.on("disconnect",e)),g&&await d.storage?.removeItem("safe.disconnected"),{accounts:b,chainId:c}},async disconnect(){let a=await this.getProvider();if(!a)throw new j.N;e&&(a.removeListener("disconnect",e),e=void 0),g&&await d.storage?.setItem("safe.disconnected",!0)},async getAccounts(){let a=await this.getProvider();if(!a)throw new j.N;return(await a.request({method:"eth_accounts"})).map(f.b)},async getProvider(){if("undefined"!=typeof window&&window?.parent!==window){if(!b){let{default:d}=await Promise.all([c.e(7026),c.e(5111)]).then(c.bind(c,35111)),e=new d(a),f=await (0,k.w)(()=>e.safe.getInfo(),{timeout:a.unstable_getInfoTimeout??10});if(!f)throw Error("Could not load Safe information");b=new(await (async()=>{let a=await Promise.all([c.e(7026),c.e(73)]).then(c.t.bind(c,70073,19));return"function"!=typeof a.SafeAppProvider&&"function"==typeof a.default.SafeAppProvider?a.default.SafeAppProvider:a.SafeAppProvider})())(f,e)}return b}},async getChainId(){let a=await this.getProvider();if(!a)throw new j.N;return Number(a.chainId)},async isAuthorized(){try{if(g&&await d.storage?.getItem("safe.disconnected"))return!1;return!!(await this.getAccounts()).length}catch{return!1}},onAccountsChanged(){},onChainChanged(){},onDisconnect(){d.emitter.emit("disconnect")}}))}l.type="safe"}};