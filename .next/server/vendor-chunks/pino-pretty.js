"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pino-pretty";
exports.ids = ["vendor-chunks/pino-pretty"];
exports.modules = {

/***/ "(ssr)/./node_modules/pino-pretty/index.js":
/*!*******************************************!*\
  !*** ./node_modules/pino-pretty/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst { isColorSupported } = __webpack_require__(/*! colorette */ \"(ssr)/./node_modules/colorette/index.cjs\")\nconst pump = __webpack_require__(/*! pump */ \"(ssr)/./node_modules/pump/index.js\")\nconst { Transform } = __webpack_require__(/*! node:stream */ \"node:stream\")\nconst abstractTransport = __webpack_require__(/*! pino-abstract-transport */ \"(ssr)/./node_modules/pino-pretty/node_modules/pino-abstract-transport/index.js\")\nconst colors = __webpack_require__(/*! ./lib/colors */ \"(ssr)/./node_modules/pino-pretty/lib/colors.js\")\nconst {\n  ERROR_LIKE_KEYS,\n  LEVEL_KEY,\n  LEVEL_LABEL,\n  MESSAGE_KEY,\n  TIMESTAMP_KEY\n} = __webpack_require__(/*! ./lib/constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\nconst {\n  buildSafeSonicBoom,\n  parseFactoryOptions\n} = __webpack_require__(/*! ./lib/utils */ \"(ssr)/./node_modules/pino-pretty/lib/utils/index.js\")\nconst pretty = __webpack_require__(/*! ./lib/pretty */ \"(ssr)/./node_modules/pino-pretty/lib/pretty.js\")\n\n/**\n * @typedef {object} PinoPrettyOptions\n * @property {boolean} [colorize] Indicates if colors should be used when\n * prettifying. The default will be determined by the terminal capabilities at\n * run time.\n * @property {boolean} [colorizeObjects=true] Apply coloring to rendered objects\n * when coloring is enabled.\n * @property {boolean} [crlf=false] End lines with `\\r\\n` instead of `\\n`.\n * @property {string|null} [customColors=null] A comma separated list of colors\n * to use for specific level labels, e.g. `err:red,info:blue`.\n * @property {string|null} [customLevels=null] A comma separated list of user\n * defined level names and numbers, e.g. `err:99,info:1`.\n * @property {CustomPrettifiers} [customPrettifiers={}] A set of prettifier\n * functions to apply to keys defined in this object.\n * @property {K_ERROR_LIKE_KEYS} [errorLikeObjectKeys] A list of string property\n * names to consider as error objects.\n * @property {string} [errorProps=''] A comma separated list of properties on\n * error objects to include in the output.\n * @property {boolean} [hideObject=false] When `true`, data objects will be\n * omitted from the output (except for error objects).\n * @property {string} [ignore='hostname'] A comma separated list of log keys\n * to omit when outputting the prettified log information.\n * @property {undefined|string} [include=undefined] A comma separated list of\n * log keys to include in the prettified log information. Only the keys in this\n * list will be included in the output.\n * @property {boolean} [levelFirst=false] When true, the log level will be the\n * first field in the prettified output.\n * @property {string} [levelKey='level'] The key name in the log data that\n * contains the level value for the log.\n * @property {string} [levelLabel='levelLabel'] Token name to use in\n * `messageFormat` to represent the name of the logged level.\n * @property {null|MessageFormatString|MessageFormatFunction} [messageFormat=null]\n * When a string, defines how the prettified line should be formatted according\n * to defined tokens. When a function, a synchronous function that returns a\n * formatted string.\n * @property {string} [messageKey='msg'] Defines the key in incoming logs that\n * contains the message of the log, if present.\n * @property {undefined|string|number} [minimumLevel=undefined] The minimum\n * level for logs that should be processed. Any logs below this level will\n * be omitted.\n * @property {object} [outputStream=process.stdout] The stream to write\n * prettified log lines to.\n * @property {boolean} [singleLine=false] When `true` any objects, except error\n * objects, in the log data will be printed as a single line instead as multiple\n * lines.\n * @property {string} [timestampKey='time'] Defines the key in incoming logs\n * that contains the timestamp of the log, if present.\n * @property {boolean|string} [translateTime=true] When true, will translate a\n * JavaScript date integer into a human-readable string. If set to a string,\n * it must be a format string.\n * @property {boolean} [useOnlyCustomProps=true] When true, only custom levels\n * and colors will be used if they have been provided.\n */\n\n/**\n * The default options that will be used when prettifying log lines.\n *\n * @type {PinoPrettyOptions}\n */\nconst defaultOptions = {\n  colorize: isColorSupported,\n  colorizeObjects: true,\n  crlf: false,\n  customColors: null,\n  customLevels: null,\n  customPrettifiers: {},\n  errorLikeObjectKeys: ERROR_LIKE_KEYS,\n  errorProps: '',\n  hideObject: false,\n  ignore: 'hostname',\n  include: undefined,\n  levelFirst: false,\n  levelKey: LEVEL_KEY,\n  levelLabel: LEVEL_LABEL,\n  messageFormat: null,\n  messageKey: MESSAGE_KEY,\n  minimumLevel: undefined,\n  outputStream: process.stdout,\n  singleLine: false,\n  timestampKey: TIMESTAMP_KEY,\n  translateTime: true,\n  useOnlyCustomProps: true\n}\n\n/**\n * Processes the supplied options and returns a function that accepts log data\n * and produces a prettified log string.\n *\n * @param {PinoPrettyOptions} options Configuration for the prettifier.\n * @returns {LogPrettifierFunc}\n */\nfunction prettyFactory (options) {\n  const context = parseFactoryOptions(Object.assign({}, defaultOptions, options))\n  return pretty.bind({ ...context, context })\n}\n\n/**\n * @typedef {PinoPrettyOptions} BuildStreamOpts\n * @property {object|number|string} [destination] A destination stream, file\n * descriptor, or target path to a file.\n * @property {boolean} [append]\n * @property {boolean} [mkdir]\n * @property {boolean} [sync=false]\n */\n\n/**\n * Constructs a {@link LogPrettifierFunc} and a stream to which the produced\n * prettified log data will be written.\n *\n * @param {BuildStreamOpts} opts\n * @returns {Transform | (Transform & OnUnknown)}\n */\nfunction build (opts = {}) {\n  let pretty = prettyFactory(opts)\n  let destination\n  return abstractTransport(function (source) {\n    source.on('message', function pinoConfigListener (message) {\n      if (!message || message.code !== 'PINO_CONFIG') return\n      Object.assign(opts, {\n        messageKey: message.config.messageKey,\n        errorLikeObjectKeys: Array.from(new Set([...(opts.errorLikeObjectKeys || ERROR_LIKE_KEYS), message.config.errorKey])),\n        customLevels: message.config.levels.values\n      })\n      pretty = prettyFactory(opts)\n      source.off('message', pinoConfigListener)\n    })\n    const stream = new Transform({\n      objectMode: true,\n      autoDestroy: true,\n      transform (chunk, enc, cb) {\n        const line = pretty(chunk)\n        cb(null, line)\n      }\n    })\n\n    if (typeof opts.destination === 'object' && typeof opts.destination.write === 'function') {\n      destination = opts.destination\n    } else {\n      destination = buildSafeSonicBoom({\n        dest: opts.destination || 1,\n        append: opts.append,\n        mkdir: opts.mkdir,\n        sync: opts.sync // by default sonic will be async\n      })\n    }\n\n    source.on('unknown', function (line) {\n      destination.write(line + '\\n')\n    })\n\n    pump(source, stream, destination)\n    return stream\n  }, {\n    parse: 'lines',\n    close (err, cb) {\n      destination.on('close', () => {\n        cb(err)\n      })\n    }\n  })\n}\n\nmodule.exports = build\nmodule.exports.build = build\nmodule.exports.PinoPretty = build\nmodule.exports.prettyFactory = prettyFactory\nmodule.exports.colorizerFactory = colors\nmodule.exports.isColorSupported = isColorSupported\nmodule.exports[\"default\"] = build\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/colors.js":
/*!************************************************!*\
  !*** ./node_modules/pino-pretty/lib/colors.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst nocolor = input => input\nconst plain = {\n  default: nocolor,\n  60: nocolor,\n  50: nocolor,\n  40: nocolor,\n  30: nocolor,\n  20: nocolor,\n  10: nocolor,\n  message: nocolor,\n  greyMessage: nocolor,\n  property: nocolor\n}\n\nconst { createColors } = __webpack_require__(/*! colorette */ \"(ssr)/./node_modules/colorette/index.cjs\")\nconst getLevelLabelData = __webpack_require__(/*! ./utils/get-level-label-data */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-level-label-data.js\")\nconst availableColors = createColors({ useColor: true })\nconst { white, bgRed, red, yellow, green, blue, gray, cyan, magenta } = availableColors\n\nconst colored = {\n  default: white,\n  60: bgRed,\n  50: red,\n  40: yellow,\n  30: green,\n  20: blue,\n  10: gray,\n  message: cyan,\n  greyMessage: gray,\n  property: magenta\n}\n\nfunction resolveCustomColoredColorizer (customColors) {\n  return customColors.reduce(\n    function (agg, [level, color]) {\n      agg[level] = typeof availableColors[color] === 'function' ? availableColors[color] : white\n\n      return agg\n    },\n    { default: white, message: cyan, greyMessage: gray }\n  )\n}\n\nfunction colorizeLevel (useOnlyCustomProps) {\n  return function (level, colorizer, { customLevels, customLevelNames } = {}) {\n    const [levelStr, levelNum] = getLevelLabelData(useOnlyCustomProps, customLevels, customLevelNames)(level)\n\n    return Object.prototype.hasOwnProperty.call(colorizer, levelNum) ? colorizer[levelNum](levelStr) : colorizer.default(levelStr)\n  }\n}\n\nfunction plainColorizer (useOnlyCustomProps) {\n  const newPlainColorizer = colorizeLevel(useOnlyCustomProps)\n  const customColoredColorizer = function (level, opts) {\n    return newPlainColorizer(level, plain, opts)\n  }\n  customColoredColorizer.message = plain.message\n  customColoredColorizer.greyMessage = plain.greyMessage\n  customColoredColorizer.property = plain.property\n  customColoredColorizer.colors = createColors({ useColor: false })\n  return customColoredColorizer\n}\n\nfunction coloredColorizer (useOnlyCustomProps) {\n  const newColoredColorizer = colorizeLevel(useOnlyCustomProps)\n  const customColoredColorizer = function (level, opts) {\n    return newColoredColorizer(level, colored, opts)\n  }\n  customColoredColorizer.message = colored.message\n  customColoredColorizer.property = colored.property\n  customColoredColorizer.greyMessage = colored.greyMessage\n  customColoredColorizer.colors = availableColors\n  return customColoredColorizer\n}\n\nfunction customColoredColorizerFactory (customColors, useOnlyCustomProps) {\n  const onlyCustomColored = resolveCustomColoredColorizer(customColors)\n  const customColored = useOnlyCustomProps ? onlyCustomColored : Object.assign({}, colored, onlyCustomColored)\n  const colorizeLevelCustom = colorizeLevel(useOnlyCustomProps)\n\n  const customColoredColorizer = function (level, opts) {\n    return colorizeLevelCustom(level, customColored, opts)\n  }\n  customColoredColorizer.colors = availableColors\n  customColoredColorizer.message = customColoredColorizer.message || customColored.message\n  customColoredColorizer.greyMessage = customColoredColorizer.greyMessage || customColored.greyMessage\n\n  return customColoredColorizer\n}\n\n/**\n * Applies colorization, if possible, to a string representing the passed in\n * `level`. For example, the default colorizer will return a \"green\" colored\n * string for the \"info\" level.\n *\n * @typedef {function} ColorizerFunc\n * @param {string|number} level In either case, the input will map to a color\n * for the specified level or to the color for `USERLVL` if the level is not\n * recognized.\n * @property {function} message Accepts one string parameter that will be\n * colorized to a predefined color.\n * @property {Colorette.Colorette} colors Available color functions based on `useColor` (or `colorize`) context\n */\n\n/**\n * Factory function get a function to colorized levels. The returned function\n * also includes a `.message(str)` method to colorize strings.\n *\n * @param {boolean} [useColors=false] When `true` a function that applies standard\n * terminal colors is returned.\n * @param {array[]} [customColors] Tuple where first item of each array is the\n * level index and the second item is the color\n * @param {boolean} [useOnlyCustomProps] When `true`, only use the provided\n * custom colors provided and not fallback to default\n *\n * @returns {ColorizerFunc} `function (level) {}` has a `.message(str)` method to\n * apply colorization to a string. The core function accepts either an integer\n * `level` or a `string` level. The integer level will map to a known level\n * string or to `USERLVL` if not known.  The string `level` will map to the same\n * colors as the integer `level` and will also default to `USERLVL` if the given\n * string is not a recognized level name.\n */\nmodule.exports = function getColorizer (useColors = false, customColors, useOnlyCustomProps) {\n  if (useColors && customColors !== undefined) {\n    return customColoredColorizerFactory(customColors, useOnlyCustomProps)\n  } else if (useColors) {\n    return coloredColorizer(useOnlyCustomProps)\n  }\n\n  return plainColorizer(useOnlyCustomProps)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/colors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/constants.js":
/*!***************************************************!*\
  !*** ./node_modules/pino-pretty/lib/constants.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\n\n/**\n * A set of property names that indicate the value represents an error object.\n *\n * @typedef {string[]} K_ERROR_LIKE_KEYS\n */\n\nmodule.exports = {\n  DATE_FORMAT: 'yyyy-mm-dd HH:MM:ss.l o',\n  DATE_FORMAT_SIMPLE: 'HH:MM:ss.l',\n\n  /**\n   * @type {K_ERROR_LIKE_KEYS}\n   */\n  ERROR_LIKE_KEYS: ['err', 'error'],\n\n  MESSAGE_KEY: 'msg',\n\n  LEVEL_KEY: 'level',\n\n  LEVEL_LABEL: 'levelLabel',\n\n  TIMESTAMP_KEY: 'time',\n\n  LEVELS: {\n    default: 'USERLVL',\n    60: 'FATAL',\n    50: 'ERROR',\n    40: 'WARN',\n    30: 'INFO',\n    20: 'DEBUG',\n    10: 'TRACE'\n  },\n\n  LEVEL_NAMES: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n\n  // Object keys that probably came from a logger like Pino or Bunyan.\n  LOGGER_KEYS: [\n    'pid',\n    'hostname',\n    'name',\n    'level',\n    'time',\n    'timestamp',\n    'caller'\n  ]\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi9jb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogQSBzZXQgb2YgcHJvcGVydHkgbmFtZXMgdGhhdCBpbmRpY2F0ZSB0aGUgdmFsdWUgcmVwcmVzZW50cyBhbiBlcnJvciBvYmplY3QuXG4gKlxuICogQHR5cGVkZWYge3N0cmluZ1tdfSBLX0VSUk9SX0xJS0VfS0VZU1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBEQVRFX0ZPUk1BVDogJ3l5eXktbW0tZGQgSEg6TU06c3MubCBvJyxcbiAgREFURV9GT1JNQVRfU0lNUExFOiAnSEg6TU06c3MubCcsXG5cbiAgLyoqXG4gICAqIEB0eXBlIHtLX0VSUk9SX0xJS0VfS0VZU31cbiAgICovXG4gIEVSUk9SX0xJS0VfS0VZUzogWydlcnInLCAnZXJyb3InXSxcblxuICBNRVNTQUdFX0tFWTogJ21zZycsXG5cbiAgTEVWRUxfS0VZOiAnbGV2ZWwnLFxuXG4gIExFVkVMX0xBQkVMOiAnbGV2ZWxMYWJlbCcsXG5cbiAgVElNRVNUQU1QX0tFWTogJ3RpbWUnLFxuXG4gIExFVkVMUzoge1xuICAgIGRlZmF1bHQ6ICdVU0VSTFZMJyxcbiAgICA2MDogJ0ZBVEFMJyxcbiAgICA1MDogJ0VSUk9SJyxcbiAgICA0MDogJ1dBUk4nLFxuICAgIDMwOiAnSU5GTycsXG4gICAgMjA6ICdERUJVRycsXG4gICAgMTA6ICdUUkFDRSdcbiAgfSxcblxuICBMRVZFTF9OQU1FUzoge1xuICAgIGZhdGFsOiA2MCxcbiAgICBlcnJvcjogNTAsXG4gICAgd2FybjogNDAsXG4gICAgaW5mbzogMzAsXG4gICAgZGVidWc6IDIwLFxuICAgIHRyYWNlOiAxMFxuICB9LFxuXG4gIC8vIE9iamVjdCBrZXlzIHRoYXQgcHJvYmFibHkgY2FtZSBmcm9tIGEgbG9nZ2VyIGxpa2UgUGlubyBvciBCdW55YW4uXG4gIExPR0dFUl9LRVlTOiBbXG4gICAgJ3BpZCcsXG4gICAgJ2hvc3RuYW1lJyxcbiAgICAnbmFtZScsXG4gICAgJ2xldmVsJyxcbiAgICAndGltZScsXG4gICAgJ3RpbWVzdGFtcCcsXG4gICAgJ2NhbGxlcidcbiAgXVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/pretty.js":
/*!************************************************!*\
  !*** ./node_modules/pino-pretty/lib/pretty.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = pretty\n\nconst sjs = __webpack_require__(/*! secure-json-parse */ \"(ssr)/./node_modules/secure-json-parse/index.js\")\n\nconst isObject = __webpack_require__(/*! ./utils/is-object */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-object.js\")\nconst prettifyErrorLog = __webpack_require__(/*! ./utils/prettify-error-log */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error-log.js\")\nconst prettifyLevel = __webpack_require__(/*! ./utils/prettify-level */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-level.js\")\nconst prettifyMessage = __webpack_require__(/*! ./utils/prettify-message */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-message.js\")\nconst prettifyMetadata = __webpack_require__(/*! ./utils/prettify-metadata */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-metadata.js\")\nconst prettifyObject = __webpack_require__(/*! ./utils/prettify-object */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-object.js\")\nconst prettifyTime = __webpack_require__(/*! ./utils/prettify-time */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-time.js\")\nconst filterLog = __webpack_require__(/*! ./utils/filter-log */ \"(ssr)/./node_modules/pino-pretty/lib/utils/filter-log.js\")\n\nconst {\n  LEVELS,\n  LEVEL_KEY,\n  LEVEL_NAMES\n} = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\nconst jsonParser = input => {\n  try {\n    return { value: sjs.parse(input, { protoAction: 'remove' }) }\n  } catch (err) {\n    return { err }\n  }\n}\n\n/**\n * Orchestrates processing the received log data according to the provided\n * configuration and returns a prettified log string.\n *\n * @typedef {function} LogPrettifierFunc\n * @param {string|object} inputData A log string or a log-like object.\n * @returns {string} A string that represents the prettified log data.\n */\nfunction pretty (inputData) {\n  let log\n  if (!isObject(inputData)) {\n    const parsed = jsonParser(inputData)\n    if (parsed.err || !isObject(parsed.value)) {\n      // pass through\n      return inputData + this.EOL\n    }\n    log = parsed.value\n  } else {\n    log = inputData\n  }\n\n  if (this.minimumLevel) {\n    // We need to figure out if the custom levels has the desired minimum\n    // level & use that one if found. If not, determine if the level exists\n    // in the standard levels. In both cases, make sure we have the level\n    // number instead of the level name.\n    let condition\n    if (this.useOnlyCustomProps) {\n      condition = this.customLevels\n    } else {\n      condition = this.customLevelNames[this.minimumLevel] !== undefined\n    }\n    let minimum\n    if (condition) {\n      minimum = this.customLevelNames[this.minimumLevel]\n    } else {\n      minimum = LEVEL_NAMES[this.minimumLevel]\n    }\n    if (!minimum) {\n      minimum = typeof this.minimumLevel === 'string'\n        ? LEVEL_NAMES[this.minimumLevel]\n        : LEVEL_NAMES[LEVELS[this.minimumLevel].toLowerCase()]\n    }\n\n    const level = log[this.levelKey === undefined ? LEVEL_KEY : this.levelKey]\n    if (level < minimum) return\n  }\n\n  const prettifiedMessage = prettifyMessage({ log, context: this.context })\n\n  if (this.ignoreKeys || this.includeKeys) {\n    log = filterLog({ log, context: this.context })\n  }\n\n  const prettifiedLevel = prettifyLevel({\n    log,\n    context: {\n      ...this.context,\n      // This is odd. The colorizer ends up relying on the value of\n      // `customProperties` instead of the original `customLevels` and\n      // `customLevelNames`.\n      ...this.context.customProperties\n    }\n  })\n  const prettifiedMetadata = prettifyMetadata({ log, context: this.context })\n  const prettifiedTime = prettifyTime({ log, context: this.context })\n\n  let line = ''\n  if (this.levelFirst && prettifiedLevel) {\n    line = `${prettifiedLevel}`\n  }\n\n  if (prettifiedTime && line === '') {\n    line = `${prettifiedTime}`\n  } else if (prettifiedTime) {\n    line = `${line} ${prettifiedTime}`\n  }\n\n  if (!this.levelFirst && prettifiedLevel) {\n    if (line.length > 0) {\n      line = `${line} ${prettifiedLevel}`\n    } else {\n      line = prettifiedLevel\n    }\n  }\n\n  if (prettifiedMetadata) {\n    if (line.length > 0) {\n      line = `${line} ${prettifiedMetadata}:`\n    } else {\n      line = prettifiedMetadata\n    }\n  }\n\n  if (line.endsWith(':') === false && line !== '') {\n    line += ':'\n  }\n\n  if (prettifiedMessage !== undefined) {\n    if (line.length > 0) {\n      line = `${line} ${prettifiedMessage}`\n    } else {\n      line = prettifiedMessage\n    }\n  }\n\n  if (line.length > 0 && !this.singleLine) {\n    line += this.EOL\n  }\n\n  // pino@7+ does not log this anymore\n  if (log.type === 'Error' && typeof log.stack === 'string') {\n    const prettifiedErrorLog = prettifyErrorLog({ log, context: this.context })\n    if (this.singleLine) line += this.EOL\n    line += prettifiedErrorLog\n  } else if (this.hideObject === false) {\n    const skipKeys = [\n      this.messageKey,\n      this.levelKey,\n      this.timestampKey\n    ]\n      .map((key) => key.replaceAll(/\\\\/g, ''))\n      .filter(key => {\n        return typeof log[key] === 'string' ||\n          typeof log[key] === 'number' ||\n          typeof log[key] === 'boolean'\n      })\n    const prettifiedObject = prettifyObject({\n      log,\n      skipKeys,\n      context: this.context\n    })\n\n    // In single line mode, include a space only if prettified version isn't empty\n    if (this.singleLine && !/^\\s$/.test(prettifiedObject)) {\n      line += ' '\n    }\n    line += prettifiedObject\n  }\n\n  return line\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/pretty.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/build-safe-sonic-boom.js":
/*!*********************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/build-safe-sonic-boom.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = buildSafeSonicBoom\n\nconst { isMainThread } = __webpack_require__(/*! node:worker_threads */ \"node:worker_threads\")\nconst SonicBoom = __webpack_require__(/*! sonic-boom */ \"(ssr)/./node_modules/pino-pretty/node_modules/sonic-boom/index.js\")\nconst noop = __webpack_require__(/*! ./noop */ \"(ssr)/./node_modules/pino-pretty/lib/utils/noop.js\")\n\n/**\n * Creates a safe SonicBoom instance\n *\n * @param {object} opts Options for SonicBoom\n *\n * @returns {object} A new SonicBoom stream\n */\nfunction buildSafeSonicBoom (opts) {\n  const stream = new SonicBoom(opts)\n  stream.on('error', filterBrokenPipe)\n  // if we are sync: false, we must flush on exit\n  if (!opts.sync && isMainThread) {\n    setupOnExit(stream)\n  }\n  return stream\n\n  function filterBrokenPipe (err) {\n    if (err.code === 'EPIPE') {\n      stream.write = noop\n      stream.end = noop\n      stream.flushSync = noop\n      stream.destroy = noop\n      return\n    }\n    stream.removeListener('error', filterBrokenPipe)\n  }\n}\n\nfunction setupOnExit (stream) {\n  /* istanbul ignore next */\n  if (global.WeakRef && global.WeakMap && global.FinalizationRegistry) {\n    // This is leak free, it does not leave event handlers\n    const onExit = __webpack_require__(/*! on-exit-leak-free */ \"(ssr)/./node_modules/pino-pretty/node_modules/on-exit-leak-free/index.js\")\n\n    onExit.register(stream, autoEnd)\n\n    stream.on('close', function () {\n      onExit.unregister(stream)\n    })\n  }\n}\n\n/* istanbul ignore next */\nfunction autoEnd (stream, eventName) {\n  // This check is needed only on some platforms\n\n  if (stream.destroyed) {\n    return\n  }\n\n  if (eventName === 'beforeExit') {\n    // We still have an event loop, let's use it\n    stream.flush()\n    stream.on('drain', function () {\n      stream.end()\n    })\n  } else {\n    // We do not have an event loop, so flush synchronously\n    stream.flushSync()\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2J1aWxkLXNhZmUtc29uaWMtYm9vbS5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQSxRQUFRLGVBQWUsRUFBRSxtQkFBTyxDQUFDLGdEQUFxQjtBQUN0RCxrQkFBa0IsbUJBQU8sQ0FBQyxxRkFBWTtBQUN0QyxhQUFhLG1CQUFPLENBQUMsa0VBQVE7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixtQkFBTyxDQUFDLG1HQUFtQjs7QUFFOUM7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9idWlsZC1zYWZlLXNvbmljLWJvb20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gYnVpbGRTYWZlU29uaWNCb29tXG5cbmNvbnN0IHsgaXNNYWluVGhyZWFkIH0gPSByZXF1aXJlKCdub2RlOndvcmtlcl90aHJlYWRzJylcbmNvbnN0IFNvbmljQm9vbSA9IHJlcXVpcmUoJ3NvbmljLWJvb20nKVxuY29uc3Qgbm9vcCA9IHJlcXVpcmUoJy4vbm9vcCcpXG5cbi8qKlxuICogQ3JlYXRlcyBhIHNhZmUgU29uaWNCb29tIGluc3RhbmNlXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG9wdHMgT3B0aW9ucyBmb3IgU29uaWNCb29tXG4gKlxuICogQHJldHVybnMge29iamVjdH0gQSBuZXcgU29uaWNCb29tIHN0cmVhbVxuICovXG5mdW5jdGlvbiBidWlsZFNhZmVTb25pY0Jvb20gKG9wdHMpIHtcbiAgY29uc3Qgc3RyZWFtID0gbmV3IFNvbmljQm9vbShvcHRzKVxuICBzdHJlYW0ub24oJ2Vycm9yJywgZmlsdGVyQnJva2VuUGlwZSlcbiAgLy8gaWYgd2UgYXJlIHN5bmM6IGZhbHNlLCB3ZSBtdXN0IGZsdXNoIG9uIGV4aXRcbiAgaWYgKCFvcHRzLnN5bmMgJiYgaXNNYWluVGhyZWFkKSB7XG4gICAgc2V0dXBPbkV4aXQoc3RyZWFtKVxuICB9XG4gIHJldHVybiBzdHJlYW1cblxuICBmdW5jdGlvbiBmaWx0ZXJCcm9rZW5QaXBlIChlcnIpIHtcbiAgICBpZiAoZXJyLmNvZGUgPT09ICdFUElQRScpIHtcbiAgICAgIHN0cmVhbS53cml0ZSA9IG5vb3BcbiAgICAgIHN0cmVhbS5lbmQgPSBub29wXG4gICAgICBzdHJlYW0uZmx1c2hTeW5jID0gbm9vcFxuICAgICAgc3RyZWFtLmRlc3Ryb3kgPSBub29wXG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIGZpbHRlckJyb2tlblBpcGUpXG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0dXBPbkV4aXQgKHN0cmVhbSkge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBpZiAoZ2xvYmFsLldlYWtSZWYgJiYgZ2xvYmFsLldlYWtNYXAgJiYgZ2xvYmFsLkZpbmFsaXphdGlvblJlZ2lzdHJ5KSB7XG4gICAgLy8gVGhpcyBpcyBsZWFrIGZyZWUsIGl0IGRvZXMgbm90IGxlYXZlIGV2ZW50IGhhbmRsZXJzXG4gICAgY29uc3Qgb25FeGl0ID0gcmVxdWlyZSgnb24tZXhpdC1sZWFrLWZyZWUnKVxuXG4gICAgb25FeGl0LnJlZ2lzdGVyKHN0cmVhbSwgYXV0b0VuZClcblxuICAgIHN0cmVhbS5vbignY2xvc2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBvbkV4aXQudW5yZWdpc3RlcihzdHJlYW0pXG4gICAgfSlcbiAgfVxufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuZnVuY3Rpb24gYXV0b0VuZCAoc3RyZWFtLCBldmVudE5hbWUpIHtcbiAgLy8gVGhpcyBjaGVjayBpcyBuZWVkZWQgb25seSBvbiBzb21lIHBsYXRmb3Jtc1xuXG4gIGlmIChzdHJlYW0uZGVzdHJveWVkKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICBpZiAoZXZlbnROYW1lID09PSAnYmVmb3JlRXhpdCcpIHtcbiAgICAvLyBXZSBzdGlsbCBoYXZlIGFuIGV2ZW50IGxvb3AsIGxldCdzIHVzZSBpdFxuICAgIHN0cmVhbS5mbHVzaCgpXG4gICAgc3RyZWFtLm9uKCdkcmFpbicsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHN0cmVhbS5lbmQoKVxuICAgIH0pXG4gIH0gZWxzZSB7XG4gICAgLy8gV2UgZG8gbm90IGhhdmUgYW4gZXZlbnQgbG9vcCwgc28gZmx1c2ggc3luY2hyb25vdXNseVxuICAgIHN0cmVhbS5mbHVzaFN5bmMoKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/build-safe-sonic-boom.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/create-date.js":
/*!***********************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/create-date.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = createDate\n\nconst isValidDate = __webpack_require__(/*! ./is-valid-date */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-valid-date.js\")\n\n/**\n * Constructs a JS Date from a number or string. Accepts any single number\n * or single string argument that is valid for the Date() constructor,\n * or an epoch as a string.\n *\n * @param {string|number} epoch The representation of the Date.\n *\n * @returns {Date} The constructed Date.\n */\nfunction createDate (epoch) {\n  // If epoch is already a valid argument, return the valid Date\n  let date = new Date(epoch)\n  if (isValidDate(date)) {\n    return date\n  }\n\n  // Convert to a number to permit epoch as a string\n  date = new Date(+epoch)\n  return date\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2NyZWF0ZS1kYXRlLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBLG9CQUFvQixtQkFBTyxDQUFDLG9GQUFpQjs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQjtBQUNBLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3VuZGV2eS9wb3J0Zm9saW8tcHJvamVjdC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2NyZWF0ZS1kYXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZURhdGVcblxuY29uc3QgaXNWYWxpZERhdGUgPSByZXF1aXJlKCcuL2lzLXZhbGlkLWRhdGUnKVxuXG4vKipcbiAqIENvbnN0cnVjdHMgYSBKUyBEYXRlIGZyb20gYSBudW1iZXIgb3Igc3RyaW5nLiBBY2NlcHRzIGFueSBzaW5nbGUgbnVtYmVyXG4gKiBvciBzaW5nbGUgc3RyaW5nIGFyZ3VtZW50IHRoYXQgaXMgdmFsaWQgZm9yIHRoZSBEYXRlKCkgY29uc3RydWN0b3IsXG4gKiBvciBhbiBlcG9jaCBhcyBhIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ9IGVwb2NoIFRoZSByZXByZXNlbnRhdGlvbiBvZiB0aGUgRGF0ZS5cbiAqXG4gKiBAcmV0dXJucyB7RGF0ZX0gVGhlIGNvbnN0cnVjdGVkIERhdGUuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZURhdGUgKGVwb2NoKSB7XG4gIC8vIElmIGVwb2NoIGlzIGFscmVhZHkgYSB2YWxpZCBhcmd1bWVudCwgcmV0dXJuIHRoZSB2YWxpZCBEYXRlXG4gIGxldCBkYXRlID0gbmV3IERhdGUoZXBvY2gpXG4gIGlmIChpc1ZhbGlkRGF0ZShkYXRlKSkge1xuICAgIHJldHVybiBkYXRlXG4gIH1cblxuICAvLyBDb252ZXJ0IHRvIGEgbnVtYmVyIHRvIHBlcm1pdCBlcG9jaCBhcyBhIHN0cmluZ1xuICBkYXRlID0gbmV3IERhdGUoK2Vwb2NoKVxuICByZXR1cm4gZGF0ZVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/create-date.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/delete-log-property.js":
/*!*******************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/delete-log-property.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = deleteLogProperty\n\nconst getPropertyValue = __webpack_require__(/*! ./get-property-value */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\")\nconst splitPropertyKey = __webpack_require__(/*! ./split-property-key */ \"(ssr)/./node_modules/pino-pretty/lib/utils/split-property-key.js\")\n\n/**\n * Deletes a specified property from a log object if it exists.\n * This function mutates the passed in `log` object.\n *\n * @param {object} log The log object to be modified.\n * @param {string} property A string identifying the property to be deleted from\n * the log object. Accepts nested properties delimited by a `.`\n * Delimiter can be escaped to preserve property names that contain the delimiter.\n * e.g. `'prop1.prop2'` or `'prop2\\.domain\\.corp.prop2'`\n */\nfunction deleteLogProperty (log, property) {\n  const props = splitPropertyKey(property)\n  const propToDelete = props.pop()\n\n  log = getPropertyValue(log, props)\n\n  /* istanbul ignore else */\n  if (log !== null && typeof log === 'object' && Object.prototype.hasOwnProperty.call(log, propToDelete)) {\n    delete log[propToDelete]\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2RlbGV0ZS1sb2ctcHJvcGVydHkuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUEseUJBQXlCLG1CQUFPLENBQUMsOEZBQXNCO0FBQ3ZELHlCQUF5QixtQkFBTyxDQUFDLDhGQUFzQjs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9kZWxldGUtbG9nLXByb3BlcnR5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlbGV0ZUxvZ1Byb3BlcnR5XG5cbmNvbnN0IGdldFByb3BlcnR5VmFsdWUgPSByZXF1aXJlKCcuL2dldC1wcm9wZXJ0eS12YWx1ZScpXG5jb25zdCBzcGxpdFByb3BlcnR5S2V5ID0gcmVxdWlyZSgnLi9zcGxpdC1wcm9wZXJ0eS1rZXknKVxuXG4vKipcbiAqIERlbGV0ZXMgYSBzcGVjaWZpZWQgcHJvcGVydHkgZnJvbSBhIGxvZyBvYmplY3QgaWYgaXQgZXhpc3RzLlxuICogVGhpcyBmdW5jdGlvbiBtdXRhdGVzIHRoZSBwYXNzZWQgaW4gYGxvZ2Agb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBsb2cgVGhlIGxvZyBvYmplY3QgdG8gYmUgbW9kaWZpZWQuXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJvcGVydHkgQSBzdHJpbmcgaWRlbnRpZnlpbmcgdGhlIHByb3BlcnR5IHRvIGJlIGRlbGV0ZWQgZnJvbVxuICogdGhlIGxvZyBvYmplY3QuIEFjY2VwdHMgbmVzdGVkIHByb3BlcnRpZXMgZGVsaW1pdGVkIGJ5IGEgYC5gXG4gKiBEZWxpbWl0ZXIgY2FuIGJlIGVzY2FwZWQgdG8gcHJlc2VydmUgcHJvcGVydHkgbmFtZXMgdGhhdCBjb250YWluIHRoZSBkZWxpbWl0ZXIuXG4gKiBlLmcuIGAncHJvcDEucHJvcDInYCBvciBgJ3Byb3AyXFwuZG9tYWluXFwuY29ycC5wcm9wMidgXG4gKi9cbmZ1bmN0aW9uIGRlbGV0ZUxvZ1Byb3BlcnR5IChsb2csIHByb3BlcnR5KSB7XG4gIGNvbnN0IHByb3BzID0gc3BsaXRQcm9wZXJ0eUtleShwcm9wZXJ0eSlcbiAgY29uc3QgcHJvcFRvRGVsZXRlID0gcHJvcHMucG9wKClcblxuICBsb2cgPSBnZXRQcm9wZXJ0eVZhbHVlKGxvZywgcHJvcHMpXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKGxvZyAhPT0gbnVsbCAmJiB0eXBlb2YgbG9nID09PSAnb2JqZWN0JyAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobG9nLCBwcm9wVG9EZWxldGUpKSB7XG4gICAgZGVsZXRlIGxvZ1twcm9wVG9EZWxldGVdXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/delete-log-property.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/filter-log.js":
/*!**********************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/filter-log.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = filterLog\n\nconst { createCopier } = __webpack_require__(/*! fast-copy */ \"(ssr)/./node_modules/fast-copy/dist/cjs/index.cjs\")\nconst fastCopy = createCopier({})\n\nconst deleteLogProperty = __webpack_require__(/*! ./delete-log-property */ \"(ssr)/./node_modules/pino-pretty/lib/utils/delete-log-property.js\")\n\n/**\n * @typedef {object} FilterLogParams\n * @property {object} log The log object to be modified.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Filter a log object by removing or including keys accordingly.\n * When `includeKeys` is passed, `ignoredKeys` will be ignored.\n * One of ignoreKeys or includeKeys must be pass in.\n *\n * @param {FilterLogParams} input\n *\n * @returns {object} A new `log` object instance that\n *  either only includes the keys in ignoreKeys\n *  or does not include those in ignoredKeys.\n */\nfunction filterLog ({ log, context }) {\n  const { ignoreKeys, includeKeys } = context\n  const logCopy = fastCopy(log)\n\n  if (includeKeys) {\n    const logIncluded = {}\n\n    includeKeys.forEach((key) => {\n      logIncluded[key] = logCopy[key]\n    })\n    return logIncluded\n  }\n\n  ignoreKeys.forEach((ignoreKey) => {\n    deleteLogProperty(logCopy, ignoreKey)\n  })\n  return logCopy\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2ZpbHRlci1sb2cuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUEsUUFBUSxlQUFlLEVBQUUsbUJBQU8sQ0FBQyxvRUFBVztBQUM1QyxnQ0FBZ0M7O0FBRWhDLDBCQUEwQixtQkFBTyxDQUFDLGdHQUF1Qjs7QUFFekQ7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsZUFBZTtBQUM3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsY0FBYztBQUNwQyxVQUFVLDBCQUEwQjtBQUNwQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9maWx0ZXItbG9nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZpbHRlckxvZ1xuXG5jb25zdCB7IGNyZWF0ZUNvcGllciB9ID0gcmVxdWlyZSgnZmFzdC1jb3B5JylcbmNvbnN0IGZhc3RDb3B5ID0gY3JlYXRlQ29waWVyKHt9KVxuXG5jb25zdCBkZWxldGVMb2dQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vZGVsZXRlLWxvZy1wcm9wZXJ0eScpXG5cbi8qKlxuICogQHR5cGVkZWYge29iamVjdH0gRmlsdGVyTG9nUGFyYW1zXG4gKiBAcHJvcGVydHkge29iamVjdH0gbG9nIFRoZSBsb2cgb2JqZWN0IHRvIGJlIG1vZGlmaWVkLlxuICogQHByb3BlcnR5IHtQcmV0dHlDb250ZXh0fSBjb250ZXh0IFRoZSBjb250ZXh0IG9iamVjdCBidWlsdCBmcm9tIHBhcnNpbmdcbiAqIHRoZSBvcHRpb25zLlxuICovXG5cbi8qKlxuICogRmlsdGVyIGEgbG9nIG9iamVjdCBieSByZW1vdmluZyBvciBpbmNsdWRpbmcga2V5cyBhY2NvcmRpbmdseS5cbiAqIFdoZW4gYGluY2x1ZGVLZXlzYCBpcyBwYXNzZWQsIGBpZ25vcmVkS2V5c2Agd2lsbCBiZSBpZ25vcmVkLlxuICogT25lIG9mIGlnbm9yZUtleXMgb3IgaW5jbHVkZUtleXMgbXVzdCBiZSBwYXNzIGluLlxuICpcbiAqIEBwYXJhbSB7RmlsdGVyTG9nUGFyYW1zfSBpbnB1dFxuICpcbiAqIEByZXR1cm5zIHtvYmplY3R9IEEgbmV3IGBsb2dgIG9iamVjdCBpbnN0YW5jZSB0aGF0XG4gKiAgZWl0aGVyIG9ubHkgaW5jbHVkZXMgdGhlIGtleXMgaW4gaWdub3JlS2V5c1xuICogIG9yIGRvZXMgbm90IGluY2x1ZGUgdGhvc2UgaW4gaWdub3JlZEtleXMuXG4gKi9cbmZ1bmN0aW9uIGZpbHRlckxvZyAoeyBsb2csIGNvbnRleHQgfSkge1xuICBjb25zdCB7IGlnbm9yZUtleXMsIGluY2x1ZGVLZXlzIH0gPSBjb250ZXh0XG4gIGNvbnN0IGxvZ0NvcHkgPSBmYXN0Q29weShsb2cpXG5cbiAgaWYgKGluY2x1ZGVLZXlzKSB7XG4gICAgY29uc3QgbG9nSW5jbHVkZWQgPSB7fVxuXG4gICAgaW5jbHVkZUtleXMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBsb2dJbmNsdWRlZFtrZXldID0gbG9nQ29weVtrZXldXG4gICAgfSlcbiAgICByZXR1cm4gbG9nSW5jbHVkZWRcbiAgfVxuXG4gIGlnbm9yZUtleXMuZm9yRWFjaCgoaWdub3JlS2V5KSA9PiB7XG4gICAgZGVsZXRlTG9nUHJvcGVydHkobG9nQ29weSwgaWdub3JlS2V5KVxuICB9KVxuICByZXR1cm4gbG9nQ29weVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/filter-log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/format-time.js":
/*!***********************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/format-time.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = formatTime\n\nconst {\n  DATE_FORMAT,\n  DATE_FORMAT_SIMPLE\n} = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\nconst dateformat = __webpack_require__(/*! dateformat */ \"(ssr)/./node_modules/dateformat/lib/dateformat.js\")\nconst createDate = __webpack_require__(/*! ./create-date */ \"(ssr)/./node_modules/pino-pretty/lib/utils/create-date.js\")\nconst isValidDate = __webpack_require__(/*! ./is-valid-date */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-valid-date.js\")\n\n/**\n * Converts a given `epoch` to a desired display format.\n *\n * @param {number|string} epoch The time to convert. May be any value that is\n * valid for `new Date()`.\n * @param {boolean|string} [translateTime=false] When `false`, the given `epoch`\n * will simply be returned. When `true`, the given `epoch` will be converted\n * to a string at UTC using the `DATE_FORMAT` constant. If `translateTime` is\n * a string, the following rules are available:\n *\n * - `<format string>`: The string is a literal format string. This format\n * string will be used to interpret the `epoch` and return a display string\n * at UTC.\n * - `SYS:STANDARD`: The returned display string will follow the `DATE_FORMAT`\n * constant at the system's local timezone.\n * - `SYS:<format string>`: The returned display string will follow the given\n * `<format string>` at the system's local timezone.\n * - `UTC:<format string>`: The returned display string will follow the given\n * `<format string>` at UTC.\n *\n * @returns {number|string} The formatted time.\n */\nfunction formatTime (epoch, translateTime = false) {\n  if (translateTime === false) {\n    return epoch\n  }\n\n  const instant = createDate(epoch)\n\n  // If the Date is invalid, do not attempt to format\n  if (!isValidDate(instant)) {\n    return epoch\n  }\n\n  if (translateTime === true) {\n    return dateformat(instant, DATE_FORMAT_SIMPLE)\n  }\n\n  const upperFormat = translateTime.toUpperCase()\n  if (upperFormat === 'SYS:STANDARD') {\n    return dateformat(instant, DATE_FORMAT)\n  }\n\n  const prefix = upperFormat.substr(0, 4)\n  if (prefix === 'SYS:' || prefix === 'UTC:') {\n    if (prefix === 'UTC:') {\n      return dateformat(instant, translateTime)\n    }\n    return dateformat(instant, translateTime.slice(4))\n  }\n\n  return dateformat(instant, `UTC:${translateTime}`)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2Zvcm1hdC10aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsRUFBRSxtQkFBTyxDQUFDLHVFQUFjOztBQUUxQixtQkFBbUIsbUJBQU8sQ0FBQyxxRUFBWTtBQUN2QyxtQkFBbUIsbUJBQU8sQ0FBQyxnRkFBZTtBQUMxQyxvQkFBb0IsbUJBQU8sQ0FBQyxvRkFBaUI7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQjtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0NBQW9DLGNBQWM7QUFDbEQiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9mb3JtYXQtdGltZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBmb3JtYXRUaW1lXG5cbmNvbnN0IHtcbiAgREFURV9GT1JNQVQsXG4gIERBVEVfRk9STUFUX1NJTVBMRVxufSA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cycpXG5cbmNvbnN0IGRhdGVmb3JtYXQgPSByZXF1aXJlKCdkYXRlZm9ybWF0JylcbmNvbnN0IGNyZWF0ZURhdGUgPSByZXF1aXJlKCcuL2NyZWF0ZS1kYXRlJylcbmNvbnN0IGlzVmFsaWREYXRlID0gcmVxdWlyZSgnLi9pcy12YWxpZC1kYXRlJylcblxuLyoqXG4gKiBDb252ZXJ0cyBhIGdpdmVuIGBlcG9jaGAgdG8gYSBkZXNpcmVkIGRpc3BsYXkgZm9ybWF0LlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfHN0cmluZ30gZXBvY2ggVGhlIHRpbWUgdG8gY29udmVydC4gTWF5IGJlIGFueSB2YWx1ZSB0aGF0IGlzXG4gKiB2YWxpZCBmb3IgYG5ldyBEYXRlKClgLlxuICogQHBhcmFtIHtib29sZWFufHN0cmluZ30gW3RyYW5zbGF0ZVRpbWU9ZmFsc2VdIFdoZW4gYGZhbHNlYCwgdGhlIGdpdmVuIGBlcG9jaGBcbiAqIHdpbGwgc2ltcGx5IGJlIHJldHVybmVkLiBXaGVuIGB0cnVlYCwgdGhlIGdpdmVuIGBlcG9jaGAgd2lsbCBiZSBjb252ZXJ0ZWRcbiAqIHRvIGEgc3RyaW5nIGF0IFVUQyB1c2luZyB0aGUgYERBVEVfRk9STUFUYCBjb25zdGFudC4gSWYgYHRyYW5zbGF0ZVRpbWVgIGlzXG4gKiBhIHN0cmluZywgdGhlIGZvbGxvd2luZyBydWxlcyBhcmUgYXZhaWxhYmxlOlxuICpcbiAqIC0gYDxmb3JtYXQgc3RyaW5nPmA6IFRoZSBzdHJpbmcgaXMgYSBsaXRlcmFsIGZvcm1hdCBzdHJpbmcuIFRoaXMgZm9ybWF0XG4gKiBzdHJpbmcgd2lsbCBiZSB1c2VkIHRvIGludGVycHJldCB0aGUgYGVwb2NoYCBhbmQgcmV0dXJuIGEgZGlzcGxheSBzdHJpbmdcbiAqIGF0IFVUQy5cbiAqIC0gYFNZUzpTVEFOREFSRGA6IFRoZSByZXR1cm5lZCBkaXNwbGF5IHN0cmluZyB3aWxsIGZvbGxvdyB0aGUgYERBVEVfRk9STUFUYFxuICogY29uc3RhbnQgYXQgdGhlIHN5c3RlbSdzIGxvY2FsIHRpbWV6b25lLlxuICogLSBgU1lTOjxmb3JtYXQgc3RyaW5nPmA6IFRoZSByZXR1cm5lZCBkaXNwbGF5IHN0cmluZyB3aWxsIGZvbGxvdyB0aGUgZ2l2ZW5cbiAqIGA8Zm9ybWF0IHN0cmluZz5gIGF0IHRoZSBzeXN0ZW0ncyBsb2NhbCB0aW1lem9uZS5cbiAqIC0gYFVUQzo8Zm9ybWF0IHN0cmluZz5gOiBUaGUgcmV0dXJuZWQgZGlzcGxheSBzdHJpbmcgd2lsbCBmb2xsb3cgdGhlIGdpdmVuXG4gKiBgPGZvcm1hdCBzdHJpbmc+YCBhdCBVVEMuXG4gKlxuICogQHJldHVybnMge251bWJlcnxzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdGltZS5cbiAqL1xuZnVuY3Rpb24gZm9ybWF0VGltZSAoZXBvY2gsIHRyYW5zbGF0ZVRpbWUgPSBmYWxzZSkge1xuICBpZiAodHJhbnNsYXRlVGltZSA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gZXBvY2hcbiAgfVxuXG4gIGNvbnN0IGluc3RhbnQgPSBjcmVhdGVEYXRlKGVwb2NoKVxuXG4gIC8vIElmIHRoZSBEYXRlIGlzIGludmFsaWQsIGRvIG5vdCBhdHRlbXB0IHRvIGZvcm1hdFxuICBpZiAoIWlzVmFsaWREYXRlKGluc3RhbnQpKSB7XG4gICAgcmV0dXJuIGVwb2NoXG4gIH1cblxuICBpZiAodHJhbnNsYXRlVGltZSA9PT0gdHJ1ZSkge1xuICAgIHJldHVybiBkYXRlZm9ybWF0KGluc3RhbnQsIERBVEVfRk9STUFUX1NJTVBMRSlcbiAgfVxuXG4gIGNvbnN0IHVwcGVyRm9ybWF0ID0gdHJhbnNsYXRlVGltZS50b1VwcGVyQ2FzZSgpXG4gIGlmICh1cHBlckZvcm1hdCA9PT0gJ1NZUzpTVEFOREFSRCcpIHtcbiAgICByZXR1cm4gZGF0ZWZvcm1hdChpbnN0YW50LCBEQVRFX0ZPUk1BVClcbiAgfVxuXG4gIGNvbnN0IHByZWZpeCA9IHVwcGVyRm9ybWF0LnN1YnN0cigwLCA0KVxuICBpZiAocHJlZml4ID09PSAnU1lTOicgfHwgcHJlZml4ID09PSAnVVRDOicpIHtcbiAgICBpZiAocHJlZml4ID09PSAnVVRDOicpIHtcbiAgICAgIHJldHVybiBkYXRlZm9ybWF0KGluc3RhbnQsIHRyYW5zbGF0ZVRpbWUpXG4gICAgfVxuICAgIHJldHVybiBkYXRlZm9ybWF0KGluc3RhbnQsIHRyYW5zbGF0ZVRpbWUuc2xpY2UoNCkpXG4gIH1cblxuICByZXR1cm4gZGF0ZWZvcm1hdChpbnN0YW50LCBgVVRDOiR7dHJhbnNsYXRlVGltZX1gKVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/format-time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/get-level-label-data.js":
/*!********************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/get-level-label-data.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = getLevelLabelData\nconst { LEVELS, LEVEL_NAMES } = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\n/**\n * Given initial settings for custom levels/names and use of only custom props\n * get the level label that corresponds with a given level number\n *\n * @param {boolean} useOnlyCustomProps\n * @param {object} customLevels\n * @param {object} customLevelNames\n *\n * @returns {function} A function that takes a number level and returns the level's label string\n */\nfunction getLevelLabelData (useOnlyCustomProps, customLevels, customLevelNames) {\n  const levels = useOnlyCustomProps ? customLevels || LEVELS : Object.assign({}, LEVELS, customLevels)\n  const levelNames = useOnlyCustomProps ? customLevelNames || LEVEL_NAMES : Object.assign({}, LEVEL_NAMES, customLevelNames)\n  return function (level) {\n    let levelNum = 'default'\n    if (Number.isInteger(+level)) {\n      levelNum = Object.prototype.hasOwnProperty.call(levels, level) ? level : levelNum\n    } else {\n      levelNum = Object.prototype.hasOwnProperty.call(levelNames, level.toLowerCase()) ? levelNames[level.toLowerCase()] : levelNum\n    }\n\n    return [levels[levelNum], levelNum]\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2dldC1sZXZlbC1sYWJlbC1kYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0EsUUFBUSxzQkFBc0IsRUFBRSxtQkFBTyxDQUFDLHVFQUFjOztBQUV0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQSwrRUFBK0U7QUFDL0UsNEZBQTRGO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvdW5kZXZ5L3BvcnRmb2xpby1wcm9qZWN0L25vZGVfbW9kdWxlcy9waW5vLXByZXR0eS9saWIvdXRpbHMvZ2V0LWxldmVsLWxhYmVsLWRhdGEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0TGV2ZWxMYWJlbERhdGFcbmNvbnN0IHsgTEVWRUxTLCBMRVZFTF9OQU1FUyB9ID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzJylcblxuLyoqXG4gKiBHaXZlbiBpbml0aWFsIHNldHRpbmdzIGZvciBjdXN0b20gbGV2ZWxzL25hbWVzIGFuZCB1c2Ugb2Ygb25seSBjdXN0b20gcHJvcHNcbiAqIGdldCB0aGUgbGV2ZWwgbGFiZWwgdGhhdCBjb3JyZXNwb25kcyB3aXRoIGEgZ2l2ZW4gbGV2ZWwgbnVtYmVyXG4gKlxuICogQHBhcmFtIHtib29sZWFufSB1c2VPbmx5Q3VzdG9tUHJvcHNcbiAqIEBwYXJhbSB7b2JqZWN0fSBjdXN0b21MZXZlbHNcbiAqIEBwYXJhbSB7b2JqZWN0fSBjdXN0b21MZXZlbE5hbWVzXG4gKlxuICogQHJldHVybnMge2Z1bmN0aW9ufSBBIGZ1bmN0aW9uIHRoYXQgdGFrZXMgYSBudW1iZXIgbGV2ZWwgYW5kIHJldHVybnMgdGhlIGxldmVsJ3MgbGFiZWwgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIGdldExldmVsTGFiZWxEYXRhICh1c2VPbmx5Q3VzdG9tUHJvcHMsIGN1c3RvbUxldmVscywgY3VzdG9tTGV2ZWxOYW1lcykge1xuICBjb25zdCBsZXZlbHMgPSB1c2VPbmx5Q3VzdG9tUHJvcHMgPyBjdXN0b21MZXZlbHMgfHwgTEVWRUxTIDogT2JqZWN0LmFzc2lnbih7fSwgTEVWRUxTLCBjdXN0b21MZXZlbHMpXG4gIGNvbnN0IGxldmVsTmFtZXMgPSB1c2VPbmx5Q3VzdG9tUHJvcHMgPyBjdXN0b21MZXZlbE5hbWVzIHx8IExFVkVMX05BTUVTIDogT2JqZWN0LmFzc2lnbih7fSwgTEVWRUxfTkFNRVMsIGN1c3RvbUxldmVsTmFtZXMpXG4gIHJldHVybiBmdW5jdGlvbiAobGV2ZWwpIHtcbiAgICBsZXQgbGV2ZWxOdW0gPSAnZGVmYXVsdCdcbiAgICBpZiAoTnVtYmVyLmlzSW50ZWdlcigrbGV2ZWwpKSB7XG4gICAgICBsZXZlbE51bSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChsZXZlbHMsIGxldmVsKSA/IGxldmVsIDogbGV2ZWxOdW1cbiAgICB9IGVsc2Uge1xuICAgICAgbGV2ZWxOdW0gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobGV2ZWxOYW1lcywgbGV2ZWwudG9Mb3dlckNhc2UoKSkgPyBsZXZlbE5hbWVzW2xldmVsLnRvTG93ZXJDYXNlKCldIDogbGV2ZWxOdW1cbiAgICB9XG5cbiAgICByZXR1cm4gW2xldmVsc1tsZXZlbE51bV0sIGxldmVsTnVtXVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/get-level-label-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js":
/*!******************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/get-property-value.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = getPropertyValue\n\nconst splitPropertyKey = __webpack_require__(/*! ./split-property-key */ \"(ssr)/./node_modules/pino-pretty/lib/utils/split-property-key.js\")\n\n/**\n * Gets a specified property from an object if it exists.\n *\n * @param {object} obj The object to be searched.\n * @param {string|string[]} property A string, or an array of strings, identifying\n * the property to be retrieved from the object.\n * Accepts nested properties delimited by a `.`.\n * Delimiter can be escaped to preserve property names that contain the delimiter.\n * e.g. `'prop1.prop2'` or `'prop2\\.domain\\.corp.prop2'`.\n *\n * @returns {*}\n */\nfunction getPropertyValue (obj, property) {\n  const props = Array.isArray(property) ? property : splitPropertyKey(property)\n\n  for (const prop of props) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      return\n    }\n    obj = obj[prop]\n  }\n\n  return obj\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2dldC1wcm9wZXJ0eS12YWx1ZS5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQSx5QkFBeUIsbUJBQU8sQ0FBQyw4RkFBc0I7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLGlCQUFpQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3VuZGV2eS9wb3J0Zm9saW8tcHJvamVjdC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2dldC1wcm9wZXJ0eS12YWx1ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBnZXRQcm9wZXJ0eVZhbHVlXG5cbmNvbnN0IHNwbGl0UHJvcGVydHlLZXkgPSByZXF1aXJlKCcuL3NwbGl0LXByb3BlcnR5LWtleScpXG5cbi8qKlxuICogR2V0cyBhIHNwZWNpZmllZCBwcm9wZXJ0eSBmcm9tIGFuIG9iamVjdCBpZiBpdCBleGlzdHMuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG9iaiBUaGUgb2JqZWN0IHRvIGJlIHNlYXJjaGVkLlxuICogQHBhcmFtIHtzdHJpbmd8c3RyaW5nW119IHByb3BlcnR5IEEgc3RyaW5nLCBvciBhbiBhcnJheSBvZiBzdHJpbmdzLCBpZGVudGlmeWluZ1xuICogdGhlIHByb3BlcnR5IHRvIGJlIHJldHJpZXZlZCBmcm9tIHRoZSBvYmplY3QuXG4gKiBBY2NlcHRzIG5lc3RlZCBwcm9wZXJ0aWVzIGRlbGltaXRlZCBieSBhIGAuYC5cbiAqIERlbGltaXRlciBjYW4gYmUgZXNjYXBlZCB0byBwcmVzZXJ2ZSBwcm9wZXJ0eSBuYW1lcyB0aGF0IGNvbnRhaW4gdGhlIGRlbGltaXRlci5cbiAqIGUuZy4gYCdwcm9wMS5wcm9wMidgIG9yIGAncHJvcDJcXC5kb21haW5cXC5jb3JwLnByb3AyJ2AuXG4gKlxuICogQHJldHVybnMgeyp9XG4gKi9cbmZ1bmN0aW9uIGdldFByb3BlcnR5VmFsdWUgKG9iaiwgcHJvcGVydHkpIHtcbiAgY29uc3QgcHJvcHMgPSBBcnJheS5pc0FycmF5KHByb3BlcnR5KSA/IHByb3BlcnR5IDogc3BsaXRQcm9wZXJ0eUtleShwcm9wZXJ0eSlcblxuICBmb3IgKGNvbnN0IHByb3Agb2YgcHJvcHMpIHtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgb2JqID0gb2JqW3Byb3BdXG4gIH1cblxuICByZXR1cm4gb2JqXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js ***!
  \*******************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = handleCustomLevelsNamesOpts\n\n/**\n * Parse a CSV string or options object that maps level\n * labels to level values.\n *\n * @param {string|object} cLevels An object mapping level\n * names to level values, e.g. `{ info: 30, debug: 65 }`, or a\n * CSV string in the format `level_name:level_value`, e.g.\n * `info:30,debug:65`.\n *\n * @returns {object} An object mapping levels names to level values\n * e.g. `{ info: 30, debug: 65 }`.\n */\nfunction handleCustomLevelsNamesOpts (cLevels) {\n  if (!cLevels) return {}\n\n  if (typeof cLevels === 'string') {\n    return cLevels\n      .split(',')\n      .reduce((agg, value, idx) => {\n        const [levelName, levelNum = idx] = value.split(':')\n        agg[levelName.toLowerCase()] = levelNum\n        return agg\n      }, {})\n  } else if (Object.prototype.toString.call(cLevels) === '[object Object]') {\n    return Object\n      .keys(cLevels)\n      .reduce((agg, levelName) => {\n        agg[levelName.toLowerCase()] = cLevels[levelName]\n        return agg\n      }, {})\n  } else {\n    return {}\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2hhbmRsZS1jdXN0b20tbGV2ZWxzLW5hbWVzLW9wdHMuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsa0NBQWtDLHFCQUFxQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsV0FBVyxxQkFBcUI7QUFDaEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxJQUFJO0FBQ1gsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQUk7QUFDWCxJQUFJO0FBQ0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvdW5kZXZ5L3BvcnRmb2xpby1wcm9qZWN0L25vZGVfbW9kdWxlcy9waW5vLXByZXR0eS9saWIvdXRpbHMvaGFuZGxlLWN1c3RvbS1sZXZlbHMtbmFtZXMtb3B0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBoYW5kbGVDdXN0b21MZXZlbHNOYW1lc09wdHNcblxuLyoqXG4gKiBQYXJzZSBhIENTViBzdHJpbmcgb3Igb3B0aW9ucyBvYmplY3QgdGhhdCBtYXBzIGxldmVsXG4gKiBsYWJlbHMgdG8gbGV2ZWwgdmFsdWVzLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG9iamVjdH0gY0xldmVscyBBbiBvYmplY3QgbWFwcGluZyBsZXZlbFxuICogbmFtZXMgdG8gbGV2ZWwgdmFsdWVzLCBlLmcuIGB7IGluZm86IDMwLCBkZWJ1ZzogNjUgfWAsIG9yIGFcbiAqIENTViBzdHJpbmcgaW4gdGhlIGZvcm1hdCBgbGV2ZWxfbmFtZTpsZXZlbF92YWx1ZWAsIGUuZy5cbiAqIGBpbmZvOjMwLGRlYnVnOjY1YC5cbiAqXG4gKiBAcmV0dXJucyB7b2JqZWN0fSBBbiBvYmplY3QgbWFwcGluZyBsZXZlbHMgbmFtZXMgdG8gbGV2ZWwgdmFsdWVzXG4gKiBlLmcuIGB7IGluZm86IDMwLCBkZWJ1ZzogNjUgfWAuXG4gKi9cbmZ1bmN0aW9uIGhhbmRsZUN1c3RvbUxldmVsc05hbWVzT3B0cyAoY0xldmVscykge1xuICBpZiAoIWNMZXZlbHMpIHJldHVybiB7fVxuXG4gIGlmICh0eXBlb2YgY0xldmVscyA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gY0xldmVsc1xuICAgICAgLnNwbGl0KCcsJylcbiAgICAgIC5yZWR1Y2UoKGFnZywgdmFsdWUsIGlkeCkgPT4ge1xuICAgICAgICBjb25zdCBbbGV2ZWxOYW1lLCBsZXZlbE51bSA9IGlkeF0gPSB2YWx1ZS5zcGxpdCgnOicpXG4gICAgICAgIGFnZ1tsZXZlbE5hbWUudG9Mb3dlckNhc2UoKV0gPSBsZXZlbE51bVxuICAgICAgICByZXR1cm4gYWdnXG4gICAgICB9LCB7fSlcbiAgfSBlbHNlIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoY0xldmVscykgPT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XG4gICAgcmV0dXJuIE9iamVjdFxuICAgICAgLmtleXMoY0xldmVscylcbiAgICAgIC5yZWR1Y2UoKGFnZywgbGV2ZWxOYW1lKSA9PiB7XG4gICAgICAgIGFnZ1tsZXZlbE5hbWUudG9Mb3dlckNhc2UoKV0gPSBjTGV2ZWxzW2xldmVsTmFtZV1cbiAgICAgICAgcmV0dXJuIGFnZ1xuICAgICAgfSwge30pXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHt9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js":
/*!*************************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js ***!
  \*************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = handleCustomLevelsOpts\n\n/**\n * Parse a CSV string or options object that specifies\n * configuration for custom levels.\n *\n * @param {string|object} cLevels An object mapping level\n * names to values, e.g. `{ info: 30, debug: 65 }`, or a\n * CSV string in the format `level_name:level_value`, e.g.\n * `info:30,debug:65`.\n *\n * @returns {object} An object mapping levels to labels that\n * appear in logs, e.g. `{ '30': 'INFO', '65': 'DEBUG' }`.\n */\nfunction handleCustomLevelsOpts (cLevels) {\n  if (!cLevels) return {}\n\n  if (typeof cLevels === 'string') {\n    return cLevels\n      .split(',')\n      .reduce((agg, value, idx) => {\n        const [levelName, levelNum = idx] = value.split(':')\n        agg[levelNum] = levelName.toUpperCase()\n        return agg\n      },\n      { default: 'USERLVL' })\n  } else if (Object.prototype.toString.call(cLevels) === '[object Object]') {\n    return Object\n      .keys(cLevels)\n      .reduce((agg, levelName) => {\n        agg[cLevels[levelName]] = levelName.toUpperCase()\n        return agg\n      }, { default: 'USERLVL' })\n  } else {\n    return {}\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2hhbmRsZS1jdXN0b20tbGV2ZWxzLW9wdHMuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsNEJBQTRCLHFCQUFxQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsMkJBQTJCLDZCQUE2QjtBQUN4RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsUUFBUSxvQkFBb0I7QUFDNUIsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQUksb0JBQW9CO0FBQy9CLElBQUk7QUFDSjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9oYW5kbGUtY3VzdG9tLWxldmVscy1vcHRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGhhbmRsZUN1c3RvbUxldmVsc09wdHNcblxuLyoqXG4gKiBQYXJzZSBhIENTViBzdHJpbmcgb3Igb3B0aW9ucyBvYmplY3QgdGhhdCBzcGVjaWZpZXNcbiAqIGNvbmZpZ3VyYXRpb24gZm9yIGN1c3RvbSBsZXZlbHMuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd8b2JqZWN0fSBjTGV2ZWxzIEFuIG9iamVjdCBtYXBwaW5nIGxldmVsXG4gKiBuYW1lcyB0byB2YWx1ZXMsIGUuZy4gYHsgaW5mbzogMzAsIGRlYnVnOiA2NSB9YCwgb3IgYVxuICogQ1NWIHN0cmluZyBpbiB0aGUgZm9ybWF0IGBsZXZlbF9uYW1lOmxldmVsX3ZhbHVlYCwgZS5nLlxuICogYGluZm86MzAsZGVidWc6NjVgLlxuICpcbiAqIEByZXR1cm5zIHtvYmplY3R9IEFuIG9iamVjdCBtYXBwaW5nIGxldmVscyB0byBsYWJlbHMgdGhhdFxuICogYXBwZWFyIGluIGxvZ3MsIGUuZy4gYHsgJzMwJzogJ0lORk8nLCAnNjUnOiAnREVCVUcnIH1gLlxuICovXG5mdW5jdGlvbiBoYW5kbGVDdXN0b21MZXZlbHNPcHRzIChjTGV2ZWxzKSB7XG4gIGlmICghY0xldmVscykgcmV0dXJuIHt9XG5cbiAgaWYgKHR5cGVvZiBjTGV2ZWxzID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBjTGV2ZWxzXG4gICAgICAuc3BsaXQoJywnKVxuICAgICAgLnJlZHVjZSgoYWdnLCB2YWx1ZSwgaWR4KSA9PiB7XG4gICAgICAgIGNvbnN0IFtsZXZlbE5hbWUsIGxldmVsTnVtID0gaWR4XSA9IHZhbHVlLnNwbGl0KCc6JylcbiAgICAgICAgYWdnW2xldmVsTnVtXSA9IGxldmVsTmFtZS50b1VwcGVyQ2FzZSgpXG4gICAgICAgIHJldHVybiBhZ2dcbiAgICAgIH0sXG4gICAgICB7IGRlZmF1bHQ6ICdVU0VSTFZMJyB9KVxuICB9IGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChjTGV2ZWxzKSA9PT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICByZXR1cm4gT2JqZWN0XG4gICAgICAua2V5cyhjTGV2ZWxzKVxuICAgICAgLnJlZHVjZSgoYWdnLCBsZXZlbE5hbWUpID0+IHtcbiAgICAgICAgYWdnW2NMZXZlbHNbbGV2ZWxOYW1lXV0gPSBsZXZlbE5hbWUudG9VcHBlckNhc2UoKVxuICAgICAgICByZXR1cm4gYWdnXG4gICAgICB9LCB7IGRlZmF1bHQ6ICdVU0VSTFZMJyB9KVxuICB9IGVsc2Uge1xuICAgIHJldHVybiB7fVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = {\n  buildSafeSonicBoom: __webpack_require__(/*! ./build-safe-sonic-boom.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/build-safe-sonic-boom.js\"),\n  createDate: __webpack_require__(/*! ./create-date.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/create-date.js\"),\n  deleteLogProperty: __webpack_require__(/*! ./delete-log-property.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/delete-log-property.js\"),\n  filterLog: __webpack_require__(/*! ./filter-log.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/filter-log.js\"),\n  formatTime: __webpack_require__(/*! ./format-time.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/format-time.js\"),\n  getPropertyValue: __webpack_require__(/*! ./get-property-value.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\"),\n  handleCustomLevelsNamesOpts: __webpack_require__(/*! ./handle-custom-levels-names-opts.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js\"),\n  handleCustomLevelsOpts: __webpack_require__(/*! ./handle-custom-levels-opts.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js\"),\n  interpretConditionals: __webpack_require__(/*! ./interpret-conditionals.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/interpret-conditionals.js\"),\n  isObject: __webpack_require__(/*! ./is-object.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-object.js\"),\n  isValidDate: __webpack_require__(/*! ./is-valid-date.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-valid-date.js\"),\n  joinLinesWithIndentation: __webpack_require__(/*! ./join-lines-with-indentation.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js\"),\n  noop: __webpack_require__(/*! ./noop.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/noop.js\"),\n  parseFactoryOptions: __webpack_require__(/*! ./parse-factory-options.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/parse-factory-options.js\"),\n  prettifyErrorLog: __webpack_require__(/*! ./prettify-error-log.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error-log.js\"),\n  prettifyError: __webpack_require__(/*! ./prettify-error.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error.js\"),\n  prettifyLevel: __webpack_require__(/*! ./prettify-level.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-level.js\"),\n  prettifyMessage: __webpack_require__(/*! ./prettify-message.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-message.js\"),\n  prettifyMetadata: __webpack_require__(/*! ./prettify-metadata.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-metadata.js\"),\n  prettifyObject: __webpack_require__(/*! ./prettify-object.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-object.js\"),\n  prettifyTime: __webpack_require__(/*! ./prettify-time.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-time.js\"),\n  splitPropertyKey: __webpack_require__(/*! ./split-property-key.js */ \"(ssr)/./node_modules/pino-pretty/lib/utils/split-property-key.js\"),\n  getLevelLabelData: __webpack_require__(/*! ./get-level-label-data */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-level-label-data.js\")\n}\n\n// The remainder of this file consists of jsdoc blocks that are difficult to\n// determine a more appropriate \"home\" for. As an example, the blocks associated\n// with custom prettifiers could live in either the `prettify-level`,\n// `prettify-metadata`, or `prettify-time` files since they are the primary\n// files where such code is used. But we want a central place to define common\n// doc blocks, so we are picking this file as the answer.\n\n/**\n * A hash of log property names mapped to prettifier functions. When the\n * incoming log data is being processed for prettification, any key on the log\n * that matches a key in a custom prettifiers hash will be prettified using\n * that matching custom prettifier. The value passed to the custom prettifier\n * will the value associated with the corresponding log key.\n *\n * The hash may contain any arbitrary keys for arbitrary log properties, but it\n * may also contain a set of predefined key names that map to well-known log\n * properties. These keys are:\n *\n * + `time` (for the timestamp field)\n * + `level` (for the level label field; value may be a level number instead\n * of a level label)\n * + `hostname`\n * + `pid`\n * + `name`\n * + `caller`\n *\n * @typedef {Object.<string, CustomPrettifierFunc>} CustomPrettifiers\n */\n\n/**\n * A synchronous function to be used for prettifying a log property. It must\n * return a string.\n *\n * @typedef {function} CustomPrettifierFunc\n * @param {any} value The value to be prettified for the key associated with\n * the prettifier.\n * @returns {string}\n */\n\n/**\n * A tokenized string that indicates how the prettified log line should be\n * formatted. Tokens are either log properties enclosed in curly braces, e.g.\n * `{levelLabel}`, `{pid}`, or `{req.url}`, or conditional directives in curly\n * braces. The only conditional directives supported are `if` and `end`, e.g.\n * `{if pid}{pid}{end}`; every `if` must have a matching `end`. Nested\n * conditions are not supported.\n *\n * @typedef {string} MessageFormatString\n *\n * @example\n * `{levelLabel} - {if pid}{pid} - {end}url:{req.url}`\n */\n\n/**\n * @typedef {object} PrettifyMessageExtras\n * @property {object} colors Available color functions based on `useColor` (or `colorize`) context\n * the options.\n */\n\n/**\n * A function that accepts a log object, name of the message key, and name of\n * the level label key and returns a formatted log line.\n *\n * Note: this function must be synchronous.\n *\n * @typedef {function} MessageFormatFunction\n * @param {object} log The log object to be processed.\n * @param {string} messageKey The name of the key in the `log` object that\n * contains the log message.\n * @param {string} levelLabel The name of the key in the `log` object that\n * contains the log level name.\n * @param {PrettifyMessageExtras} extras Additional data available for message context\n * @returns {string}\n *\n * @example\n * function (log, messageKey, levelLabel) {\n *   return `${log[levelLabel]} - ${log[messageKey]}`\n * }\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsdUdBQTRCO0FBQzFELGNBQWMsbUJBQU8sQ0FBQyxtRkFBa0I7QUFDeEMscUJBQXFCLG1CQUFPLENBQUMsbUdBQTBCO0FBQ3ZELGFBQWEsbUJBQU8sQ0FBQyxpRkFBaUI7QUFDdEMsY0FBYyxtQkFBTyxDQUFDLG1GQUFrQjtBQUN4QyxvQkFBb0IsbUJBQU8sQ0FBQyxpR0FBeUI7QUFDckQsK0JBQStCLG1CQUFPLENBQUMsMkhBQXNDO0FBQzdFLDBCQUEwQixtQkFBTyxDQUFDLCtHQUFnQztBQUNsRSx5QkFBeUIsbUJBQU8sQ0FBQyx5R0FBNkI7QUFDOUQsWUFBWSxtQkFBTyxDQUFDLCtFQUFnQjtBQUNwQyxlQUFlLG1CQUFPLENBQUMsdUZBQW9CO0FBQzNDLDRCQUE0QixtQkFBTyxDQUFDLG1IQUFrQztBQUN0RSxRQUFRLG1CQUFPLENBQUMscUVBQVc7QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMsdUdBQTRCO0FBQzNELG9CQUFvQixtQkFBTyxDQUFDLGlHQUF5QjtBQUNyRCxpQkFBaUIsbUJBQU8sQ0FBQyx5RkFBcUI7QUFDOUMsaUJBQWlCLG1CQUFPLENBQUMseUZBQXFCO0FBQzlDLG1CQUFtQixtQkFBTyxDQUFDLDZGQUF1QjtBQUNsRCxvQkFBb0IsbUJBQU8sQ0FBQywrRkFBd0I7QUFDcEQsa0JBQWtCLG1CQUFPLENBQUMsMkZBQXNCO0FBQ2hELGdCQUFnQixtQkFBTyxDQUFDLHVGQUFvQjtBQUM1QyxvQkFBb0IsbUJBQU8sQ0FBQyxpR0FBeUI7QUFDckQscUJBQXFCLG1CQUFPLENBQUMsa0dBQXdCO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx1Q0FBdUM7QUFDcEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkIsV0FBVyxLQUFLO0FBQ2hCO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUssV0FBVyxLQUFLLElBQUksUUFBUSxRQUFRO0FBQ3pDO0FBQ0EsS0FBSyxRQUFRLEtBQUssSUFBSSxHQUFHO0FBQ3pCO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBLEtBQUssWUFBWSxHQUFHLFFBQVEsS0FBSyxHQUFHLElBQUksS0FBSyxRQUFRO0FBQ3JEOztBQUVBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsUUFBUTtBQUN0QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsVUFBVTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUJBQWlCLElBQUksZ0JBQWdCO0FBQ3BEO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGJ1aWxkU2FmZVNvbmljQm9vbTogcmVxdWlyZSgnLi9idWlsZC1zYWZlLXNvbmljLWJvb20uanMnKSxcbiAgY3JlYXRlRGF0ZTogcmVxdWlyZSgnLi9jcmVhdGUtZGF0ZS5qcycpLFxuICBkZWxldGVMb2dQcm9wZXJ0eTogcmVxdWlyZSgnLi9kZWxldGUtbG9nLXByb3BlcnR5LmpzJyksXG4gIGZpbHRlckxvZzogcmVxdWlyZSgnLi9maWx0ZXItbG9nLmpzJyksXG4gIGZvcm1hdFRpbWU6IHJlcXVpcmUoJy4vZm9ybWF0LXRpbWUuanMnKSxcbiAgZ2V0UHJvcGVydHlWYWx1ZTogcmVxdWlyZSgnLi9nZXQtcHJvcGVydHktdmFsdWUuanMnKSxcbiAgaGFuZGxlQ3VzdG9tTGV2ZWxzTmFtZXNPcHRzOiByZXF1aXJlKCcuL2hhbmRsZS1jdXN0b20tbGV2ZWxzLW5hbWVzLW9wdHMuanMnKSxcbiAgaGFuZGxlQ3VzdG9tTGV2ZWxzT3B0czogcmVxdWlyZSgnLi9oYW5kbGUtY3VzdG9tLWxldmVscy1vcHRzLmpzJyksXG4gIGludGVycHJldENvbmRpdGlvbmFsczogcmVxdWlyZSgnLi9pbnRlcnByZXQtY29uZGl0aW9uYWxzLmpzJyksXG4gIGlzT2JqZWN0OiByZXF1aXJlKCcuL2lzLW9iamVjdC5qcycpLFxuICBpc1ZhbGlkRGF0ZTogcmVxdWlyZSgnLi9pcy12YWxpZC1kYXRlLmpzJyksXG4gIGpvaW5MaW5lc1dpdGhJbmRlbnRhdGlvbjogcmVxdWlyZSgnLi9qb2luLWxpbmVzLXdpdGgtaW5kZW50YXRpb24uanMnKSxcbiAgbm9vcDogcmVxdWlyZSgnLi9ub29wLmpzJyksXG4gIHBhcnNlRmFjdG9yeU9wdGlvbnM6IHJlcXVpcmUoJy4vcGFyc2UtZmFjdG9yeS1vcHRpb25zLmpzJyksXG4gIHByZXR0aWZ5RXJyb3JMb2c6IHJlcXVpcmUoJy4vcHJldHRpZnktZXJyb3ItbG9nLmpzJyksXG4gIHByZXR0aWZ5RXJyb3I6IHJlcXVpcmUoJy4vcHJldHRpZnktZXJyb3IuanMnKSxcbiAgcHJldHRpZnlMZXZlbDogcmVxdWlyZSgnLi9wcmV0dGlmeS1sZXZlbC5qcycpLFxuICBwcmV0dGlmeU1lc3NhZ2U6IHJlcXVpcmUoJy4vcHJldHRpZnktbWVzc2FnZS5qcycpLFxuICBwcmV0dGlmeU1ldGFkYXRhOiByZXF1aXJlKCcuL3ByZXR0aWZ5LW1ldGFkYXRhLmpzJyksXG4gIHByZXR0aWZ5T2JqZWN0OiByZXF1aXJlKCcuL3ByZXR0aWZ5LW9iamVjdC5qcycpLFxuICBwcmV0dGlmeVRpbWU6IHJlcXVpcmUoJy4vcHJldHRpZnktdGltZS5qcycpLFxuICBzcGxpdFByb3BlcnR5S2V5OiByZXF1aXJlKCcuL3NwbGl0LXByb3BlcnR5LWtleS5qcycpLFxuICBnZXRMZXZlbExhYmVsRGF0YTogcmVxdWlyZSgnLi9nZXQtbGV2ZWwtbGFiZWwtZGF0YScpXG59XG5cbi8vIFRoZSByZW1haW5kZXIgb2YgdGhpcyBmaWxlIGNvbnNpc3RzIG9mIGpzZG9jIGJsb2NrcyB0aGF0IGFyZSBkaWZmaWN1bHQgdG9cbi8vIGRldGVybWluZSBhIG1vcmUgYXBwcm9wcmlhdGUgXCJob21lXCIgZm9yLiBBcyBhbiBleGFtcGxlLCB0aGUgYmxvY2tzIGFzc29jaWF0ZWRcbi8vIHdpdGggY3VzdG9tIHByZXR0aWZpZXJzIGNvdWxkIGxpdmUgaW4gZWl0aGVyIHRoZSBgcHJldHRpZnktbGV2ZWxgLFxuLy8gYHByZXR0aWZ5LW1ldGFkYXRhYCwgb3IgYHByZXR0aWZ5LXRpbWVgIGZpbGVzIHNpbmNlIHRoZXkgYXJlIHRoZSBwcmltYXJ5XG4vLyBmaWxlcyB3aGVyZSBzdWNoIGNvZGUgaXMgdXNlZC4gQnV0IHdlIHdhbnQgYSBjZW50cmFsIHBsYWNlIHRvIGRlZmluZSBjb21tb25cbi8vIGRvYyBibG9ja3MsIHNvIHdlIGFyZSBwaWNraW5nIHRoaXMgZmlsZSBhcyB0aGUgYW5zd2VyLlxuXG4vKipcbiAqIEEgaGFzaCBvZiBsb2cgcHJvcGVydHkgbmFtZXMgbWFwcGVkIHRvIHByZXR0aWZpZXIgZnVuY3Rpb25zLiBXaGVuIHRoZVxuICogaW5jb21pbmcgbG9nIGRhdGEgaXMgYmVpbmcgcHJvY2Vzc2VkIGZvciBwcmV0dGlmaWNhdGlvbiwgYW55IGtleSBvbiB0aGUgbG9nXG4gKiB0aGF0IG1hdGNoZXMgYSBrZXkgaW4gYSBjdXN0b20gcHJldHRpZmllcnMgaGFzaCB3aWxsIGJlIHByZXR0aWZpZWQgdXNpbmdcbiAqIHRoYXQgbWF0Y2hpbmcgY3VzdG9tIHByZXR0aWZpZXIuIFRoZSB2YWx1ZSBwYXNzZWQgdG8gdGhlIGN1c3RvbSBwcmV0dGlmaWVyXG4gKiB3aWxsIHRoZSB2YWx1ZSBhc3NvY2lhdGVkIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgbG9nIGtleS5cbiAqXG4gKiBUaGUgaGFzaCBtYXkgY29udGFpbiBhbnkgYXJiaXRyYXJ5IGtleXMgZm9yIGFyYml0cmFyeSBsb2cgcHJvcGVydGllcywgYnV0IGl0XG4gKiBtYXkgYWxzbyBjb250YWluIGEgc2V0IG9mIHByZWRlZmluZWQga2V5IG5hbWVzIHRoYXQgbWFwIHRvIHdlbGwta25vd24gbG9nXG4gKiBwcm9wZXJ0aWVzLiBUaGVzZSBrZXlzIGFyZTpcbiAqXG4gKiArIGB0aW1lYCAoZm9yIHRoZSB0aW1lc3RhbXAgZmllbGQpXG4gKiArIGBsZXZlbGAgKGZvciB0aGUgbGV2ZWwgbGFiZWwgZmllbGQ7IHZhbHVlIG1heSBiZSBhIGxldmVsIG51bWJlciBpbnN0ZWFkXG4gKiBvZiBhIGxldmVsIGxhYmVsKVxuICogKyBgaG9zdG5hbWVgXG4gKiArIGBwaWRgXG4gKiArIGBuYW1lYFxuICogKyBgY2FsbGVyYFxuICpcbiAqIEB0eXBlZGVmIHtPYmplY3QuPHN0cmluZywgQ3VzdG9tUHJldHRpZmllckZ1bmM+fSBDdXN0b21QcmV0dGlmaWVyc1xuICovXG5cbi8qKlxuICogQSBzeW5jaHJvbm91cyBmdW5jdGlvbiB0byBiZSB1c2VkIGZvciBwcmV0dGlmeWluZyBhIGxvZyBwcm9wZXJ0eS4gSXQgbXVzdFxuICogcmV0dXJuIGEgc3RyaW5nLlxuICpcbiAqIEB0eXBlZGVmIHtmdW5jdGlvbn0gQ3VzdG9tUHJldHRpZmllckZ1bmNcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZSBUaGUgdmFsdWUgdG8gYmUgcHJldHRpZmllZCBmb3IgdGhlIGtleSBhc3NvY2lhdGVkIHdpdGhcbiAqIHRoZSBwcmV0dGlmaWVyLlxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuXG4vKipcbiAqIEEgdG9rZW5pemVkIHN0cmluZyB0aGF0IGluZGljYXRlcyBob3cgdGhlIHByZXR0aWZpZWQgbG9nIGxpbmUgc2hvdWxkIGJlXG4gKiBmb3JtYXR0ZWQuIFRva2VucyBhcmUgZWl0aGVyIGxvZyBwcm9wZXJ0aWVzIGVuY2xvc2VkIGluIGN1cmx5IGJyYWNlcywgZS5nLlxuICogYHtsZXZlbExhYmVsfWAsIGB7cGlkfWAsIG9yIGB7cmVxLnVybH1gLCBvciBjb25kaXRpb25hbCBkaXJlY3RpdmVzIGluIGN1cmx5XG4gKiBicmFjZXMuIFRoZSBvbmx5IGNvbmRpdGlvbmFsIGRpcmVjdGl2ZXMgc3VwcG9ydGVkIGFyZSBgaWZgIGFuZCBgZW5kYCwgZS5nLlxuICogYHtpZiBwaWR9e3BpZH17ZW5kfWA7IGV2ZXJ5IGBpZmAgbXVzdCBoYXZlIGEgbWF0Y2hpbmcgYGVuZGAuIE5lc3RlZFxuICogY29uZGl0aW9ucyBhcmUgbm90IHN1cHBvcnRlZC5cbiAqXG4gKiBAdHlwZWRlZiB7c3RyaW5nfSBNZXNzYWdlRm9ybWF0U3RyaW5nXG4gKlxuICogQGV4YW1wbGVcbiAqIGB7bGV2ZWxMYWJlbH0gLSB7aWYgcGlkfXtwaWR9IC0ge2VuZH11cmw6e3JlcS51cmx9YFxuICovXG5cbi8qKlxuICogQHR5cGVkZWYge29iamVjdH0gUHJldHRpZnlNZXNzYWdlRXh0cmFzXG4gKiBAcHJvcGVydHkge29iamVjdH0gY29sb3JzIEF2YWlsYWJsZSBjb2xvciBmdW5jdGlvbnMgYmFzZWQgb24gYHVzZUNvbG9yYCAob3IgYGNvbG9yaXplYCkgY29udGV4dFxuICogdGhlIG9wdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBBIGZ1bmN0aW9uIHRoYXQgYWNjZXB0cyBhIGxvZyBvYmplY3QsIG5hbWUgb2YgdGhlIG1lc3NhZ2Uga2V5LCBhbmQgbmFtZSBvZlxuICogdGhlIGxldmVsIGxhYmVsIGtleSBhbmQgcmV0dXJucyBhIGZvcm1hdHRlZCBsb2cgbGluZS5cbiAqXG4gKiBOb3RlOiB0aGlzIGZ1bmN0aW9uIG11c3QgYmUgc3luY2hyb25vdXMuXG4gKlxuICogQHR5cGVkZWYge2Z1bmN0aW9ufSBNZXNzYWdlRm9ybWF0RnVuY3Rpb25cbiAqIEBwYXJhbSB7b2JqZWN0fSBsb2cgVGhlIGxvZyBvYmplY3QgdG8gYmUgcHJvY2Vzc2VkLlxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VLZXkgVGhlIG5hbWUgb2YgdGhlIGtleSBpbiB0aGUgYGxvZ2Agb2JqZWN0IHRoYXRcbiAqIGNvbnRhaW5zIHRoZSBsb2cgbWVzc2FnZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbExhYmVsIFRoZSBuYW1lIG9mIHRoZSBrZXkgaW4gdGhlIGBsb2dgIG9iamVjdCB0aGF0XG4gKiBjb250YWlucyB0aGUgbG9nIGxldmVsIG5hbWUuXG4gKiBAcGFyYW0ge1ByZXR0aWZ5TWVzc2FnZUV4dHJhc30gZXh0cmFzIEFkZGl0aW9uYWwgZGF0YSBhdmFpbGFibGUgZm9yIG1lc3NhZ2UgY29udGV4dFxuICogQHJldHVybnMge3N0cmluZ31cbiAqXG4gKiBAZXhhbXBsZVxuICogZnVuY3Rpb24gKGxvZywgbWVzc2FnZUtleSwgbGV2ZWxMYWJlbCkge1xuICogICByZXR1cm4gYCR7bG9nW2xldmVsTGFiZWxdfSAtICR7bG9nW21lc3NhZ2VLZXldfWBcbiAqIH1cbiAqL1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/interpret-conditionals.js":
/*!**********************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/interpret-conditionals.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = interpretConditionals\n\nconst getPropertyValue = __webpack_require__(/*! ./get-property-value */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\")\n\n/**\n * Translates all conditional blocks from within the messageFormat. Translates\n * any matching {if key}{key}{end} statements and returns everything between\n * if and else blocks if the key provided was found in log.\n *\n * @param {MessageFormatString|MessageFormatFunction} messageFormat A format\n * string or function that defines how the logged message should be\n * conditionally formatted.\n * @param {object} log The log object to be modified.\n *\n * @returns {string} The parsed messageFormat.\n */\nfunction interpretConditionals (messageFormat, log) {\n  messageFormat = messageFormat.replace(/{if (.*?)}(.*?){end}/g, replacer)\n\n  // Remove non-terminated if blocks\n  messageFormat = messageFormat.replace(/{if (.*?)}/g, '')\n  // Remove floating end blocks\n  messageFormat = messageFormat.replace(/{end}/g, '')\n\n  return messageFormat.replace(/\\s+/g, ' ').trim()\n\n  function replacer (_, key, value) {\n    const propertyValue = getPropertyValue(log, key)\n    if (propertyValue && value.includes(key)) {\n      return value.replace(new RegExp('{' + key + '}', 'g'), propertyValue)\n    } else {\n      return ''\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2ludGVycHJldC1jb25kaXRpb25hbHMuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUEseUJBQXlCLG1CQUFPLENBQUMsOEZBQXNCOztBQUV2RDtBQUNBO0FBQ0EsaUJBQWlCLFFBQVEsS0FBSyxLQUFLO0FBQ25DO0FBQ0E7QUFDQSxXQUFXLDJDQUEyQztBQUN0RDtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQSwwQ0FBMEMsU0FBUyxNQUFNLElBQUk7O0FBRTdEO0FBQ0EsMENBQTBDLFNBQVM7QUFDbkQ7QUFDQSwwQ0FBMEMsSUFBSTs7QUFFOUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLFlBQVk7QUFDcEQsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvdW5kZXZ5L3BvcnRmb2xpby1wcm9qZWN0L25vZGVfbW9kdWxlcy9waW5vLXByZXR0eS9saWIvdXRpbHMvaW50ZXJwcmV0LWNvbmRpdGlvbmFscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBpbnRlcnByZXRDb25kaXRpb25hbHNcblxuY29uc3QgZ2V0UHJvcGVydHlWYWx1ZSA9IHJlcXVpcmUoJy4vZ2V0LXByb3BlcnR5LXZhbHVlJylcblxuLyoqXG4gKiBUcmFuc2xhdGVzIGFsbCBjb25kaXRpb25hbCBibG9ja3MgZnJvbSB3aXRoaW4gdGhlIG1lc3NhZ2VGb3JtYXQuIFRyYW5zbGF0ZXNcbiAqIGFueSBtYXRjaGluZyB7aWYga2V5fXtrZXl9e2VuZH0gc3RhdGVtZW50cyBhbmQgcmV0dXJucyBldmVyeXRoaW5nIGJldHdlZW5cbiAqIGlmIGFuZCBlbHNlIGJsb2NrcyBpZiB0aGUga2V5IHByb3ZpZGVkIHdhcyBmb3VuZCBpbiBsb2cuXG4gKlxuICogQHBhcmFtIHtNZXNzYWdlRm9ybWF0U3RyaW5nfE1lc3NhZ2VGb3JtYXRGdW5jdGlvbn0gbWVzc2FnZUZvcm1hdCBBIGZvcm1hdFxuICogc3RyaW5nIG9yIGZ1bmN0aW9uIHRoYXQgZGVmaW5lcyBob3cgdGhlIGxvZ2dlZCBtZXNzYWdlIHNob3VsZCBiZVxuICogY29uZGl0aW9uYWxseSBmb3JtYXR0ZWQuXG4gKiBAcGFyYW0ge29iamVjdH0gbG9nIFRoZSBsb2cgb2JqZWN0IHRvIGJlIG1vZGlmaWVkLlxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBwYXJzZWQgbWVzc2FnZUZvcm1hdC5cbiAqL1xuZnVuY3Rpb24gaW50ZXJwcmV0Q29uZGl0aW9uYWxzIChtZXNzYWdlRm9ybWF0LCBsb2cpIHtcbiAgbWVzc2FnZUZvcm1hdCA9IG1lc3NhZ2VGb3JtYXQucmVwbGFjZSgve2lmICguKj8pfSguKj8pe2VuZH0vZywgcmVwbGFjZXIpXG5cbiAgLy8gUmVtb3ZlIG5vbi10ZXJtaW5hdGVkIGlmIGJsb2Nrc1xuICBtZXNzYWdlRm9ybWF0ID0gbWVzc2FnZUZvcm1hdC5yZXBsYWNlKC97aWYgKC4qPyl9L2csICcnKVxuICAvLyBSZW1vdmUgZmxvYXRpbmcgZW5kIGJsb2Nrc1xuICBtZXNzYWdlRm9ybWF0ID0gbWVzc2FnZUZvcm1hdC5yZXBsYWNlKC97ZW5kfS9nLCAnJylcblxuICByZXR1cm4gbWVzc2FnZUZvcm1hdC5yZXBsYWNlKC9cXHMrL2csICcgJykudHJpbSgpXG5cbiAgZnVuY3Rpb24gcmVwbGFjZXIgKF8sIGtleSwgdmFsdWUpIHtcbiAgICBjb25zdCBwcm9wZXJ0eVZhbHVlID0gZ2V0UHJvcGVydHlWYWx1ZShsb2csIGtleSlcbiAgICBpZiAocHJvcGVydHlWYWx1ZSAmJiB2YWx1ZS5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZShuZXcgUmVnRXhwKCd7JyArIGtleSArICd9JywgJ2cnKSwgcHJvcGVydHlWYWx1ZSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICcnXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/interpret-conditionals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/is-object.js":
/*!*********************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/is-object.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = isObject\n\nfunction isObject (input) {\n  return Object.prototype.toString.apply(input) === '[object Object]'\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2lzLW9iamVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9pcy1vYmplY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gaXNPYmplY3RcblxuZnVuY3Rpb24gaXNPYmplY3QgKGlucHV0KSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmFwcGx5KGlucHV0KSA9PT0gJ1tvYmplY3QgT2JqZWN0XSdcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/is-object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/is-valid-date.js":
/*!*************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/is-valid-date.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = isValidDate\n\n/**\n * Checks if the argument is a JS Date and not 'Invalid Date'.\n *\n * @param {Date} date The date to check.\n *\n * @returns {boolean} true if the argument is a JS Date and not 'Invalid Date'.\n */\nfunction isValidDate (date) {\n  return date instanceof Date && !Number.isNaN(date.getTime())\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2lzLXZhbGlkLWRhdGUuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvdW5kZXZ5L3BvcnRmb2xpby1wcm9qZWN0L25vZGVfbW9kdWxlcy9waW5vLXByZXR0eS9saWIvdXRpbHMvaXMtdmFsaWQtZGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBpc1ZhbGlkRGF0ZVxuXG4vKipcbiAqIENoZWNrcyBpZiB0aGUgYXJndW1lbnQgaXMgYSBKUyBEYXRlIGFuZCBub3QgJ0ludmFsaWQgRGF0ZScuXG4gKlxuICogQHBhcmFtIHtEYXRlfSBkYXRlIFRoZSBkYXRlIHRvIGNoZWNrLlxuICpcbiAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIHRoZSBhcmd1bWVudCBpcyBhIEpTIERhdGUgYW5kIG5vdCAnSW52YWxpZCBEYXRlJy5cbiAqL1xuZnVuY3Rpb24gaXNWYWxpZERhdGUgKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUgaW5zdGFuY2VvZiBEYXRlICYmICFOdW1iZXIuaXNOYU4oZGF0ZS5nZXRUaW1lKCkpXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/is-valid-date.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js":
/*!***************************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js ***!
  \***************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = joinLinesWithIndentation\n\n/**\n * @typedef {object} JoinLinesWithIndentationParams\n * @property {string} input The string to split and reformat.\n * @property {string} [ident] The indentation string. Default: `    ` (4 spaces).\n * @property {string} [eol] The end of line sequence to use when rejoining\n * the lines. Default: `'\\n'`.\n */\n\n/**\n * Given a string with line separators, either `\\r\\n` or `\\n`, add indentation\n * to all lines subsequent to the first line and rejoin the lines using an\n * end of line sequence.\n *\n * @param {JoinLinesWithIndentationParams} input\n *\n * @returns {string} A string with lines subsequent to the first indented\n * with the given indentation sequence.\n */\nfunction joinLinesWithIndentation ({ input, ident = '    ', eol = '\\n' }) {\n  const lines = input.split(/\\r?\\n/)\n  for (let i = 1; i < lines.length; i += 1) {\n    lines[i] = ident + lines[i]\n  }\n  return lines.join(eol)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL2pvaW4tbGluZXMtd2l0aC1pbmRlbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdDQUFnQztBQUMzQztBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EscUNBQXFDLG1DQUFtQztBQUN4RTtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9qb2luLWxpbmVzLXdpdGgtaW5kZW50YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gam9pbkxpbmVzV2l0aEluZGVudGF0aW9uXG5cbi8qKlxuICogQHR5cGVkZWYge29iamVjdH0gSm9pbkxpbmVzV2l0aEluZGVudGF0aW9uUGFyYW1zXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaW5wdXQgVGhlIHN0cmluZyB0byBzcGxpdCBhbmQgcmVmb3JtYXQuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gW2lkZW50XSBUaGUgaW5kZW50YXRpb24gc3RyaW5nLiBEZWZhdWx0OiBgICAgIGAgKDQgc3BhY2VzKS5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbZW9sXSBUaGUgZW5kIG9mIGxpbmUgc2VxdWVuY2UgdG8gdXNlIHdoZW4gcmVqb2luaW5nXG4gKiB0aGUgbGluZXMuIERlZmF1bHQ6IGAnXFxuJ2AuXG4gKi9cblxuLyoqXG4gKiBHaXZlbiBhIHN0cmluZyB3aXRoIGxpbmUgc2VwYXJhdG9ycywgZWl0aGVyIGBcXHJcXG5gIG9yIGBcXG5gLCBhZGQgaW5kZW50YXRpb25cbiAqIHRvIGFsbCBsaW5lcyBzdWJzZXF1ZW50IHRvIHRoZSBmaXJzdCBsaW5lIGFuZCByZWpvaW4gdGhlIGxpbmVzIHVzaW5nIGFuXG4gKiBlbmQgb2YgbGluZSBzZXF1ZW5jZS5cbiAqXG4gKiBAcGFyYW0ge0pvaW5MaW5lc1dpdGhJbmRlbnRhdGlvblBhcmFtc30gaW5wdXRcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIHN0cmluZyB3aXRoIGxpbmVzIHN1YnNlcXVlbnQgdG8gdGhlIGZpcnN0IGluZGVudGVkXG4gKiB3aXRoIHRoZSBnaXZlbiBpbmRlbnRhdGlvbiBzZXF1ZW5jZS5cbiAqL1xuZnVuY3Rpb24gam9pbkxpbmVzV2l0aEluZGVudGF0aW9uICh7IGlucHV0LCBpZGVudCA9ICcgICAgJywgZW9sID0gJ1xcbicgfSkge1xuICBjb25zdCBsaW5lcyA9IGlucHV0LnNwbGl0KC9cXHI/XFxuLylcbiAgZm9yIChsZXQgaSA9IDE7IGkgPCBsaW5lcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGxpbmVzW2ldID0gaWRlbnQgKyBsaW5lc1tpXVxuICB9XG4gIHJldHVybiBsaW5lcy5qb2luKGVvbClcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/noop.js":
/*!****************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/noop.js ***!
  \****************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function noop () {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL25vb3AuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVoiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9ub29wLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG5vb3AgKCkge31cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/noop.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/parse-factory-options.js":
/*!*********************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/parse-factory-options.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = parseFactoryOptions\n\nconst {\n  LEVEL_NAMES\n} = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\nconst colors = __webpack_require__(/*! ../colors */ \"(ssr)/./node_modules/pino-pretty/lib/colors.js\")\nconst handleCustomLevelsOpts = __webpack_require__(/*! ./handle-custom-levels-opts */ \"(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-opts.js\")\nconst handleCustomLevelsNamesOpts = __webpack_require__(/*! ./handle-custom-levels-names-opts */ \"(ssr)/./node_modules/pino-pretty/lib/utils/handle-custom-levels-names-opts.js\")\nconst handleLevelLabelData = __webpack_require__(/*! ./get-level-label-data */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-level-label-data.js\")\n\n/**\n * A `PrettyContext` is an object to be used by the various functions that\n * process log data. It is derived from the provided {@link PinoPrettyOptions}.\n * It may be used as a `this` context.\n *\n * @typedef {object} PrettyContext\n * @property {string} EOL The escape sequence chosen as the line terminator.\n * @property {string} IDENT The string to use as the indentation sequence.\n * @property {ColorizerFunc} colorizer A configured colorizer function.\n * @property {Array[Array<number, string>]} customColors A set of custom color\n * names associated with level numbers.\n * @property {object} customLevelNames A hash of level numbers to level names,\n * e.g. `{ 30: \"info\" }`.\n * @property {object} customLevels A hash of level names to level numbers,\n * e.g. `{ info: 30 }`.\n * @property {CustomPrettifiers} customPrettifiers A hash of custom prettifier\n * functions.\n * @property {object} customProperties Comprised of `customLevels` and\n * `customLevelNames` if such options are provided.\n * @property {string[]} errorLikeObjectKeys The key names in the log data that\n * should be considered as holding error objects.\n * @property {string[]} errorProps A list of error object keys that should be\n * included in the output.\n * @property {function} getLevelLabelData Pass a numeric level to return [levelLabelString,levelNum]\n * @property {boolean} hideObject Indicates the prettifier should omit objects\n * in the output.\n * @property {string[]} ignoreKeys Set of log data keys to omit.\n * @property {string[]} includeKeys Opposite of `ignoreKeys`.\n * @property {boolean} levelFirst Indicates the level should be printed first.\n * @property {string} levelKey Name of the key in the log data that contains\n * the message.\n * @property {string} levelLabel Format token to represent the position of the\n * level name in the output string.\n * @property {MessageFormatString|MessageFormatFunction} messageFormat\n * @property {string} messageKey Name of the key in the log data that contains\n * the message.\n * @property {string|number} minimumLevel The minimum log level to process\n * and output.\n * @property {ColorizerFunc} objectColorizer\n * @property {boolean} singleLine Indicates objects should be printed on a\n * single output line.\n * @property {string} timestampKey The name of the key in the log data that\n * contains the log timestamp.\n * @property {boolean} translateTime Indicates if timestamps should be\n * translated to a human-readable string.\n * @property {boolean} useOnlyCustomProps\n */\n\n/**\n * @param {PinoPrettyOptions} options The user supplied object of options.\n *\n * @returns {PrettyContext}\n */\nfunction parseFactoryOptions (options) {\n  const EOL = options.crlf ? '\\r\\n' : '\\n'\n  const IDENT = '    '\n  const {\n    customPrettifiers,\n    errorLikeObjectKeys,\n    hideObject,\n    levelFirst,\n    levelKey,\n    levelLabel,\n    messageFormat,\n    messageKey,\n    minimumLevel,\n    singleLine,\n    timestampKey,\n    translateTime\n  } = options\n  const errorProps = options.errorProps.split(',')\n  const useOnlyCustomProps = typeof options.useOnlyCustomProps === 'boolean'\n    ? options.useOnlyCustomProps\n    : (options.useOnlyCustomProps === 'true')\n  const customLevels = handleCustomLevelsOpts(options.customLevels)\n  const customLevelNames = handleCustomLevelsNamesOpts(options.customLevels)\n  const getLevelLabelData = handleLevelLabelData(useOnlyCustomProps, customLevels, customLevelNames)\n\n  let customColors\n  if (options.customColors) {\n    if (typeof options.customColors === 'string') {\n      customColors = options.customColors.split(',').reduce((agg, value) => {\n        const [level, color] = value.split(':')\n        const condition = useOnlyCustomProps\n          ? options.customLevels\n          : customLevelNames[level] !== undefined\n        const levelNum = condition\n          ? customLevelNames[level]\n          : LEVEL_NAMES[level]\n        const colorIdx = levelNum !== undefined\n          ? levelNum\n          : level\n        agg.push([colorIdx, color])\n        return agg\n      }, [])\n    } else if (typeof options.customColors === 'object') {\n      customColors = Object.keys(options.customColors).reduce((agg, value) => {\n        const [level, color] = [value, options.customColors[value]]\n        const condition = useOnlyCustomProps\n          ? options.customLevels\n          : customLevelNames[level] !== undefined\n        const levelNum = condition\n          ? customLevelNames[level]\n          : LEVEL_NAMES[level]\n        const colorIdx = levelNum !== undefined\n          ? levelNum\n          : level\n        agg.push([colorIdx, color])\n        return agg\n      }, [])\n    } else {\n      throw new Error('options.customColors must be of type string or object.')\n    }\n  }\n\n  const customProperties = { customLevels, customLevelNames }\n  if (useOnlyCustomProps === true && !options.customLevels) {\n    customProperties.customLevels = undefined\n    customProperties.customLevelNames = undefined\n  }\n\n  const includeKeys = options.include !== undefined\n    ? new Set(options.include.split(','))\n    : undefined\n  const ignoreKeys = (!includeKeys && options.ignore)\n    ? new Set(options.ignore.split(','))\n    : undefined\n\n  const colorizer = colors(options.colorize, customColors, useOnlyCustomProps)\n  const objectColorizer = options.colorizeObjects\n    ? colorizer\n    : colors(false, [], false)\n\n  return {\n    EOL,\n    IDENT,\n    colorizer,\n    customColors,\n    customLevelNames,\n    customLevels,\n    customPrettifiers,\n    customProperties,\n    errorLikeObjectKeys,\n    errorProps,\n    getLevelLabelData,\n    hideObject,\n    ignoreKeys,\n    includeKeys,\n    levelFirst,\n    levelKey,\n    levelLabel,\n    messageFormat,\n    messageKey,\n    minimumLevel,\n    objectColorizer,\n    singleLine,\n    timestampKey,\n    translateTime,\n    useOnlyCustomProps\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/parse-factory-options.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error-log.js":
/*!******************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-error-log.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyErrorLog\n\nconst {\n  LOGGER_KEYS\n} = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\nconst isObject = __webpack_require__(/*! ./is-object */ \"(ssr)/./node_modules/pino-pretty/lib/utils/is-object.js\")\nconst joinLinesWithIndentation = __webpack_require__(/*! ./join-lines-with-indentation */ \"(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js\")\nconst prettifyObject = __webpack_require__(/*! ./prettify-object */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-object.js\")\n\n/**\n * @typedef {object} PrettifyErrorLogParams\n * @property {object} log The error log to prettify.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Given a log object that has a `type: 'Error'` key, prettify the object and\n * return the result. In other\n *\n * @param {PrettifyErrorLogParams} input\n *\n * @returns {string} A string that represents the prettified error log.\n */\nfunction prettifyErrorLog ({ log, context }) {\n  const {\n    EOL: eol,\n    IDENT: ident,\n    errorProps: errorProperties,\n    messageKey\n  } = context\n  const stack = log.stack\n  const joinedLines = joinLinesWithIndentation({ input: stack, ident, eol })\n  let result = `${ident}${joinedLines}${eol}`\n\n  if (errorProperties.length > 0) {\n    const excludeProperties = LOGGER_KEYS.concat(messageKey, 'type', 'stack')\n    let propertiesToPrint\n    if (errorProperties[0] === '*') {\n      // Print all sibling properties except for the standard exclusions.\n      propertiesToPrint = Object.keys(log).filter(k => excludeProperties.includes(k) === false)\n    } else {\n      // Print only specified properties unless the property is a standard exclusion.\n      propertiesToPrint = errorProperties.filter(k => excludeProperties.includes(k) === false)\n    }\n\n    for (let i = 0; i < propertiesToPrint.length; i += 1) {\n      const key = propertiesToPrint[i]\n      if (key in log === false) continue\n      if (isObject(log[key])) {\n        // The nested object may have \"logger\" type keys but since they are not\n        // at the root level of the object being processed, we want to print them.\n        // Thus, we invoke with `excludeLoggerKeys: false`.\n        const prettifiedObject = prettifyObject({\n          log: log[key],\n          excludeLoggerKeys: false,\n          context: {\n            ...context,\n            IDENT: ident + ident\n          }\n        })\n        result = `${result}${ident}${key}: {${eol}${prettifiedObject}${ident}}${eol}`\n        continue\n      }\n      result = `${result}${ident}${key}: ${log[key]}${eol}`\n    }\n  }\n\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LWVycm9yLWxvZy5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLG1CQUFPLENBQUMsdUVBQWM7O0FBRTFCLGlCQUFpQixtQkFBTyxDQUFDLDRFQUFhO0FBQ3RDLGlDQUFpQyxtQkFBTyxDQUFDLGdIQUErQjtBQUN4RSx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBbUI7O0FBRWxEO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsUUFBUTtBQUN0QixjQUFjLGVBQWU7QUFDN0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsd0JBQXdCO0FBQ25DO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsNkJBQTZCLGNBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLGlEQUFpRCwwQkFBMEI7QUFDM0Usa0JBQWtCLE1BQU0sRUFBRSxZQUFZLEVBQUUsSUFBSTs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsOEJBQThCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULG9CQUFvQixPQUFPLEVBQUUsTUFBTSxFQUFFLElBQUksR0FBRyxFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRSxPQUFPLEVBQUUsSUFBSTtBQUNwRjtBQUNBO0FBQ0Esa0JBQWtCLE9BQU8sRUFBRSxNQUFNLEVBQUUsSUFBSSxJQUFJLFNBQVMsRUFBRSxJQUFJO0FBQzFEO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3VuZGV2eS9wb3J0Zm9saW8tcHJvamVjdC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LWVycm9yLWxvZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwcmV0dGlmeUVycm9yTG9nXG5cbmNvbnN0IHtcbiAgTE9HR0VSX0tFWVNcbn0gPSByZXF1aXJlKCcuLi9jb25zdGFudHMnKVxuXG5jb25zdCBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXMtb2JqZWN0JylcbmNvbnN0IGpvaW5MaW5lc1dpdGhJbmRlbnRhdGlvbiA9IHJlcXVpcmUoJy4vam9pbi1saW5lcy13aXRoLWluZGVudGF0aW9uJylcbmNvbnN0IHByZXR0aWZ5T2JqZWN0ID0gcmVxdWlyZSgnLi9wcmV0dGlmeS1vYmplY3QnKVxuXG4vKipcbiAqIEB0eXBlZGVmIHtvYmplY3R9IFByZXR0aWZ5RXJyb3JMb2dQYXJhbXNcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBsb2cgVGhlIGVycm9yIGxvZyB0byBwcmV0dGlmeS5cbiAqIEBwcm9wZXJ0eSB7UHJldHR5Q29udGV4dH0gY29udGV4dCBUaGUgY29udGV4dCBvYmplY3QgYnVpbHQgZnJvbSBwYXJzaW5nXG4gKiB0aGUgb3B0aW9ucy5cbiAqL1xuXG4vKipcbiAqIEdpdmVuIGEgbG9nIG9iamVjdCB0aGF0IGhhcyBhIGB0eXBlOiAnRXJyb3InYCBrZXksIHByZXR0aWZ5IHRoZSBvYmplY3QgYW5kXG4gKiByZXR1cm4gdGhlIHJlc3VsdC4gSW4gb3RoZXJcbiAqXG4gKiBAcGFyYW0ge1ByZXR0aWZ5RXJyb3JMb2dQYXJhbXN9IGlucHV0XG4gKlxuICogQHJldHVybnMge3N0cmluZ30gQSBzdHJpbmcgdGhhdCByZXByZXNlbnRzIHRoZSBwcmV0dGlmaWVkIGVycm9yIGxvZy5cbiAqL1xuZnVuY3Rpb24gcHJldHRpZnlFcnJvckxvZyAoeyBsb2csIGNvbnRleHQgfSkge1xuICBjb25zdCB7XG4gICAgRU9MOiBlb2wsXG4gICAgSURFTlQ6IGlkZW50LFxuICAgIGVycm9yUHJvcHM6IGVycm9yUHJvcGVydGllcyxcbiAgICBtZXNzYWdlS2V5XG4gIH0gPSBjb250ZXh0XG4gIGNvbnN0IHN0YWNrID0gbG9nLnN0YWNrXG4gIGNvbnN0IGpvaW5lZExpbmVzID0gam9pbkxpbmVzV2l0aEluZGVudGF0aW9uKHsgaW5wdXQ6IHN0YWNrLCBpZGVudCwgZW9sIH0pXG4gIGxldCByZXN1bHQgPSBgJHtpZGVudH0ke2pvaW5lZExpbmVzfSR7ZW9sfWBcblxuICBpZiAoZXJyb3JQcm9wZXJ0aWVzLmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCBleGNsdWRlUHJvcGVydGllcyA9IExPR0dFUl9LRVlTLmNvbmNhdChtZXNzYWdlS2V5LCAndHlwZScsICdzdGFjaycpXG4gICAgbGV0IHByb3BlcnRpZXNUb1ByaW50XG4gICAgaWYgKGVycm9yUHJvcGVydGllc1swXSA9PT0gJyonKSB7XG4gICAgICAvLyBQcmludCBhbGwgc2libGluZyBwcm9wZXJ0aWVzIGV4Y2VwdCBmb3IgdGhlIHN0YW5kYXJkIGV4Y2x1c2lvbnMuXG4gICAgICBwcm9wZXJ0aWVzVG9QcmludCA9IE9iamVjdC5rZXlzKGxvZykuZmlsdGVyKGsgPT4gZXhjbHVkZVByb3BlcnRpZXMuaW5jbHVkZXMoaykgPT09IGZhbHNlKVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBQcmludCBvbmx5IHNwZWNpZmllZCBwcm9wZXJ0aWVzIHVubGVzcyB0aGUgcHJvcGVydHkgaXMgYSBzdGFuZGFyZCBleGNsdXNpb24uXG4gICAgICBwcm9wZXJ0aWVzVG9QcmludCA9IGVycm9yUHJvcGVydGllcy5maWx0ZXIoayA9PiBleGNsdWRlUHJvcGVydGllcy5pbmNsdWRlcyhrKSA9PT0gZmFsc2UpXG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9wZXJ0aWVzVG9QcmludC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY29uc3Qga2V5ID0gcHJvcGVydGllc1RvUHJpbnRbaV1cbiAgICAgIGlmIChrZXkgaW4gbG9nID09PSBmYWxzZSkgY29udGludWVcbiAgICAgIGlmIChpc09iamVjdChsb2dba2V5XSkpIHtcbiAgICAgICAgLy8gVGhlIG5lc3RlZCBvYmplY3QgbWF5IGhhdmUgXCJsb2dnZXJcIiB0eXBlIGtleXMgYnV0IHNpbmNlIHRoZXkgYXJlIG5vdFxuICAgICAgICAvLyBhdCB0aGUgcm9vdCBsZXZlbCBvZiB0aGUgb2JqZWN0IGJlaW5nIHByb2Nlc3NlZCwgd2Ugd2FudCB0byBwcmludCB0aGVtLlxuICAgICAgICAvLyBUaHVzLCB3ZSBpbnZva2Ugd2l0aCBgZXhjbHVkZUxvZ2dlcktleXM6IGZhbHNlYC5cbiAgICAgICAgY29uc3QgcHJldHRpZmllZE9iamVjdCA9IHByZXR0aWZ5T2JqZWN0KHtcbiAgICAgICAgICBsb2c6IGxvZ1trZXldLFxuICAgICAgICAgIGV4Y2x1ZGVMb2dnZXJLZXlzOiBmYWxzZSxcbiAgICAgICAgICBjb250ZXh0OiB7XG4gICAgICAgICAgICAuLi5jb250ZXh0LFxuICAgICAgICAgICAgSURFTlQ6IGlkZW50ICsgaWRlbnRcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHJlc3VsdCA9IGAke3Jlc3VsdH0ke2lkZW50fSR7a2V5fTogeyR7ZW9sfSR7cHJldHRpZmllZE9iamVjdH0ke2lkZW50fX0ke2VvbH1gXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG4gICAgICByZXN1bHQgPSBgJHtyZXN1bHR9JHtpZGVudH0ke2tleX06ICR7bG9nW2tleV19JHtlb2x9YFxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error-log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error.js":
/*!**************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-error.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyError\n\nconst joinLinesWithIndentation = __webpack_require__(/*! ./join-lines-with-indentation */ \"(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js\")\n\n/**\n * @typedef {object} PrettifyErrorParams\n * @property {string} keyName The key assigned to this error in the log object.\n * @property {string} lines The STRINGIFIED error. If the error field has a\n *  custom prettifier, that should be pre-applied as well.\n * @property {string} ident The indentation sequence to use.\n * @property {string} eol The EOL sequence to use.\n */\n\n/**\n * Prettifies an error string into a multi-line format.\n *\n * @param {PrettifyErrorParams} input\n *\n * @returns {string}\n */\nfunction prettifyError ({ keyName, lines, eol, ident }) {\n  let result = ''\n  const joinedLines = joinLinesWithIndentation({ input: lines, ident, eol })\n  const splitLines = `${ident}${keyName}: ${joinedLines}${eol}`.split(eol)\n\n  for (let j = 0; j < splitLines.length; j += 1) {\n    if (j !== 0) result += eol\n\n    const line = splitLines[j]\n    if (/^\\s*\"stack\"/.test(line)) {\n      const matches = /^(\\s*\"stack\":)\\s*(\".*\"),?$/.exec(line)\n      /* istanbul ignore else */\n      if (matches && matches.length === 3) {\n        const indentSize = /^\\s*/.exec(line)[0].length + 4\n        const indentation = ' '.repeat(indentSize)\n        const stackMessage = matches[2]\n        result += matches[1] + eol + indentation + JSON.parse(stackMessage).replace(/\\n/g, eol + indentation)\n      } else {\n        result += line\n      }\n    } else {\n      result += line\n    }\n  }\n\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LWVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBLGlDQUFpQyxtQkFBTyxDQUFDLGdIQUErQjs7QUFFeEU7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QjtBQUNBLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEM7QUFDQSxhQUFhO0FBQ2I7QUFDQSwwQkFBMEIsNEJBQTRCO0FBQ3REO0FBQ0EsaURBQWlELDBCQUEwQjtBQUMzRSx3QkFBd0IsTUFBTSxFQUFFLFFBQVEsSUFBSSxZQUFZLEVBQUUsSUFBSTs7QUFFOUQsa0JBQWtCLHVCQUF1QjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3VuZGV2eS9wb3J0Zm9saW8tcHJvamVjdC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LWVycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByZXR0aWZ5RXJyb3JcblxuY29uc3Qgam9pbkxpbmVzV2l0aEluZGVudGF0aW9uID0gcmVxdWlyZSgnLi9qb2luLWxpbmVzLXdpdGgtaW5kZW50YXRpb24nKVxuXG4vKipcbiAqIEB0eXBlZGVmIHtvYmplY3R9IFByZXR0aWZ5RXJyb3JQYXJhbXNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBrZXlOYW1lIFRoZSBrZXkgYXNzaWduZWQgdG8gdGhpcyBlcnJvciBpbiB0aGUgbG9nIG9iamVjdC5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBsaW5lcyBUaGUgU1RSSU5HSUZJRUQgZXJyb3IuIElmIHRoZSBlcnJvciBmaWVsZCBoYXMgYVxuICogIGN1c3RvbSBwcmV0dGlmaWVyLCB0aGF0IHNob3VsZCBiZSBwcmUtYXBwbGllZCBhcyB3ZWxsLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IGlkZW50IFRoZSBpbmRlbnRhdGlvbiBzZXF1ZW5jZSB0byB1c2UuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gZW9sIFRoZSBFT0wgc2VxdWVuY2UgdG8gdXNlLlxuICovXG5cbi8qKlxuICogUHJldHRpZmllcyBhbiBlcnJvciBzdHJpbmcgaW50byBhIG11bHRpLWxpbmUgZm9ybWF0LlxuICpcbiAqIEBwYXJhbSB7UHJldHRpZnlFcnJvclBhcmFtc30gaW5wdXRcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBwcmV0dGlmeUVycm9yICh7IGtleU5hbWUsIGxpbmVzLCBlb2wsIGlkZW50IH0pIHtcbiAgbGV0IHJlc3VsdCA9ICcnXG4gIGNvbnN0IGpvaW5lZExpbmVzID0gam9pbkxpbmVzV2l0aEluZGVudGF0aW9uKHsgaW5wdXQ6IGxpbmVzLCBpZGVudCwgZW9sIH0pXG4gIGNvbnN0IHNwbGl0TGluZXMgPSBgJHtpZGVudH0ke2tleU5hbWV9OiAke2pvaW5lZExpbmVzfSR7ZW9sfWAuc3BsaXQoZW9sKVxuXG4gIGZvciAobGV0IGogPSAwOyBqIDwgc3BsaXRMaW5lcy5sZW5ndGg7IGogKz0gMSkge1xuICAgIGlmIChqICE9PSAwKSByZXN1bHQgKz0gZW9sXG5cbiAgICBjb25zdCBsaW5lID0gc3BsaXRMaW5lc1tqXVxuICAgIGlmICgvXlxccypcInN0YWNrXCIvLnRlc3QobGluZSkpIHtcbiAgICAgIGNvbnN0IG1hdGNoZXMgPSAvXihcXHMqXCJzdGFja1wiOilcXHMqKFwiLipcIiksPyQvLmV4ZWMobGluZSlcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgICBpZiAobWF0Y2hlcyAmJiBtYXRjaGVzLmxlbmd0aCA9PT0gMykge1xuICAgICAgICBjb25zdCBpbmRlbnRTaXplID0gL15cXHMqLy5leGVjKGxpbmUpWzBdLmxlbmd0aCArIDRcbiAgICAgICAgY29uc3QgaW5kZW50YXRpb24gPSAnICcucmVwZWF0KGluZGVudFNpemUpXG4gICAgICAgIGNvbnN0IHN0YWNrTWVzc2FnZSA9IG1hdGNoZXNbMl1cbiAgICAgICAgcmVzdWx0ICs9IG1hdGNoZXNbMV0gKyBlb2wgKyBpbmRlbnRhdGlvbiArIEpTT04ucGFyc2Uoc3RhY2tNZXNzYWdlKS5yZXBsYWNlKC9cXG4vZywgZW9sICsgaW5kZW50YXRpb24pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgKz0gbGluZVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQgKz0gbGluZVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-level.js":
/*!**************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-level.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyLevel\n\nconst getPropertyValue = __webpack_require__(/*! ./get-property-value */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\")\n\n/**\n * @typedef {object} PrettifyLevelParams\n * @property {object} log The log object.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Checks if the passed in log has a `level` value and returns a prettified\n * string for that level if so.\n *\n * @param {PrettifyLevelParams} input\n *\n * @returns {undefined|string} If `log` does not have a `level` property then\n * `undefined` will be returned. Otherwise, a string from the specified\n * `colorizer` is returned.\n */\nfunction prettifyLevel ({ log, context }) {\n  const {\n    colorizer,\n    customLevels,\n    customLevelNames,\n    levelKey,\n    getLevelLabelData\n  } = context\n  const prettifier = context.customPrettifiers?.level\n  const output = getPropertyValue(log, levelKey)\n  if (output === undefined) return undefined\n  const labelColorized = colorizer(output, { customLevels, customLevelNames })\n  if (prettifier) {\n    const [label] = getLevelLabelData(output)\n    return prettifier(output, levelKey, log, { label, labelColorized, colors: colorizer.colors })\n  }\n  return labelColorized\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LWxldmVsLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBLHlCQUF5QixtQkFBTyxDQUFDLDhGQUFzQjs7QUFFdkQ7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsZUFBZTtBQUM3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEM7QUFDQSxhQUFhLGtCQUFrQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsY0FBYztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLGdDQUFnQztBQUM3RTtBQUNBO0FBQ0EsK0NBQStDLGlEQUFpRDtBQUNoRztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9wcmV0dGlmeS1sZXZlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwcmV0dGlmeUxldmVsXG5cbmNvbnN0IGdldFByb3BlcnR5VmFsdWUgPSByZXF1aXJlKCcuL2dldC1wcm9wZXJ0eS12YWx1ZScpXG5cbi8qKlxuICogQHR5cGVkZWYge29iamVjdH0gUHJldHRpZnlMZXZlbFBhcmFtc1xuICogQHByb3BlcnR5IHtvYmplY3R9IGxvZyBUaGUgbG9nIG9iamVjdC5cbiAqIEBwcm9wZXJ0eSB7UHJldHR5Q29udGV4dH0gY29udGV4dCBUaGUgY29udGV4dCBvYmplY3QgYnVpbHQgZnJvbSBwYXJzaW5nXG4gKiB0aGUgb3B0aW9ucy5cbiAqL1xuXG4vKipcbiAqIENoZWNrcyBpZiB0aGUgcGFzc2VkIGluIGxvZyBoYXMgYSBgbGV2ZWxgIHZhbHVlIGFuZCByZXR1cm5zIGEgcHJldHRpZmllZFxuICogc3RyaW5nIGZvciB0aGF0IGxldmVsIGlmIHNvLlxuICpcbiAqIEBwYXJhbSB7UHJldHRpZnlMZXZlbFBhcmFtc30gaW5wdXRcbiAqXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfHN0cmluZ30gSWYgYGxvZ2AgZG9lcyBub3QgaGF2ZSBhIGBsZXZlbGAgcHJvcGVydHkgdGhlblxuICogYHVuZGVmaW5lZGAgd2lsbCBiZSByZXR1cm5lZC4gT3RoZXJ3aXNlLCBhIHN0cmluZyBmcm9tIHRoZSBzcGVjaWZpZWRcbiAqIGBjb2xvcml6ZXJgIGlzIHJldHVybmVkLlxuICovXG5mdW5jdGlvbiBwcmV0dGlmeUxldmVsICh7IGxvZywgY29udGV4dCB9KSB7XG4gIGNvbnN0IHtcbiAgICBjb2xvcml6ZXIsXG4gICAgY3VzdG9tTGV2ZWxzLFxuICAgIGN1c3RvbUxldmVsTmFtZXMsXG4gICAgbGV2ZWxLZXksXG4gICAgZ2V0TGV2ZWxMYWJlbERhdGFcbiAgfSA9IGNvbnRleHRcbiAgY29uc3QgcHJldHRpZmllciA9IGNvbnRleHQuY3VzdG9tUHJldHRpZmllcnM/LmxldmVsXG4gIGNvbnN0IG91dHB1dCA9IGdldFByb3BlcnR5VmFsdWUobG9nLCBsZXZlbEtleSlcbiAgaWYgKG91dHB1dCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gdW5kZWZpbmVkXG4gIGNvbnN0IGxhYmVsQ29sb3JpemVkID0gY29sb3JpemVyKG91dHB1dCwgeyBjdXN0b21MZXZlbHMsIGN1c3RvbUxldmVsTmFtZXMgfSlcbiAgaWYgKHByZXR0aWZpZXIpIHtcbiAgICBjb25zdCBbbGFiZWxdID0gZ2V0TGV2ZWxMYWJlbERhdGEob3V0cHV0KVxuICAgIHJldHVybiBwcmV0dGlmaWVyKG91dHB1dCwgbGV2ZWxLZXksIGxvZywgeyBsYWJlbCwgbGFiZWxDb2xvcml6ZWQsIGNvbG9yczogY29sb3JpemVyLmNvbG9ycyB9KVxuICB9XG4gIHJldHVybiBsYWJlbENvbG9yaXplZFxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-level.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-message.js":
/*!****************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-message.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyMessage\n\nconst {\n  LEVELS\n} = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\nconst getPropertyValue = __webpack_require__(/*! ./get-property-value */ \"(ssr)/./node_modules/pino-pretty/lib/utils/get-property-value.js\")\nconst interpretConditionals = __webpack_require__(/*! ./interpret-conditionals */ \"(ssr)/./node_modules/pino-pretty/lib/utils/interpret-conditionals.js\")\n\n/**\n * @typedef {object} PrettifyMessageParams\n * @property {object} log The log object with the message to colorize.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies a message string if the given `log` has a message property.\n *\n * @param {PrettifyMessageParams} input\n *\n * @returns {undefined|string} If the message key is not found, or the message\n * key is not a string, then `undefined` will be returned. Otherwise, a string\n * that is the prettified message.\n */\nfunction prettifyMessage ({ log, context }) {\n  const {\n    colorizer,\n    customLevels,\n    levelKey,\n    levelLabel,\n    messageFormat,\n    messageKey,\n    useOnlyCustomProps\n  } = context\n  if (messageFormat && typeof messageFormat === 'string') {\n    const parsedMessageFormat = interpretConditionals(messageFormat, log)\n\n    const message = String(parsedMessageFormat).replace(\n      /{([^{}]+)}/g,\n      function (match, p1) {\n        // return log level as string instead of int\n        let level\n        if (p1 === levelLabel && (level = getPropertyValue(log, levelKey)) !== undefined) {\n          const condition = useOnlyCustomProps ? customLevels === undefined : customLevels[level] === undefined\n          return condition ? LEVELS[level] : customLevels[level]\n        }\n\n        // Parse nested key access, e.g. `{keyA.subKeyB}`.\n        return getPropertyValue(log, p1) || ''\n      })\n    return colorizer.message(message)\n  }\n  if (messageFormat && typeof messageFormat === 'function') {\n    const msg = messageFormat(log, messageKey, levelLabel, { colors: colorizer.colors })\n    return colorizer.message(msg)\n  }\n  if (messageKey in log === false) return undefined\n  if (typeof log[messageKey] !== 'string' && typeof log[messageKey] !== 'number' && typeof log[messageKey] !== 'boolean') return undefined\n  return colorizer.message(log[messageKey])\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LW1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUE7QUFDQTtBQUNBLEVBQUUsRUFBRSxtQkFBTyxDQUFDLHVFQUFjOztBQUUxQix5QkFBeUIsbUJBQU8sQ0FBQyw4RkFBc0I7QUFDdkQsOEJBQThCLG1CQUFPLENBQUMsc0dBQTBCOztBQUVoRTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLFFBQVE7QUFDdEIsY0FBYyxlQUFlO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEM7QUFDQSxhQUFhLGtCQUFrQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsY0FBYztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQSxRQUFRLEtBQUssSUFBSTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQ0FBMkMsYUFBYTtBQUN4RDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsMEJBQTBCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3VuZGV2eS9wb3J0Zm9saW8tcHJvamVjdC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LW1lc3NhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcHJldHRpZnlNZXNzYWdlXG5cbmNvbnN0IHtcbiAgTEVWRUxTXG59ID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzJylcblxuY29uc3QgZ2V0UHJvcGVydHlWYWx1ZSA9IHJlcXVpcmUoJy4vZ2V0LXByb3BlcnR5LXZhbHVlJylcbmNvbnN0IGludGVycHJldENvbmRpdGlvbmFscyA9IHJlcXVpcmUoJy4vaW50ZXJwcmV0LWNvbmRpdGlvbmFscycpXG5cbi8qKlxuICogQHR5cGVkZWYge29iamVjdH0gUHJldHRpZnlNZXNzYWdlUGFyYW1zXG4gKiBAcHJvcGVydHkge29iamVjdH0gbG9nIFRoZSBsb2cgb2JqZWN0IHdpdGggdGhlIG1lc3NhZ2UgdG8gY29sb3JpemUuXG4gKiBAcHJvcGVydHkge1ByZXR0eUNvbnRleHR9IGNvbnRleHQgVGhlIGNvbnRleHQgb2JqZWN0IGJ1aWx0IGZyb20gcGFyc2luZ1xuICogdGhlIG9wdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBQcmV0dGlmaWVzIGEgbWVzc2FnZSBzdHJpbmcgaWYgdGhlIGdpdmVuIGBsb2dgIGhhcyBhIG1lc3NhZ2UgcHJvcGVydHkuXG4gKlxuICogQHBhcmFtIHtQcmV0dGlmeU1lc3NhZ2VQYXJhbXN9IGlucHV0XG4gKlxuICogQHJldHVybnMge3VuZGVmaW5lZHxzdHJpbmd9IElmIHRoZSBtZXNzYWdlIGtleSBpcyBub3QgZm91bmQsIG9yIHRoZSBtZXNzYWdlXG4gKiBrZXkgaXMgbm90IGEgc3RyaW5nLCB0aGVuIGB1bmRlZmluZWRgIHdpbGwgYmUgcmV0dXJuZWQuIE90aGVyd2lzZSwgYSBzdHJpbmdcbiAqIHRoYXQgaXMgdGhlIHByZXR0aWZpZWQgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gcHJldHRpZnlNZXNzYWdlICh7IGxvZywgY29udGV4dCB9KSB7XG4gIGNvbnN0IHtcbiAgICBjb2xvcml6ZXIsXG4gICAgY3VzdG9tTGV2ZWxzLFxuICAgIGxldmVsS2V5LFxuICAgIGxldmVsTGFiZWwsXG4gICAgbWVzc2FnZUZvcm1hdCxcbiAgICBtZXNzYWdlS2V5LFxuICAgIHVzZU9ubHlDdXN0b21Qcm9wc1xuICB9ID0gY29udGV4dFxuICBpZiAobWVzc2FnZUZvcm1hdCAmJiB0eXBlb2YgbWVzc2FnZUZvcm1hdCA9PT0gJ3N0cmluZycpIHtcbiAgICBjb25zdCBwYXJzZWRNZXNzYWdlRm9ybWF0ID0gaW50ZXJwcmV0Q29uZGl0aW9uYWxzKG1lc3NhZ2VGb3JtYXQsIGxvZylcblxuICAgIGNvbnN0IG1lc3NhZ2UgPSBTdHJpbmcocGFyc2VkTWVzc2FnZUZvcm1hdCkucmVwbGFjZShcbiAgICAgIC97KFtee31dKyl9L2csXG4gICAgICBmdW5jdGlvbiAobWF0Y2gsIHAxKSB7XG4gICAgICAgIC8vIHJldHVybiBsb2cgbGV2ZWwgYXMgc3RyaW5nIGluc3RlYWQgb2YgaW50XG4gICAgICAgIGxldCBsZXZlbFxuICAgICAgICBpZiAocDEgPT09IGxldmVsTGFiZWwgJiYgKGxldmVsID0gZ2V0UHJvcGVydHlWYWx1ZShsb2csIGxldmVsS2V5KSkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGNvbnN0IGNvbmRpdGlvbiA9IHVzZU9ubHlDdXN0b21Qcm9wcyA/IGN1c3RvbUxldmVscyA9PT0gdW5kZWZpbmVkIDogY3VzdG9tTGV2ZWxzW2xldmVsXSA9PT0gdW5kZWZpbmVkXG4gICAgICAgICAgcmV0dXJuIGNvbmRpdGlvbiA/IExFVkVMU1tsZXZlbF0gOiBjdXN0b21MZXZlbHNbbGV2ZWxdXG4gICAgICAgIH1cblxuICAgICAgICAvLyBQYXJzZSBuZXN0ZWQga2V5IGFjY2VzcywgZS5nLiBge2tleUEuc3ViS2V5Qn1gLlxuICAgICAgICByZXR1cm4gZ2V0UHJvcGVydHlWYWx1ZShsb2csIHAxKSB8fCAnJ1xuICAgICAgfSlcbiAgICByZXR1cm4gY29sb3JpemVyLm1lc3NhZ2UobWVzc2FnZSlcbiAgfVxuICBpZiAobWVzc2FnZUZvcm1hdCAmJiB0eXBlb2YgbWVzc2FnZUZvcm1hdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnN0IG1zZyA9IG1lc3NhZ2VGb3JtYXQobG9nLCBtZXNzYWdlS2V5LCBsZXZlbExhYmVsLCB7IGNvbG9yczogY29sb3JpemVyLmNvbG9ycyB9KVxuICAgIHJldHVybiBjb2xvcml6ZXIubWVzc2FnZShtc2cpXG4gIH1cbiAgaWYgKG1lc3NhZ2VLZXkgaW4gbG9nID09PSBmYWxzZSkgcmV0dXJuIHVuZGVmaW5lZFxuICBpZiAodHlwZW9mIGxvZ1ttZXNzYWdlS2V5XSAhPT0gJ3N0cmluZycgJiYgdHlwZW9mIGxvZ1ttZXNzYWdlS2V5XSAhPT0gJ251bWJlcicgJiYgdHlwZW9mIGxvZ1ttZXNzYWdlS2V5XSAhPT0gJ2Jvb2xlYW4nKSByZXR1cm4gdW5kZWZpbmVkXG4gIHJldHVybiBjb2xvcml6ZXIubWVzc2FnZShsb2dbbWVzc2FnZUtleV0pXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-metadata.js":
/*!*****************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-metadata.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = prettifyMetadata\n\n/**\n * @typedef {object} PrettifyMetadataParams\n * @property {object} log The log that may or may not contain metadata to\n * be prettified.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies metadata that is usually present in a Pino log line. It looks for\n * fields `name`, `pid`, `hostname`, and `caller` and returns a formatted string using\n * the fields it finds.\n *\n * @param {PrettifyMetadataParams} input\n *\n * @returns {undefined|string} If no metadata is found then `undefined` is\n * returned. Otherwise, a string of prettified metadata is returned.\n */\nfunction prettifyMetadata ({ log, context }) {\n  const { customPrettifiers: prettifiers, colorizer } = context\n  let line = ''\n\n  if (log.name || log.pid || log.hostname) {\n    line += '('\n\n    if (log.name) {\n      line += prettifiers.name\n        ? prettifiers.name(log.name, 'name', log, { colors: colorizer.colors })\n        : log.name\n    }\n\n    if (log.pid) {\n      const prettyPid = prettifiers.pid\n        ? prettifiers.pid(log.pid, 'pid', log, { colors: colorizer.colors })\n        : log.pid\n      if (log.name && log.pid) {\n        line += '/' + prettyPid\n      } else {\n        line += prettyPid\n      }\n    }\n\n    if (log.hostname) {\n      // If `pid` and `name` were in the ignore keys list then we don't need\n      // the leading space.\n      const prettyHostname = prettifiers.hostname\n        ? prettifiers.hostname(log.hostname, 'hostname', log, { colors: colorizer.colors })\n        : log.hostname\n\n      line += `${line === '(' ? 'on' : ' on'} ${prettyHostname}`\n    }\n\n    line += ')'\n  }\n\n  if (log.caller) {\n    const prettyCaller = prettifiers.caller\n      ? prettifiers.caller(log.caller, 'caller', log, { colors: colorizer.colors })\n      : log.caller\n\n    line += `${line === '' ? '' : ' '}<${prettyCaller}>`\n  }\n\n  if (line === '') {\n    return undefined\n  } else {\n    return line\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LW1ldGFkYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsUUFBUTtBQUN0QjtBQUNBLGNBQWMsZUFBZTtBQUM3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHdCQUF3QjtBQUNuQztBQUNBLGFBQWEsa0JBQWtCO0FBQy9CO0FBQ0E7QUFDQSw2QkFBNkIsY0FBYztBQUMzQyxVQUFVLDRDQUE0QztBQUN0RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvREFBb0QsMEJBQTBCO0FBQzlFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlEQUFpRCwwQkFBMEI7QUFDM0U7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSwwQkFBMEI7QUFDMUY7O0FBRUEsaUJBQWlCLDZCQUE2QixFQUFFLGVBQWU7QUFDL0Q7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esd0RBQXdELDBCQUEwQjtBQUNsRjs7QUFFQSxlQUFlLHVCQUF1QixHQUFHLGFBQWE7QUFDdEQ7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9wcmV0dGlmeS1tZXRhZGF0YS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwcmV0dGlmeU1ldGFkYXRhXG5cbi8qKlxuICogQHR5cGVkZWYge29iamVjdH0gUHJldHRpZnlNZXRhZGF0YVBhcmFtc1xuICogQHByb3BlcnR5IHtvYmplY3R9IGxvZyBUaGUgbG9nIHRoYXQgbWF5IG9yIG1heSBub3QgY29udGFpbiBtZXRhZGF0YSB0b1xuICogYmUgcHJldHRpZmllZC5cbiAqIEBwcm9wZXJ0eSB7UHJldHR5Q29udGV4dH0gY29udGV4dCBUaGUgY29udGV4dCBvYmplY3QgYnVpbHQgZnJvbSBwYXJzaW5nXG4gKiB0aGUgb3B0aW9ucy5cbiAqL1xuXG4vKipcbiAqIFByZXR0aWZpZXMgbWV0YWRhdGEgdGhhdCBpcyB1c3VhbGx5IHByZXNlbnQgaW4gYSBQaW5vIGxvZyBsaW5lLiBJdCBsb29rcyBmb3JcbiAqIGZpZWxkcyBgbmFtZWAsIGBwaWRgLCBgaG9zdG5hbWVgLCBhbmQgYGNhbGxlcmAgYW5kIHJldHVybnMgYSBmb3JtYXR0ZWQgc3RyaW5nIHVzaW5nXG4gKiB0aGUgZmllbGRzIGl0IGZpbmRzLlxuICpcbiAqIEBwYXJhbSB7UHJldHRpZnlNZXRhZGF0YVBhcmFtc30gaW5wdXRcbiAqXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfHN0cmluZ30gSWYgbm8gbWV0YWRhdGEgaXMgZm91bmQgdGhlbiBgdW5kZWZpbmVkYCBpc1xuICogcmV0dXJuZWQuIE90aGVyd2lzZSwgYSBzdHJpbmcgb2YgcHJldHRpZmllZCBtZXRhZGF0YSBpcyByZXR1cm5lZC5cbiAqL1xuZnVuY3Rpb24gcHJldHRpZnlNZXRhZGF0YSAoeyBsb2csIGNvbnRleHQgfSkge1xuICBjb25zdCB7IGN1c3RvbVByZXR0aWZpZXJzOiBwcmV0dGlmaWVycywgY29sb3JpemVyIH0gPSBjb250ZXh0XG4gIGxldCBsaW5lID0gJydcblxuICBpZiAobG9nLm5hbWUgfHwgbG9nLnBpZCB8fCBsb2cuaG9zdG5hbWUpIHtcbiAgICBsaW5lICs9ICcoJ1xuXG4gICAgaWYgKGxvZy5uYW1lKSB7XG4gICAgICBsaW5lICs9IHByZXR0aWZpZXJzLm5hbWVcbiAgICAgICAgPyBwcmV0dGlmaWVycy5uYW1lKGxvZy5uYW1lLCAnbmFtZScsIGxvZywgeyBjb2xvcnM6IGNvbG9yaXplci5jb2xvcnMgfSlcbiAgICAgICAgOiBsb2cubmFtZVxuICAgIH1cblxuICAgIGlmIChsb2cucGlkKSB7XG4gICAgICBjb25zdCBwcmV0dHlQaWQgPSBwcmV0dGlmaWVycy5waWRcbiAgICAgICAgPyBwcmV0dGlmaWVycy5waWQobG9nLnBpZCwgJ3BpZCcsIGxvZywgeyBjb2xvcnM6IGNvbG9yaXplci5jb2xvcnMgfSlcbiAgICAgICAgOiBsb2cucGlkXG4gICAgICBpZiAobG9nLm5hbWUgJiYgbG9nLnBpZCkge1xuICAgICAgICBsaW5lICs9ICcvJyArIHByZXR0eVBpZFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGluZSArPSBwcmV0dHlQaWRcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAobG9nLmhvc3RuYW1lKSB7XG4gICAgICAvLyBJZiBgcGlkYCBhbmQgYG5hbWVgIHdlcmUgaW4gdGhlIGlnbm9yZSBrZXlzIGxpc3QgdGhlbiB3ZSBkb24ndCBuZWVkXG4gICAgICAvLyB0aGUgbGVhZGluZyBzcGFjZS5cbiAgICAgIGNvbnN0IHByZXR0eUhvc3RuYW1lID0gcHJldHRpZmllcnMuaG9zdG5hbWVcbiAgICAgICAgPyBwcmV0dGlmaWVycy5ob3N0bmFtZShsb2cuaG9zdG5hbWUsICdob3N0bmFtZScsIGxvZywgeyBjb2xvcnM6IGNvbG9yaXplci5jb2xvcnMgfSlcbiAgICAgICAgOiBsb2cuaG9zdG5hbWVcblxuICAgICAgbGluZSArPSBgJHtsaW5lID09PSAnKCcgPyAnb24nIDogJyBvbid9ICR7cHJldHR5SG9zdG5hbWV9YFxuICAgIH1cblxuICAgIGxpbmUgKz0gJyknXG4gIH1cblxuICBpZiAobG9nLmNhbGxlcikge1xuICAgIGNvbnN0IHByZXR0eUNhbGxlciA9IHByZXR0aWZpZXJzLmNhbGxlclxuICAgICAgPyBwcmV0dGlmaWVycy5jYWxsZXIobG9nLmNhbGxlciwgJ2NhbGxlcicsIGxvZywgeyBjb2xvcnM6IGNvbG9yaXplci5jb2xvcnMgfSlcbiAgICAgIDogbG9nLmNhbGxlclxuXG4gICAgbGluZSArPSBgJHtsaW5lID09PSAnJyA/ICcnIDogJyAnfTwke3ByZXR0eUNhbGxlcn0+YFxuICB9XG5cbiAgaWYgKGxpbmUgPT09ICcnKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9IGVsc2Uge1xuICAgIHJldHVybiBsaW5lXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-object.js":
/*!***************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-object.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyObject\n\nconst {\n  LOGGER_KEYS\n} = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/pino-pretty/lib/constants.js\")\n\nconst stringifySafe = __webpack_require__(/*! fast-safe-stringify */ \"(ssr)/./node_modules/fast-safe-stringify/index.js\")\nconst joinLinesWithIndentation = __webpack_require__(/*! ./join-lines-with-indentation */ \"(ssr)/./node_modules/pino-pretty/lib/utils/join-lines-with-indentation.js\")\nconst prettifyError = __webpack_require__(/*! ./prettify-error */ \"(ssr)/./node_modules/pino-pretty/lib/utils/prettify-error.js\")\n\n/**\n * @typedef {object} PrettifyObjectParams\n * @property {object} log The object to prettify.\n * @property {boolean} [excludeLoggerKeys] Indicates if known logger specific\n * keys should be excluded from prettification. Default: `true`.\n * @property {string[]} [skipKeys] A set of object keys to exclude from the\n *  * prettified result. Default: `[]`.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies a standard object. Special care is taken when processing the object\n * to handle child objects that are attached to keys known to contain error\n * objects.\n *\n * @param {PrettifyObjectParams} input\n *\n * @returns {string} The prettified string. This can be as little as `''` if\n * there was nothing to prettify.\n */\nfunction prettifyObject ({\n  log,\n  excludeLoggerKeys = true,\n  skipKeys = [],\n  context\n}) {\n  const {\n    EOL: eol,\n    IDENT: ident,\n    customPrettifiers,\n    errorLikeObjectKeys: errorLikeKeys,\n    objectColorizer,\n    singleLine,\n    colorizer\n  } = context\n  const keysToIgnore = [].concat(skipKeys)\n\n  /* istanbul ignore else */\n  if (excludeLoggerKeys === true) Array.prototype.push.apply(keysToIgnore, LOGGER_KEYS)\n\n  let result = ''\n\n  // Split object keys into two categories: error and non-error\n  const { plain, errors } = Object.entries(log).reduce(({ plain, errors }, [k, v]) => {\n    if (keysToIgnore.includes(k) === false) {\n      // Pre-apply custom prettifiers, because all 3 cases below will need this\n      const pretty = typeof customPrettifiers[k] === 'function'\n        ? customPrettifiers[k](v, k, log, { colors: colorizer.colors })\n        : v\n      if (errorLikeKeys.includes(k)) {\n        errors[k] = pretty\n      } else {\n        plain[k] = pretty\n      }\n    }\n    return { plain, errors }\n  }, { plain: {}, errors: {} })\n\n  if (singleLine) {\n    // Stringify the entire object as a single JSON line\n    /* istanbul ignore else */\n    if (Object.keys(plain).length > 0) {\n      result += objectColorizer.greyMessage(stringifySafe(plain))\n    }\n    result += eol\n    // Avoid printing the escape character on escaped backslashes.\n    result = result.replace(/\\\\\\\\/gi, '\\\\')\n  } else {\n    // Put each object entry on its own line\n    Object.entries(plain).forEach(([keyName, keyValue]) => {\n      // custom prettifiers are already applied above, so we can skip it now\n      let lines = typeof customPrettifiers[keyName] === 'function'\n        ? keyValue\n        : stringifySafe(keyValue, null, 2)\n\n      if (lines === undefined) return\n\n      // Avoid printing the escape character on escaped backslashes.\n      lines = lines.replace(/\\\\\\\\/gi, '\\\\')\n\n      const joinedLines = joinLinesWithIndentation({ input: lines, ident, eol })\n      result += `${ident}${objectColorizer.property(keyName)}:${joinedLines.startsWith(eol) ? '' : ' '}${joinedLines}${eol}`\n    })\n  }\n\n  // Errors\n  Object.entries(errors).forEach(([keyName, keyValue]) => {\n    // custom prettifiers are already applied above, so we can skip it now\n    const lines = typeof customPrettifiers[keyName] === 'function'\n      ? keyValue\n      : stringifySafe(keyValue, null, 2)\n\n    if (lines === undefined) return\n\n    result += prettifyError({ keyName, lines, eol, ident })\n  })\n\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LW9iamVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLG1CQUFPLENBQUMsdUVBQWM7O0FBRTFCLHNCQUFzQixtQkFBTyxDQUFDLDhFQUFxQjtBQUNuRCxpQ0FBaUMsbUJBQU8sQ0FBQyxnSEFBK0I7QUFDeEUsc0JBQXNCLG1CQUFPLENBQUMsc0ZBQWtCOztBQUVoRDtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLFFBQVE7QUFDdEIsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCO0FBQ0EsY0FBYyxlQUFlO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsc0JBQXNCO0FBQ2pDO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFVBQVUsZ0JBQWdCLGdDQUFnQyxlQUFlO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywwQkFBMEI7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixHQUFHLElBQUksU0FBUyxjQUFjOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEscURBQXFELDBCQUEwQjtBQUMvRSxtQkFBbUIsTUFBTSxFQUFFLGtDQUFrQyxHQUFHLHVDQUF1QyxFQUFFLFlBQVksRUFBRSxJQUFJO0FBQzNILEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsOEJBQThCLDRCQUE0QjtBQUMxRCxHQUFHOztBQUVIO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9wcmV0dGlmeS1vYmplY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcHJldHRpZnlPYmplY3RcblxuY29uc3Qge1xuICBMT0dHRVJfS0VZU1xufSA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cycpXG5cbmNvbnN0IHN0cmluZ2lmeVNhZmUgPSByZXF1aXJlKCdmYXN0LXNhZmUtc3RyaW5naWZ5JylcbmNvbnN0IGpvaW5MaW5lc1dpdGhJbmRlbnRhdGlvbiA9IHJlcXVpcmUoJy4vam9pbi1saW5lcy13aXRoLWluZGVudGF0aW9uJylcbmNvbnN0IHByZXR0aWZ5RXJyb3IgPSByZXF1aXJlKCcuL3ByZXR0aWZ5LWVycm9yJylcblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBQcmV0dGlmeU9iamVjdFBhcmFtc1xuICogQHByb3BlcnR5IHtvYmplY3R9IGxvZyBUaGUgb2JqZWN0IHRvIHByZXR0aWZ5LlxuICogQHByb3BlcnR5IHtib29sZWFufSBbZXhjbHVkZUxvZ2dlcktleXNdIEluZGljYXRlcyBpZiBrbm93biBsb2dnZXIgc3BlY2lmaWNcbiAqIGtleXMgc2hvdWxkIGJlIGV4Y2x1ZGVkIGZyb20gcHJldHRpZmljYXRpb24uIERlZmF1bHQ6IGB0cnVlYC5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nW119IFtza2lwS2V5c10gQSBzZXQgb2Ygb2JqZWN0IGtleXMgdG8gZXhjbHVkZSBmcm9tIHRoZVxuICogICogcHJldHRpZmllZCByZXN1bHQuIERlZmF1bHQ6IGBbXWAuXG4gKiBAcHJvcGVydHkge1ByZXR0eUNvbnRleHR9IGNvbnRleHQgVGhlIGNvbnRleHQgb2JqZWN0IGJ1aWx0IGZyb20gcGFyc2luZ1xuICogdGhlIG9wdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBQcmV0dGlmaWVzIGEgc3RhbmRhcmQgb2JqZWN0LiBTcGVjaWFsIGNhcmUgaXMgdGFrZW4gd2hlbiBwcm9jZXNzaW5nIHRoZSBvYmplY3RcbiAqIHRvIGhhbmRsZSBjaGlsZCBvYmplY3RzIHRoYXQgYXJlIGF0dGFjaGVkIHRvIGtleXMga25vd24gdG8gY29udGFpbiBlcnJvclxuICogb2JqZWN0cy5cbiAqXG4gKiBAcGFyYW0ge1ByZXR0aWZ5T2JqZWN0UGFyYW1zfSBpbnB1dFxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBwcmV0dGlmaWVkIHN0cmluZy4gVGhpcyBjYW4gYmUgYXMgbGl0dGxlIGFzIGAnJ2AgaWZcbiAqIHRoZXJlIHdhcyBub3RoaW5nIHRvIHByZXR0aWZ5LlxuICovXG5mdW5jdGlvbiBwcmV0dGlmeU9iamVjdCAoe1xuICBsb2csXG4gIGV4Y2x1ZGVMb2dnZXJLZXlzID0gdHJ1ZSxcbiAgc2tpcEtleXMgPSBbXSxcbiAgY29udGV4dFxufSkge1xuICBjb25zdCB7XG4gICAgRU9MOiBlb2wsXG4gICAgSURFTlQ6IGlkZW50LFxuICAgIGN1c3RvbVByZXR0aWZpZXJzLFxuICAgIGVycm9yTGlrZU9iamVjdEtleXM6IGVycm9yTGlrZUtleXMsXG4gICAgb2JqZWN0Q29sb3JpemVyLFxuICAgIHNpbmdsZUxpbmUsXG4gICAgY29sb3JpemVyXG4gIH0gPSBjb250ZXh0XG4gIGNvbnN0IGtleXNUb0lnbm9yZSA9IFtdLmNvbmNhdChza2lwS2V5cylcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoZXhjbHVkZUxvZ2dlcktleXMgPT09IHRydWUpIEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGtleXNUb0lnbm9yZSwgTE9HR0VSX0tFWVMpXG5cbiAgbGV0IHJlc3VsdCA9ICcnXG5cbiAgLy8gU3BsaXQgb2JqZWN0IGtleXMgaW50byB0d28gY2F0ZWdvcmllczogZXJyb3IgYW5kIG5vbi1lcnJvclxuICBjb25zdCB7IHBsYWluLCBlcnJvcnMgfSA9IE9iamVjdC5lbnRyaWVzKGxvZykucmVkdWNlKCh7IHBsYWluLCBlcnJvcnMgfSwgW2ssIHZdKSA9PiB7XG4gICAgaWYgKGtleXNUb0lnbm9yZS5pbmNsdWRlcyhrKSA9PT0gZmFsc2UpIHtcbiAgICAgIC8vIFByZS1hcHBseSBjdXN0b20gcHJldHRpZmllcnMsIGJlY2F1c2UgYWxsIDMgY2FzZXMgYmVsb3cgd2lsbCBuZWVkIHRoaXNcbiAgICAgIGNvbnN0IHByZXR0eSA9IHR5cGVvZiBjdXN0b21QcmV0dGlmaWVyc1trXSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/IGN1c3RvbVByZXR0aWZpZXJzW2tdKHYsIGssIGxvZywgeyBjb2xvcnM6IGNvbG9yaXplci5jb2xvcnMgfSlcbiAgICAgICAgOiB2XG4gICAgICBpZiAoZXJyb3JMaWtlS2V5cy5pbmNsdWRlcyhrKSkge1xuICAgICAgICBlcnJvcnNba10gPSBwcmV0dHlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBsYWluW2tdID0gcHJldHR5XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IHBsYWluLCBlcnJvcnMgfVxuICB9LCB7IHBsYWluOiB7fSwgZXJyb3JzOiB7fSB9KVxuXG4gIGlmIChzaW5nbGVMaW5lKSB7XG4gICAgLy8gU3RyaW5naWZ5IHRoZSBlbnRpcmUgb2JqZWN0IGFzIGEgc2luZ2xlIEpTT04gbGluZVxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgaWYgKE9iamVjdC5rZXlzKHBsYWluKS5sZW5ndGggPiAwKSB7XG4gICAgICByZXN1bHQgKz0gb2JqZWN0Q29sb3JpemVyLmdyZXlNZXNzYWdlKHN0cmluZ2lmeVNhZmUocGxhaW4pKVxuICAgIH1cbiAgICByZXN1bHQgKz0gZW9sXG4gICAgLy8gQXZvaWQgcHJpbnRpbmcgdGhlIGVzY2FwZSBjaGFyYWN0ZXIgb24gZXNjYXBlZCBiYWNrc2xhc2hlcy5cbiAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgvXFxcXFxcXFwvZ2ksICdcXFxcJylcbiAgfSBlbHNlIHtcbiAgICAvLyBQdXQgZWFjaCBvYmplY3QgZW50cnkgb24gaXRzIG93biBsaW5lXG4gICAgT2JqZWN0LmVudHJpZXMocGxhaW4pLmZvckVhY2goKFtrZXlOYW1lLCBrZXlWYWx1ZV0pID0+IHtcbiAgICAgIC8vIGN1c3RvbSBwcmV0dGlmaWVycyBhcmUgYWxyZWFkeSBhcHBsaWVkIGFib3ZlLCBzbyB3ZSBjYW4gc2tpcCBpdCBub3dcbiAgICAgIGxldCBsaW5lcyA9IHR5cGVvZiBjdXN0b21QcmV0dGlmaWVyc1trZXlOYW1lXSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/IGtleVZhbHVlXG4gICAgICAgIDogc3RyaW5naWZ5U2FmZShrZXlWYWx1ZSwgbnVsbCwgMilcblxuICAgICAgaWYgKGxpbmVzID09PSB1bmRlZmluZWQpIHJldHVyblxuXG4gICAgICAvLyBBdm9pZCBwcmludGluZyB0aGUgZXNjYXBlIGNoYXJhY3RlciBvbiBlc2NhcGVkIGJhY2tzbGFzaGVzLlxuICAgICAgbGluZXMgPSBsaW5lcy5yZXBsYWNlKC9cXFxcXFxcXC9naSwgJ1xcXFwnKVxuXG4gICAgICBjb25zdCBqb2luZWRMaW5lcyA9IGpvaW5MaW5lc1dpdGhJbmRlbnRhdGlvbih7IGlucHV0OiBsaW5lcywgaWRlbnQsIGVvbCB9KVxuICAgICAgcmVzdWx0ICs9IGAke2lkZW50fSR7b2JqZWN0Q29sb3JpemVyLnByb3BlcnR5KGtleU5hbWUpfToke2pvaW5lZExpbmVzLnN0YXJ0c1dpdGgoZW9sKSA/ICcnIDogJyAnfSR7am9pbmVkTGluZXN9JHtlb2x9YFxuICAgIH0pXG4gIH1cblxuICAvLyBFcnJvcnNcbiAgT2JqZWN0LmVudHJpZXMoZXJyb3JzKS5mb3JFYWNoKChba2V5TmFtZSwga2V5VmFsdWVdKSA9PiB7XG4gICAgLy8gY3VzdG9tIHByZXR0aWZpZXJzIGFyZSBhbHJlYWR5IGFwcGxpZWQgYWJvdmUsIHNvIHdlIGNhbiBza2lwIGl0IG5vd1xuICAgIGNvbnN0IGxpbmVzID0gdHlwZW9mIGN1c3RvbVByZXR0aWZpZXJzW2tleU5hbWVdID09PSAnZnVuY3Rpb24nXG4gICAgICA/IGtleVZhbHVlXG4gICAgICA6IHN0cmluZ2lmeVNhZmUoa2V5VmFsdWUsIG51bGwsIDIpXG5cbiAgICBpZiAobGluZXMgPT09IHVuZGVmaW5lZCkgcmV0dXJuXG5cbiAgICByZXN1bHQgKz0gcHJldHRpZnlFcnJvcih7IGtleU5hbWUsIGxpbmVzLCBlb2wsIGlkZW50IH0pXG4gIH0pXG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/prettify-time.js":
/*!*************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/prettify-time.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = prettifyTime\n\nconst formatTime = __webpack_require__(/*! ./format-time */ \"(ssr)/./node_modules/pino-pretty/lib/utils/format-time.js\")\n\n/**\n * @typedef {object} PrettifyTimeParams\n * @property {object} log The log object with the timestamp to be prettified.\n * @property {PrettyContext} context The context object built from parsing\n * the options.\n */\n\n/**\n * Prettifies a timestamp if the given `log` has either `time`, `timestamp` or custom specified timestamp\n * property.\n *\n * @param {PrettifyTimeParams} input\n *\n * @returns {undefined|string} If a timestamp property cannot be found then\n * `undefined` is returned. Otherwise, the prettified time is returned as a\n * string.\n */\nfunction prettifyTime ({ log, context }) {\n  const {\n    timestampKey,\n    translateTime: translateFormat\n  } = context\n  const prettifier = context.customPrettifiers?.time\n  let time = null\n\n  if (timestampKey in log) {\n    time = log[timestampKey]\n  } else if ('timestamp' in log) {\n    time = log.timestamp\n  }\n\n  if (time === null) return undefined\n  const output = translateFormat ? formatTime(time, translateFormat) : time\n\n  return prettifier ? prettifier(output) : `[${output}]`\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3ByZXR0aWZ5LXRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUEsbUJBQW1CLG1CQUFPLENBQUMsZ0ZBQWU7O0FBRTFDO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsUUFBUTtBQUN0QixjQUFjLGVBQWU7QUFDN0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0JBQW9CO0FBQy9CO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGNBQWM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsK0NBQStDLE9BQU87QUFDdEQiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9wcmV0dGlmeS10aW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByZXR0aWZ5VGltZVxuXG5jb25zdCBmb3JtYXRUaW1lID0gcmVxdWlyZSgnLi9mb3JtYXQtdGltZScpXG5cbi8qKlxuICogQHR5cGVkZWYge29iamVjdH0gUHJldHRpZnlUaW1lUGFyYW1zXG4gKiBAcHJvcGVydHkge29iamVjdH0gbG9nIFRoZSBsb2cgb2JqZWN0IHdpdGggdGhlIHRpbWVzdGFtcCB0byBiZSBwcmV0dGlmaWVkLlxuICogQHByb3BlcnR5IHtQcmV0dHlDb250ZXh0fSBjb250ZXh0IFRoZSBjb250ZXh0IG9iamVjdCBidWlsdCBmcm9tIHBhcnNpbmdcbiAqIHRoZSBvcHRpb25zLlxuICovXG5cbi8qKlxuICogUHJldHRpZmllcyBhIHRpbWVzdGFtcCBpZiB0aGUgZ2l2ZW4gYGxvZ2AgaGFzIGVpdGhlciBgdGltZWAsIGB0aW1lc3RhbXBgIG9yIGN1c3RvbSBzcGVjaWZpZWQgdGltZXN0YW1wXG4gKiBwcm9wZXJ0eS5cbiAqXG4gKiBAcGFyYW0ge1ByZXR0aWZ5VGltZVBhcmFtc30gaW5wdXRcbiAqXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfHN0cmluZ30gSWYgYSB0aW1lc3RhbXAgcHJvcGVydHkgY2Fubm90IGJlIGZvdW5kIHRoZW5cbiAqIGB1bmRlZmluZWRgIGlzIHJldHVybmVkLiBPdGhlcndpc2UsIHRoZSBwcmV0dGlmaWVkIHRpbWUgaXMgcmV0dXJuZWQgYXMgYVxuICogc3RyaW5nLlxuICovXG5mdW5jdGlvbiBwcmV0dGlmeVRpbWUgKHsgbG9nLCBjb250ZXh0IH0pIHtcbiAgY29uc3Qge1xuICAgIHRpbWVzdGFtcEtleSxcbiAgICB0cmFuc2xhdGVUaW1lOiB0cmFuc2xhdGVGb3JtYXRcbiAgfSA9IGNvbnRleHRcbiAgY29uc3QgcHJldHRpZmllciA9IGNvbnRleHQuY3VzdG9tUHJldHRpZmllcnM/LnRpbWVcbiAgbGV0IHRpbWUgPSBudWxsXG5cbiAgaWYgKHRpbWVzdGFtcEtleSBpbiBsb2cpIHtcbiAgICB0aW1lID0gbG9nW3RpbWVzdGFtcEtleV1cbiAgfSBlbHNlIGlmICgndGltZXN0YW1wJyBpbiBsb2cpIHtcbiAgICB0aW1lID0gbG9nLnRpbWVzdGFtcFxuICB9XG5cbiAgaWYgKHRpbWUgPT09IG51bGwpIHJldHVybiB1bmRlZmluZWRcbiAgY29uc3Qgb3V0cHV0ID0gdHJhbnNsYXRlRm9ybWF0ID8gZm9ybWF0VGltZSh0aW1lLCB0cmFuc2xhdGVGb3JtYXQpIDogdGltZVxuXG4gIHJldHVybiBwcmV0dGlmaWVyID8gcHJldHRpZmllcihvdXRwdXQpIDogYFske291dHB1dH1dYFxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/prettify-time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/lib/utils/split-property-key.js":
/*!******************************************************************!*\
  !*** ./node_modules/pino-pretty/lib/utils/split-property-key.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = splitPropertyKey\n\n/**\n * Splits the property key delimited by a dot character but not when it is preceded\n * by a backslash.\n *\n * @param {string} key A string identifying the property.\n *\n * @returns {string[]} Returns a list of string containing each delimited property.\n * e.g. `'prop2\\.domain\\.corp.prop2'` should return [ 'prop2.domain.com', 'prop2' ]\n */\nfunction splitPropertyKey (key) {\n  const result = []\n  let backslash = false\n  let segment = ''\n\n  for (let i = 0; i < key.length; i++) {\n    const c = key.charAt(i)\n\n    if (c === '\\\\') {\n      backslash = true\n      continue\n    }\n\n    if (backslash) {\n      backslash = false\n      segment += c\n      continue\n    }\n\n    /* Non-escaped dot, push to result */\n    if (c === '.') {\n      result.push(segment)\n      segment = ''\n      continue\n    }\n\n    segment += c\n  }\n\n  /* Push last entry to result */\n  if (segment.length) {\n    result.push(segment)\n  }\n\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbGliL3V0aWxzL3NwbGl0LXByb3BlcnR5LWtleS5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLGdCQUFnQjtBQUNsQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy91bmRldnkvcG9ydGZvbGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL3Bpbm8tcHJldHR5L2xpYi91dGlscy9zcGxpdC1wcm9wZXJ0eS1rZXkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gc3BsaXRQcm9wZXJ0eUtleVxuXG4vKipcbiAqIFNwbGl0cyB0aGUgcHJvcGVydHkga2V5IGRlbGltaXRlZCBieSBhIGRvdCBjaGFyYWN0ZXIgYnV0IG5vdCB3aGVuIGl0IGlzIHByZWNlZGVkXG4gKiBieSBhIGJhY2tzbGFzaC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IEEgc3RyaW5nIGlkZW50aWZ5aW5nIHRoZSBwcm9wZXJ0eS5cbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nW119IFJldHVybnMgYSBsaXN0IG9mIHN0cmluZyBjb250YWluaW5nIGVhY2ggZGVsaW1pdGVkIHByb3BlcnR5LlxuICogZS5nLiBgJ3Byb3AyXFwuZG9tYWluXFwuY29ycC5wcm9wMidgIHNob3VsZCByZXR1cm4gWyAncHJvcDIuZG9tYWluLmNvbScsICdwcm9wMicgXVxuICovXG5mdW5jdGlvbiBzcGxpdFByb3BlcnR5S2V5IChrZXkpIHtcbiAgY29uc3QgcmVzdWx0ID0gW11cbiAgbGV0IGJhY2tzbGFzaCA9IGZhbHNlXG4gIGxldCBzZWdtZW50ID0gJydcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGtleS5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGMgPSBrZXkuY2hhckF0KGkpXG5cbiAgICBpZiAoYyA9PT0gJ1xcXFwnKSB7XG4gICAgICBiYWNrc2xhc2ggPSB0cnVlXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIGlmIChiYWNrc2xhc2gpIHtcbiAgICAgIGJhY2tzbGFzaCA9IGZhbHNlXG4gICAgICBzZWdtZW50ICs9IGNcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgLyogTm9uLWVzY2FwZWQgZG90LCBwdXNoIHRvIHJlc3VsdCAqL1xuICAgIGlmIChjID09PSAnLicpIHtcbiAgICAgIHJlc3VsdC5wdXNoKHNlZ21lbnQpXG4gICAgICBzZWdtZW50ID0gJydcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgc2VnbWVudCArPSBjXG4gIH1cblxuICAvKiBQdXNoIGxhc3QgZW50cnkgdG8gcmVzdWx0ICovXG4gIGlmIChzZWdtZW50Lmxlbmd0aCkge1xuICAgIHJlc3VsdC5wdXNoKHNlZ21lbnQpXG4gIH1cblxuICByZXR1cm4gcmVzdWx0XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/lib/utils/split-property-key.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/node_modules/on-exit-leak-free/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/pino-pretty/node_modules/on-exit-leak-free/index.js ***!
  \**************************************************************************/
/***/ ((module) => {

eval("\n\nconst refs = {\n  exit: [],\n  beforeExit: []\n}\nconst functions = {\n  exit: onExit,\n  beforeExit: onBeforeExit\n}\n\nlet registry\n\nfunction ensureRegistry () {\n  if (registry === undefined) {\n    registry = new FinalizationRegistry(clear)\n  }\n}\n\nfunction install (event) {\n  if (refs[event].length > 0) {\n    return\n  }\n\n  process.on(event, functions[event])\n}\n\nfunction uninstall (event) {\n  if (refs[event].length > 0) {\n    return\n  }\n  process.removeListener(event, functions[event])\n  if (refs.exit.length === 0 && refs.beforeExit.length === 0) {\n    registry = undefined\n  }\n}\n\nfunction onExit () {\n  callRefs('exit')\n}\n\nfunction onBeforeExit () {\n  callRefs('beforeExit')\n}\n\nfunction callRefs (event) {\n  for (const ref of refs[event]) {\n    const obj = ref.deref()\n    const fn = ref.fn\n\n    // This should always happen, however GC is\n    // undeterministic so it might not happen.\n    /* istanbul ignore else */\n    if (obj !== undefined) {\n      fn(obj, event)\n    }\n  }\n  refs[event] = []\n}\n\nfunction clear (ref) {\n  for (const event of ['exit', 'beforeExit']) {\n    const index = refs[event].indexOf(ref)\n    refs[event].splice(index, index + 1)\n    uninstall(event)\n  }\n}\n\nfunction _register (event, obj, fn) {\n  if (obj === undefined) {\n    throw new Error('the object can\\'t be undefined')\n  }\n  install(event)\n  const ref = new WeakRef(obj)\n  ref.fn = fn\n\n  ensureRegistry()\n  registry.register(obj, ref)\n  refs[event].push(ref)\n}\n\nfunction register (obj, fn) {\n  _register('exit', obj, fn)\n}\n\nfunction registerBeforeExit (obj, fn) {\n  _register('beforeExit', obj, fn)\n}\n\nfunction unregister (obj) {\n  if (registry === undefined) {\n    return\n  }\n  registry.unregister(obj)\n  for (const event of ['exit', 'beforeExit']) {\n    refs[event] = refs[event].filter((ref) => {\n      const _obj = ref.deref()\n      return _obj && _obj !== obj\n    })\n    uninstall(event)\n  }\n}\n\nmodule.exports = {\n  register,\n  registerBeforeExit,\n  unregister\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbm9kZV9tb2R1bGVzL29uLWV4aXQtbGVhay1mcmVlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3VuZGV2eS9wb3J0Zm9saW8tcHJvamVjdC9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbm9kZV9tb2R1bGVzL29uLWV4aXQtbGVhay1mcmVlL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCByZWZzID0ge1xuICBleGl0OiBbXSxcbiAgYmVmb3JlRXhpdDogW11cbn1cbmNvbnN0IGZ1bmN0aW9ucyA9IHtcbiAgZXhpdDogb25FeGl0LFxuICBiZWZvcmVFeGl0OiBvbkJlZm9yZUV4aXRcbn1cblxubGV0IHJlZ2lzdHJ5XG5cbmZ1bmN0aW9uIGVuc3VyZVJlZ2lzdHJ5ICgpIHtcbiAgaWYgKHJlZ2lzdHJ5ID09PSB1bmRlZmluZWQpIHtcbiAgICByZWdpc3RyeSA9IG5ldyBGaW5hbGl6YXRpb25SZWdpc3RyeShjbGVhcilcbiAgfVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsIChldmVudCkge1xuICBpZiAocmVmc1tldmVudF0ubGVuZ3RoID4gMCkge1xuICAgIHJldHVyblxuICB9XG5cbiAgcHJvY2Vzcy5vbihldmVudCwgZnVuY3Rpb25zW2V2ZW50XSlcbn1cblxuZnVuY3Rpb24gdW5pbnN0YWxsIChldmVudCkge1xuICBpZiAocmVmc1tldmVudF0ubGVuZ3RoID4gMCkge1xuICAgIHJldHVyblxuICB9XG4gIHByb2Nlc3MucmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGZ1bmN0aW9uc1tldmVudF0pXG4gIGlmIChyZWZzLmV4aXQubGVuZ3RoID09PSAwICYmIHJlZnMuYmVmb3JlRXhpdC5sZW5ndGggPT09IDApIHtcbiAgICByZWdpc3RyeSA9IHVuZGVmaW5lZFxuICB9XG59XG5cbmZ1bmN0aW9uIG9uRXhpdCAoKSB7XG4gIGNhbGxSZWZzKCdleGl0Jylcbn1cblxuZnVuY3Rpb24gb25CZWZvcmVFeGl0ICgpIHtcbiAgY2FsbFJlZnMoJ2JlZm9yZUV4aXQnKVxufVxuXG5mdW5jdGlvbiBjYWxsUmVmcyAoZXZlbnQpIHtcbiAgZm9yIChjb25zdCByZWYgb2YgcmVmc1tldmVudF0pIHtcbiAgICBjb25zdCBvYmogPSByZWYuZGVyZWYoKVxuICAgIGNvbnN0IGZuID0gcmVmLmZuXG5cbiAgICAvLyBUaGlzIHNob3VsZCBhbHdheXMgaGFwcGVuLCBob3dldmVyIEdDIGlzXG4gICAgLy8gdW5kZXRlcm1pbmlzdGljIHNvIGl0IG1pZ2h0IG5vdCBoYXBwZW4uXG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAob2JqICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGZuKG9iaiwgZXZlbnQpXG4gICAgfVxuICB9XG4gIHJlZnNbZXZlbnRdID0gW11cbn1cblxuZnVuY3Rpb24gY2xlYXIgKHJlZikge1xuICBmb3IgKGNvbnN0IGV2ZW50IG9mIFsnZXhpdCcsICdiZWZvcmVFeGl0J10pIHtcbiAgICBjb25zdCBpbmRleCA9IHJlZnNbZXZlbnRdLmluZGV4T2YocmVmKVxuICAgIHJlZnNbZXZlbnRdLnNwbGljZShpbmRleCwgaW5kZXggKyAxKVxuICAgIHVuaW5zdGFsbChldmVudClcbiAgfVxufVxuXG5mdW5jdGlvbiBfcmVnaXN0ZXIgKGV2ZW50LCBvYmosIGZuKSB7XG4gIGlmIChvYmogPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndGhlIG9iamVjdCBjYW5cXCd0IGJlIHVuZGVmaW5lZCcpXG4gIH1cbiAgaW5zdGFsbChldmVudClcbiAgY29uc3QgcmVmID0gbmV3IFdlYWtSZWYob2JqKVxuICByZWYuZm4gPSBmblxuXG4gIGVuc3VyZVJlZ2lzdHJ5KClcbiAgcmVnaXN0cnkucmVnaXN0ZXIob2JqLCByZWYpXG4gIHJlZnNbZXZlbnRdLnB1c2gocmVmKVxufVxuXG5mdW5jdGlvbiByZWdpc3RlciAob2JqLCBmbikge1xuICBfcmVnaXN0ZXIoJ2V4aXQnLCBvYmosIGZuKVxufVxuXG5mdW5jdGlvbiByZWdpc3RlckJlZm9yZUV4aXQgKG9iaiwgZm4pIHtcbiAgX3JlZ2lzdGVyKCdiZWZvcmVFeGl0Jywgb2JqLCBmbilcbn1cblxuZnVuY3Rpb24gdW5yZWdpc3RlciAob2JqKSB7XG4gIGlmIChyZWdpc3RyeSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgcmVnaXN0cnkudW5yZWdpc3RlcihvYmopXG4gIGZvciAoY29uc3QgZXZlbnQgb2YgWydleGl0JywgJ2JlZm9yZUV4aXQnXSkge1xuICAgIHJlZnNbZXZlbnRdID0gcmVmc1tldmVudF0uZmlsdGVyKChyZWYpID0+IHtcbiAgICAgIGNvbnN0IF9vYmogPSByZWYuZGVyZWYoKVxuICAgICAgcmV0dXJuIF9vYmogJiYgX29iaiAhPT0gb2JqXG4gICAgfSlcbiAgICB1bmluc3RhbGwoZXZlbnQpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlZ2lzdGVyLFxuICByZWdpc3RlckJlZm9yZUV4aXQsXG4gIHVucmVnaXN0ZXJcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/node_modules/on-exit-leak-free/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/node_modules/pino-abstract-transport/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/pino-pretty/node_modules/pino-abstract-transport/index.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst metadata = Symbol.for('pino.metadata')\nconst split = __webpack_require__(/*! split2 */ \"(ssr)/./node_modules/split2/index.js\")\nconst { Duplex } = __webpack_require__(/*! stream */ \"stream\")\nconst { parentPort, workerData } = __webpack_require__(/*! worker_threads */ \"worker_threads\")\n\nfunction createDeferred () {\n  let resolve\n  let reject\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  })\n  promise.resolve = resolve\n  promise.reject = reject\n  return promise\n}\n\nmodule.exports = function build (fn, opts = {}) {\n  const waitForConfig = opts.expectPinoConfig === true && workerData?.workerData?.pinoWillSendConfig === true\n  const parseLines = opts.parse === 'lines'\n  const parseLine = typeof opts.parseLine === 'function' ? opts.parseLine : JSON.parse\n  const close = opts.close || defaultClose\n  const stream = split(function (line) {\n    let value\n\n    try {\n      value = parseLine(line)\n    } catch (error) {\n      this.emit('unknown', line, error)\n      return\n    }\n\n    if (value === null) {\n      this.emit('unknown', line, 'Null value ignored')\n      return\n    }\n\n    if (typeof value !== 'object') {\n      value = {\n        data: value,\n        time: Date.now()\n      }\n    }\n\n    if (stream[metadata]) {\n      stream.lastTime = value.time\n      stream.lastLevel = value.level\n      stream.lastObj = value\n    }\n\n    if (parseLines) {\n      return line\n    }\n\n    return value\n  }, { autoDestroy: true })\n\n  stream._destroy = function (err, cb) {\n    const promise = close(err, cb)\n    if (promise && typeof promise.then === 'function') {\n      promise.then(cb, cb)\n    }\n  }\n\n  if (opts.expectPinoConfig === true && workerData?.workerData?.pinoWillSendConfig !== true) {\n    setImmediate(() => {\n      stream.emit('error', new Error('This transport is not compatible with the current version of pino. Please upgrade pino to the latest version.'))\n    })\n  }\n\n  if (opts.metadata !== false) {\n    stream[metadata] = true\n    stream.lastTime = 0\n    stream.lastLevel = 0\n    stream.lastObj = null\n  }\n\n  if (waitForConfig) {\n    let pinoConfig = {}\n    const configReceived = createDeferred()\n    parentPort.on('message', function handleMessage (message) {\n      if (message.code === 'PINO_CONFIG') {\n        pinoConfig = message.config\n        configReceived.resolve()\n        parentPort.off('message', handleMessage)\n      }\n    })\n\n    Object.defineProperties(stream, {\n      levels: {\n        get () { return pinoConfig.levels }\n      },\n      messageKey: {\n        get () { return pinoConfig.messageKey }\n      },\n      errorKey: {\n        get () { return pinoConfig.errorKey }\n      }\n    })\n\n    return configReceived.then(finish)\n  }\n\n  return finish()\n\n  function finish () {\n    let res = fn(stream)\n\n    if (res && typeof res.catch === 'function') {\n      res.catch((err) => {\n        stream.destroy(err)\n      })\n\n      // set it to null to not retain a reference to the promise\n      res = null\n    } else if (opts.enablePipelining && res) {\n      return Duplex.from({ writable: stream, readable: res })\n    }\n\n    return stream\n  }\n}\n\nfunction defaultClose (err, cb) {\n  process.nextTick(cb, err)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGluby1wcmV0dHkvbm9kZV9tb2R1bGVzL3Bpbm8tYWJzdHJhY3QtdHJhbnNwb3J0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLG9EQUFRO0FBQzlCLFFBQVEsU0FBUyxFQUFFLG1CQUFPLENBQUMsc0JBQVE7QUFDbkMsUUFBUSx5QkFBeUIsRUFBRSxtQkFBTyxDQUFDLHNDQUFnQjs7QUFFM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRyxJQUFJLG1CQUFtQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLE9BQU87QUFDUDtBQUNBLGlCQUFpQjtBQUNqQixPQUFPO0FBQ1A7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQSxNQUFNO0FBQ04sMkJBQTJCLGlDQUFpQztBQUM1RDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvdW5kZXZ5L3BvcnRmb2xpby1wcm9qZWN0L25vZGVfbW9kdWxlcy9waW5vLXByZXR0eS9ub2RlX21vZHVsZXMvcGluby1hYnN0cmFjdC10cmFuc3BvcnQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IG1ldGFkYXRhID0gU3ltYm9sLmZvcigncGluby5tZXRhZGF0YScpXG5jb25zdCBzcGxpdCA9IHJlcXVpcmUoJ3NwbGl0MicpXG5jb25zdCB7IER1cGxleCB9ID0gcmVxdWlyZSgnc3RyZWFtJylcbmNvbnN0IHsgcGFyZW50UG9ydCwgd29ya2VyRGF0YSB9ID0gcmVxdWlyZSgnd29ya2VyX3RocmVhZHMnKVxuXG5mdW5jdGlvbiBjcmVhdGVEZWZlcnJlZCAoKSB7XG4gIGxldCByZXNvbHZlXG4gIGxldCByZWplY3RcbiAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChfcmVzb2x2ZSwgX3JlamVjdCkgPT4ge1xuICAgIHJlc29sdmUgPSBfcmVzb2x2ZVxuICAgIHJlamVjdCA9IF9yZWplY3RcbiAgfSlcbiAgcHJvbWlzZS5yZXNvbHZlID0gcmVzb2x2ZVxuICBwcm9taXNlLnJlamVjdCA9IHJlamVjdFxuICByZXR1cm4gcHJvbWlzZVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkIChmbiwgb3B0cyA9IHt9KSB7XG4gIGNvbnN0IHdhaXRGb3JDb25maWcgPSBvcHRzLmV4cGVjdFBpbm9Db25maWcgPT09IHRydWUgJiYgd29ya2VyRGF0YT8ud29ya2VyRGF0YT8ucGlub1dpbGxTZW5kQ29uZmlnID09PSB0cnVlXG4gIGNvbnN0IHBhcnNlTGluZXMgPSBvcHRzLnBhcnNlID09PSAnbGluZXMnXG4gIGNvbnN0IHBhcnNlTGluZSA9IHR5cGVvZiBvcHRzLnBhcnNlTGluZSA9PT0gJ2Z1bmN0aW9uJyA/IG9wdHMucGFyc2VMaW5lIDogSlNPTi5wYXJzZVxuICBjb25zdCBjbG9zZSA9IG9wdHMuY2xvc2UgfHwgZGVmYXVsdENsb3NlXG4gIGNvbnN0IHN0cmVhbSA9IHNwbGl0KGZ1bmN0aW9uIChsaW5lKSB7XG4gICAgbGV0IHZhbHVlXG5cbiAgICB0cnkge1xuICAgICAgdmFsdWUgPSBwYXJzZUxpbmUobGluZSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5lbWl0KCd1bmtub3duJywgbGluZSwgZXJyb3IpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgIHRoaXMuZW1pdCgndW5rbm93bicsIGxpbmUsICdOdWxsIHZhbHVlIGlnbm9yZWQnKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHZhbHVlID0ge1xuICAgICAgICBkYXRhOiB2YWx1ZSxcbiAgICAgICAgdGltZTogRGF0ZS5ub3coKVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChzdHJlYW1bbWV0YWRhdGFdKSB7XG4gICAgICBzdHJlYW0ubGFzdFRpbWUgPSB2YWx1ZS50aW1lXG4gICAgICBzdHJlYW0ubGFzdExldmVsID0gdmFsdWUubGV2ZWxcbiAgICAgIHN0cmVhbS5sYXN0T2JqID0gdmFsdWVcbiAgICB9XG5cbiAgICBpZiAocGFyc2VMaW5lcykge1xuICAgICAgcmV0dXJuIGxpbmVcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWVcbiAgfSwgeyBhdXRvRGVzdHJveTogdHJ1ZSB9KVxuXG4gIHN0cmVhbS5fZGVzdHJveSA9IGZ1bmN0aW9uIChlcnIsIGNiKSB7XG4gICAgY29uc3QgcHJvbWlzZSA9IGNsb3NlKGVyciwgY2IpXG4gICAgaWYgKHByb21pc2UgJiYgdHlwZW9mIHByb21pc2UudGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcHJvbWlzZS50aGVuKGNiLCBjYilcbiAgICB9XG4gIH1cblxuICBpZiAob3B0cy5leHBlY3RQaW5vQ29uZmlnID09PSB0cnVlICYmIHdvcmtlckRhdGE/LndvcmtlckRhdGE/LnBpbm9XaWxsU2VuZENvbmZpZyAhPT0gdHJ1ZSkge1xuICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICBzdHJlYW0uZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ1RoaXMgdHJhbnNwb3J0IGlzIG5vdCBjb21wYXRpYmxlIHdpdGggdGhlIGN1cnJlbnQgdmVyc2lvbiBvZiBwaW5vLiBQbGVhc2UgdXBncmFkZSBwaW5vIHRvIHRoZSBsYXRlc3QgdmVyc2lvbi4nKSlcbiAgICB9KVxuICB9XG5cbiAgaWYgKG9wdHMubWV0YWRhdGEgIT09IGZhbHNlKSB7XG4gICAgc3RyZWFtW21ldGFkYXRhXSA9IHRydWVcbiAgICBzdHJlYW0ubGFzdFRpbWUgPSAwXG4gICAgc3RyZWFtLmxhc3RMZXZlbCA9IDBcbiAgICBzdHJlYW0ubGFzdE9iaiA9IG51bGxcbiAgfVxuXG4gIGlmICh3YWl0Rm9yQ29uZmlnKSB7XG4gICAgbGV0IHBpbm9Db25maWcgPSB7fVxuICAgIGNvbnN0IGNvbmZpZ1JlY2VpdmVkID0gY3JlYXRlRGVmZXJyZWQoKVxuICAgIHBhcmVudFBvcnQub24oJ21lc3NhZ2UnLCBmdW5jdGlvbiBoYW5kbGVNZXNzYWdlIChtZXNzYWdlKSB7XG4gICAgICBpZiAobWVzc2FnZS5jb2RlID09PSAnUElOT19DT05GSUcnKSB7XG4gICAgICAgIHBpbm9Db25maWcgPSBtZXNzYWdlLmNvbmZpZ1xuICAgICAgICBjb25maWdSZWNlaXZlZC5yZXNvbHZlKClcbiAgICAgICAgcGFyZW50UG9ydC5vZmYoJ21lc3NhZ2UnLCBoYW5kbGVNZXNzYWdlKVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhzdHJlYW0sIHtcbiAgICAgIGxldmVsczoge1xuICAgICAgICBnZXQgKCkgeyByZXR1cm4gcGlub0NvbmZpZy5sZXZlbHMgfVxuICAgICAgfSxcbiAgICAgIG1lc3NhZ2VLZXk6IHtcbiAgICAgICAgZ2V0ICgpIHsgcmV0dXJuIHBpbm9Db25maWcubWVzc2FnZUtleSB9XG4gICAgICB9LFxuICAgICAgZXJyb3JLZXk6IHtcbiAgICAgICAgZ2V0ICgpIHsgcmV0dXJuIHBpbm9Db25maWcuZXJyb3JLZXkgfVxuICAgICAgfVxuICAgIH0pXG5cbiAgICByZXR1cm4gY29uZmlnUmVjZWl2ZWQudGhlbihmaW5pc2gpXG4gIH1cblxuICByZXR1cm4gZmluaXNoKClcblxuICBmdW5jdGlvbiBmaW5pc2ggKCkge1xuICAgIGxldCByZXMgPSBmbihzdHJlYW0pXG5cbiAgICBpZiAocmVzICYmIHR5cGVvZiByZXMuY2F0Y2ggPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJlcy5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIHN0cmVhbS5kZXN0cm95KGVycilcbiAgICAgIH0pXG5cbiAgICAgIC8vIHNldCBpdCB0byBudWxsIHRvIG5vdCByZXRhaW4gYSByZWZlcmVuY2UgdG8gdGhlIHByb21pc2VcbiAgICAgIHJlcyA9IG51bGxcbiAgICB9IGVsc2UgaWYgKG9wdHMuZW5hYmxlUGlwZWxpbmluZyAmJiByZXMpIHtcbiAgICAgIHJldHVybiBEdXBsZXguZnJvbSh7IHdyaXRhYmxlOiBzdHJlYW0sIHJlYWRhYmxlOiByZXMgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gc3RyZWFtXG4gIH1cbn1cblxuZnVuY3Rpb24gZGVmYXVsdENsb3NlIChlcnIsIGNiKSB7XG4gIHByb2Nlc3MubmV4dFRpY2soY2IsIGVycilcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/node_modules/pino-abstract-transport/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pino-pretty/node_modules/sonic-boom/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/pino-pretty/node_modules/sonic-boom/index.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst fs = __webpack_require__(/*! fs */ \"fs\")\nconst EventEmitter = __webpack_require__(/*! events */ \"events\")\nconst inherits = (__webpack_require__(/*! util */ \"util\").inherits)\nconst path = __webpack_require__(/*! path */ \"path\")\nconst sleep = __webpack_require__(/*! atomic-sleep */ \"(ssr)/./node_modules/atomic-sleep/index.js\")\nconst assert = __webpack_require__(/*! assert */ \"assert\")\n\nconst BUSY_WRITE_TIMEOUT = 100\nconst kEmptyBuffer = Buffer.allocUnsafe(0)\n\n// 16 KB. Don't write more than docker buffer size.\n// https://github.com/moby/moby/blob/513ec73831269947d38a644c278ce3cac36783b2/daemon/logger/copier.go#L13\nconst MAX_WRITE = 16 * 1024\n\nconst kContentModeBuffer = 'buffer'\nconst kContentModeUtf8 = 'utf8'\n\nconst [major, minor] = (process.versions.node || '0.0').split('.').map(Number)\nconst kCopyBuffer = major >= 22 && minor >= 7\n\nfunction openFile (file, sonic) {\n  sonic._opening = true\n  sonic._writing = true\n  sonic._asyncDrainScheduled = false\n\n  // NOTE: 'error' and 'ready' events emitted below only relevant when sonic.sync===false\n  // for sync mode, there is no way to add a listener that will receive these\n\n  function fileOpened (err, fd) {\n    if (err) {\n      sonic._reopening = false\n      sonic._writing = false\n      sonic._opening = false\n\n      if (sonic.sync) {\n        process.nextTick(() => {\n          if (sonic.listenerCount('error') > 0) {\n            sonic.emit('error', err)\n          }\n        })\n      } else {\n        sonic.emit('error', err)\n      }\n      return\n    }\n\n    const reopening = sonic._reopening\n\n    sonic.fd = fd\n    sonic.file = file\n    sonic._reopening = false\n    sonic._opening = false\n    sonic._writing = false\n\n    if (sonic.sync) {\n      process.nextTick(() => sonic.emit('ready'))\n    } else {\n      sonic.emit('ready')\n    }\n\n    if (sonic.destroyed) {\n      return\n    }\n\n    // start\n    if ((!sonic._writing && sonic._len > sonic.minLength) || sonic._flushPending) {\n      sonic._actualWrite()\n    } else if (reopening) {\n      process.nextTick(() => sonic.emit('drain'))\n    }\n  }\n\n  const flags = sonic.append ? 'a' : 'w'\n  const mode = sonic.mode\n\n  if (sonic.sync) {\n    try {\n      if (sonic.mkdir) fs.mkdirSync(path.dirname(file), { recursive: true })\n      const fd = fs.openSync(file, flags, mode)\n      fileOpened(null, fd)\n    } catch (err) {\n      fileOpened(err)\n      throw err\n    }\n  } else if (sonic.mkdir) {\n    fs.mkdir(path.dirname(file), { recursive: true }, (err) => {\n      if (err) return fileOpened(err)\n      fs.open(file, flags, mode, fileOpened)\n    })\n  } else {\n    fs.open(file, flags, mode, fileOpened)\n  }\n}\n\nfunction SonicBoom (opts) {\n  if (!(this instanceof SonicBoom)) {\n    return new SonicBoom(opts)\n  }\n\n  let { fd, dest, minLength, maxLength, maxWrite, periodicFlush, sync, append = true, mkdir, retryEAGAIN, fsync, contentMode, mode } = opts || {}\n\n  fd = fd || dest\n\n  this._len = 0\n  this.fd = -1\n  this._bufs = []\n  this._lens = []\n  this._writing = false\n  this._ending = false\n  this._reopening = false\n  this._asyncDrainScheduled = false\n  this._flushPending = false\n  this._hwm = Math.max(minLength || 0, 16387)\n  this.file = null\n  this.destroyed = false\n  this.minLength = minLength || 0\n  this.maxLength = maxLength || 0\n  this.maxWrite = maxWrite || MAX_WRITE\n  this._periodicFlush = periodicFlush || 0\n  this._periodicFlushTimer = undefined\n  this.sync = sync || false\n  this.writable = true\n  this._fsync = fsync || false\n  this.append = append || false\n  this.mode = mode\n  this.retryEAGAIN = retryEAGAIN || (() => true)\n  this.mkdir = mkdir || false\n\n  let fsWriteSync\n  let fsWrite\n  if (contentMode === kContentModeBuffer) {\n    this._writingBuf = kEmptyBuffer\n    this.write = writeBuffer\n    this.flush = flushBuffer\n    this.flushSync = flushBufferSync\n    this._actualWrite = actualWriteBuffer\n    fsWriteSync = () => fs.writeSync(this.fd, this._writingBuf)\n    fsWrite = () => fs.write(this.fd, this._writingBuf, this.release)\n  } else if (contentMode === undefined || contentMode === kContentModeUtf8) {\n    this._writingBuf = ''\n    this.write = write\n    this.flush = flush\n    this.flushSync = flushSync\n    this._actualWrite = actualWrite\n    fsWriteSync = () => fs.writeSync(this.fd, this._writingBuf, 'utf8')\n    fsWrite = () => fs.write(this.fd, this._writingBuf, 'utf8', this.release)\n  } else {\n    throw new Error(`SonicBoom supports \"${kContentModeUtf8}\" and \"${kContentModeBuffer}\", but passed ${contentMode}`)\n  }\n\n  if (typeof fd === 'number') {\n    this.fd = fd\n    process.nextTick(() => this.emit('ready'))\n  } else if (typeof fd === 'string') {\n    openFile(fd, this)\n  } else {\n    throw new Error('SonicBoom supports only file descriptors and files')\n  }\n  if (this.minLength >= this.maxWrite) {\n    throw new Error(`minLength should be smaller than maxWrite (${this.maxWrite})`)\n  }\n\n  this.release = (err, n) => {\n    if (err) {\n      if ((err.code === 'EAGAIN' || err.code === 'EBUSY') && this.retryEAGAIN(err, this._writingBuf.length, this._len - this._writingBuf.length)) {\n        if (this.sync) {\n          // This error code should not happen in sync mode, because it is\n          // not using the underlining operating system asynchronous functions.\n          // However it happens, and so we handle it.\n          // Ref: https://github.com/pinojs/pino/issues/783\n          try {\n            sleep(BUSY_WRITE_TIMEOUT)\n            this.release(undefined, 0)\n          } catch (err) {\n            this.release(err)\n          }\n        } else {\n          // Let's give the destination some time to process the chunk.\n          setTimeout(fsWrite, BUSY_WRITE_TIMEOUT)\n        }\n      } else {\n        this._writing = false\n\n        this.emit('error', err)\n      }\n      return\n    }\n\n    this.emit('write', n)\n    const releasedBufObj = releaseWritingBuf(this._writingBuf, this._len, n)\n    this._len = releasedBufObj.len\n    this._writingBuf = releasedBufObj.writingBuf\n\n    if (this._writingBuf.length) {\n      if (!this.sync) {\n        fsWrite()\n        return\n      }\n\n      try {\n        do {\n          const n = fsWriteSync()\n          const releasedBufObj = releaseWritingBuf(this._writingBuf, this._len, n)\n          this._len = releasedBufObj.len\n          this._writingBuf = releasedBufObj.writingBuf\n        } while (this._writingBuf.length)\n      } catch (err) {\n        this.release(err)\n        return\n      }\n    }\n\n    if (this._fsync) {\n      fs.fsyncSync(this.fd)\n    }\n\n    const len = this._len\n    if (this._reopening) {\n      this._writing = false\n      this._reopening = false\n      this.reopen()\n    } else if (len > this.minLength) {\n      this._actualWrite()\n    } else if (this._ending) {\n      if (len > 0) {\n        this._actualWrite()\n      } else {\n        this._writing = false\n        actualClose(this)\n      }\n    } else {\n      this._writing = false\n      if (this.sync) {\n        if (!this._asyncDrainScheduled) {\n          this._asyncDrainScheduled = true\n          process.nextTick(emitDrain, this)\n        }\n      } else {\n        this.emit('drain')\n      }\n    }\n  }\n\n  this.on('newListener', function (name) {\n    if (name === 'drain') {\n      this._asyncDrainScheduled = false\n    }\n  })\n\n  if (this._periodicFlush !== 0) {\n    this._periodicFlushTimer = setInterval(() => this.flush(null), this._periodicFlush)\n    this._periodicFlushTimer.unref()\n  }\n}\n\n/**\n * Release the writingBuf after fs.write n bytes data\n * @param {string | Buffer} writingBuf - currently writing buffer, usually be instance._writingBuf.\n * @param {number} len - currently buffer length, usually be instance._len.\n * @param {number} n - number of bytes fs already written\n * @returns {{writingBuf: string | Buffer, len: number}} released writingBuf and length\n */\nfunction releaseWritingBuf (writingBuf, len, n) {\n  // if Buffer.byteLength is equal to n, that means writingBuf contains no multi-byte character\n  if (typeof writingBuf === 'string' && Buffer.byteLength(writingBuf) !== n) {\n    // Since the fs.write callback parameter `n` means how many bytes the passed of string\n    // We calculate the original string length for avoiding the multi-byte character issue\n    n = Buffer.from(writingBuf).subarray(0, n).toString().length\n  }\n  len = Math.max(len - n, 0)\n  writingBuf = writingBuf.slice(n)\n  return { writingBuf, len }\n}\n\nfunction emitDrain (sonic) {\n  const hasListeners = sonic.listenerCount('drain') > 0\n  if (!hasListeners) return\n  sonic._asyncDrainScheduled = false\n  sonic.emit('drain')\n}\n\ninherits(SonicBoom, EventEmitter)\n\nfunction mergeBuf (bufs, len) {\n  if (bufs.length === 0) {\n    return kEmptyBuffer\n  }\n\n  if (bufs.length === 1) {\n    return bufs[0]\n  }\n\n  return Buffer.concat(bufs, len)\n}\n\nfunction write (data) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  const len = this._len + data.length\n  const bufs = this._bufs\n\n  if (this.maxLength && len > this.maxLength) {\n    this.emit('drop', data)\n    return this._len < this._hwm\n  }\n\n  if (\n    bufs.length === 0 ||\n    bufs[bufs.length - 1].length + data.length > this.maxWrite\n  ) {\n    bufs.push('' + data)\n  } else {\n    bufs[bufs.length - 1] += data\n  }\n\n  this._len = len\n\n  if (!this._writing && this._len >= this.minLength) {\n    this._actualWrite()\n  }\n\n  return this._len < this._hwm\n}\n\nfunction writeBuffer (data) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  const len = this._len + data.length\n  const bufs = this._bufs\n  const lens = this._lens\n\n  if (this.maxLength && len > this.maxLength) {\n    this.emit('drop', data)\n    return this._len < this._hwm\n  }\n\n  if (\n    bufs.length === 0 ||\n    lens[lens.length - 1] + data.length > this.maxWrite\n  ) {\n    bufs.push([data])\n    lens.push(data.length)\n  } else {\n    bufs[bufs.length - 1].push(data)\n    lens[lens.length - 1] += data.length\n  }\n\n  this._len = len\n\n  if (!this._writing && this._len >= this.minLength) {\n    this._actualWrite()\n  }\n\n  return this._len < this._hwm\n}\n\nfunction callFlushCallbackOnDrain (cb) {\n  this._flushPending = true\n  const onDrain = () => {\n    // only if _fsync is false to avoid double fsync\n    if (!this._fsync) {\n      try {\n        fs.fsync(this.fd, (err) => {\n          this._flushPending = false\n          cb(err)\n        })\n      } catch (err) {\n        cb(err)\n      }\n    } else {\n      this._flushPending = false\n      cb()\n    }\n    this.off('error', onError)\n  }\n  const onError = (err) => {\n    this._flushPending = false\n    cb(err)\n    this.off('drain', onDrain)\n  }\n\n  this.once('drain', onDrain)\n  this.once('error', onError)\n}\n\nfunction flush (cb) {\n  if (cb != null && typeof cb !== 'function') {\n    throw new Error('flush cb must be a function')\n  }\n\n  if (this.destroyed) {\n    const error = new Error('SonicBoom destroyed')\n    if (cb) {\n      cb(error)\n      return\n    }\n\n    throw error\n  }\n\n  if (this.minLength <= 0) {\n    cb?.()\n    return\n  }\n\n  if (cb) {\n    callFlushCallbackOnDrain.call(this, cb)\n  }\n\n  if (this._writing) {\n    return\n  }\n\n  if (this._bufs.length === 0) {\n    this._bufs.push('')\n  }\n\n  this._actualWrite()\n}\n\nfunction flushBuffer (cb) {\n  if (cb != null && typeof cb !== 'function') {\n    throw new Error('flush cb must be a function')\n  }\n\n  if (this.destroyed) {\n    const error = new Error('SonicBoom destroyed')\n    if (cb) {\n      cb(error)\n      return\n    }\n\n    throw error\n  }\n\n  if (this.minLength <= 0) {\n    cb?.()\n    return\n  }\n\n  if (cb) {\n    callFlushCallbackOnDrain.call(this, cb)\n  }\n\n  if (this._writing) {\n    return\n  }\n\n  if (this._bufs.length === 0) {\n    this._bufs.push([])\n    this._lens.push(0)\n  }\n\n  this._actualWrite()\n}\n\nSonicBoom.prototype.reopen = function (file) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this._opening) {\n    this.once('ready', () => {\n      this.reopen(file)\n    })\n    return\n  }\n\n  if (this._ending) {\n    return\n  }\n\n  if (!this.file) {\n    throw new Error('Unable to reopen a file descriptor, you must pass a file to SonicBoom')\n  }\n\n  if (file) {\n    this.file = file\n  }\n  this._reopening = true\n\n  if (this._writing) {\n    return\n  }\n\n  const fd = this.fd\n  this.once('ready', () => {\n    if (fd !== this.fd) {\n      fs.close(fd, (err) => {\n        if (err) {\n          return this.emit('error', err)\n        }\n      })\n    }\n  })\n\n  openFile(this.file, this)\n}\n\nSonicBoom.prototype.end = function () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this._opening) {\n    this.once('ready', () => {\n      this.end()\n    })\n    return\n  }\n\n  if (this._ending) {\n    return\n  }\n\n  this._ending = true\n\n  if (this._writing) {\n    return\n  }\n\n  if (this._len > 0 && this.fd >= 0) {\n    this._actualWrite()\n  } else {\n    actualClose(this)\n  }\n}\n\nfunction flushSync () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this.fd < 0) {\n    throw new Error('sonic boom is not ready yet')\n  }\n\n  if (!this._writing && this._writingBuf.length > 0) {\n    this._bufs.unshift(this._writingBuf)\n    this._writingBuf = ''\n  }\n\n  let buf = ''\n  while (this._bufs.length || buf) {\n    if (buf.length <= 0) {\n      buf = this._bufs[0]\n    }\n    try {\n      const n = fs.writeSync(this.fd, buf, 'utf8')\n      const releasedBufObj = releaseWritingBuf(buf, this._len, n)\n      buf = releasedBufObj.writingBuf\n      this._len = releasedBufObj.len\n      if (buf.length <= 0) {\n        this._bufs.shift()\n      }\n    } catch (err) {\n      const shouldRetry = err.code === 'EAGAIN' || err.code === 'EBUSY'\n      if (shouldRetry && !this.retryEAGAIN(err, buf.length, this._len - buf.length)) {\n        throw err\n      }\n\n      sleep(BUSY_WRITE_TIMEOUT)\n    }\n  }\n\n  try {\n    fs.fsyncSync(this.fd)\n  } catch {\n    // Skip the error. The fd might not support fsync.\n  }\n}\n\nfunction flushBufferSync () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this.fd < 0) {\n    throw new Error('sonic boom is not ready yet')\n  }\n\n  if (!this._writing && this._writingBuf.length > 0) {\n    this._bufs.unshift([this._writingBuf])\n    this._writingBuf = kEmptyBuffer\n  }\n\n  let buf = kEmptyBuffer\n  while (this._bufs.length || buf.length) {\n    if (buf.length <= 0) {\n      buf = mergeBuf(this._bufs[0], this._lens[0])\n    }\n    try {\n      const n = fs.writeSync(this.fd, buf)\n      buf = buf.subarray(n)\n      this._len = Math.max(this._len - n, 0)\n      if (buf.length <= 0) {\n        this._bufs.shift()\n        this._lens.shift()\n      }\n    } catch (err) {\n      const shouldRetry = err.code === 'EAGAIN' || err.code === 'EBUSY'\n      if (shouldRetry && !this.retryEAGAIN(err, buf.length, this._len - buf.length)) {\n        throw err\n      }\n\n      sleep(BUSY_WRITE_TIMEOUT)\n    }\n  }\n}\n\nSonicBoom.prototype.destroy = function () {\n  if (this.destroyed) {\n    return\n  }\n  actualClose(this)\n}\n\nfunction actualWrite () {\n  const release = this.release\n  this._writing = true\n  this._writingBuf = this._writingBuf || this._bufs.shift() || ''\n\n  if (this.sync) {\n    try {\n      const written = fs.writeSync(this.fd, this._writingBuf, 'utf8')\n      release(null, written)\n    } catch (err) {\n      release(err)\n    }\n  } else {\n    fs.write(this.fd, this._writingBuf, 'utf8', release)\n  }\n}\n\nfunction actualWriteBuffer () {\n  const release = this.release\n  this._writing = true\n  this._writingBuf = this._writingBuf.length ? this._writingBuf : mergeBuf(this._bufs.shift(), this._lens.shift())\n\n  if (this.sync) {\n    try {\n      const written = fs.writeSync(this.fd, this._writingBuf)\n      release(null, written)\n    } catch (err) {\n      release(err)\n    }\n  } else {\n    // fs.write will need to copy string to buffer anyway so\n    // we do it here to avoid the overhead of calculating the buffer size\n    // in releaseWritingBuf.\n    if (kCopyBuffer) {\n      this._writingBuf = Buffer.from(this._writingBuf)\n    }\n    fs.write(this.fd, this._writingBuf, release)\n  }\n}\n\nfunction actualClose (sonic) {\n  if (sonic.fd === -1) {\n    sonic.once('ready', actualClose.bind(null, sonic))\n    return\n  }\n\n  if (sonic._periodicFlushTimer !== undefined) {\n    clearInterval(sonic._periodicFlushTimer)\n  }\n\n  sonic.destroyed = true\n  sonic._bufs = []\n  sonic._lens = []\n\n  assert(typeof sonic.fd === 'number', `sonic.fd must be a number, got ${typeof sonic.fd}`)\n  try {\n    fs.fsync(sonic.fd, closeWrapped)\n  } catch {\n  }\n\n  function closeWrapped () {\n    // We skip errors in fsync\n\n    if (sonic.fd !== 1 && sonic.fd !== 2) {\n      fs.close(sonic.fd, done)\n    } else {\n      done()\n    }\n  }\n\n  function done (err) {\n    if (err) {\n      sonic.emit('error', err)\n      return\n    }\n\n    if (sonic._ending && !sonic._writing) {\n      sonic.emit('finish')\n    }\n    sonic.emit('close')\n  }\n}\n\n/**\n * These export configurations enable JS and TS developers\n * to consumer SonicBoom in whatever way best suits their needs.\n * Some examples of supported import syntax includes:\n * - `const SonicBoom = require('SonicBoom')`\n * - `const { SonicBoom } = require('SonicBoom')`\n * - `import * as SonicBoom from 'SonicBoom'`\n * - `import { SonicBoom } from 'SonicBoom'`\n * - `import SonicBoom from 'SonicBoom'`\n */\nSonicBoom.SonicBoom = SonicBoom\nSonicBoom.default = SonicBoom\nmodule.exports = SonicBoom\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pino-pretty/node_modules/sonic-boom/index.js\n");

/***/ })

};
;