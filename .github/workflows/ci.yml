# CI Pipeline - Validates code quality before merge
# Location: .github/workflows/ci.yml

name: CI Pipeline

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  validate-code:
    name: Validate Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Run tests
        run: npm test
      
      - name: Build project
        run: npm run build
      
      - name: Check build output
        run: |
          echo "Build completed successfully"
          echo "Build size information:"
          du -sh .next/
          du -sh .next/static/
          du -sh .next/server/
  
  create-artifact:
    name: Create Build Artifact
    runs-on: ubuntu-latest
    needs: validate-code
    # Only create artifacts for main branch (after merge)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Verify build output exists
        run: |
          echo "üîç Checking if .next directory was created..."
          if [ ! -d ".next" ]; then
            echo "‚ùå ERROR: .next directory not found after build!"
            echo "Current directory contents:"
            ls -la
            exit 1
          fi
          echo "‚úÖ .next directory exists"
          echo "üìä .next size: $(du -sh .next | cut -f1)"
      
      - name: Prepare artifact with correct structure
        run: |
          echo "üì¶ Creating minimal production artifact..."
          
          # Remove source maps to reduce size (they're not needed in production)
          echo "üóëÔ∏è Removing source maps..."
          find .next -name "*.map" -type f -delete
          
          # Show what we're including
          echo "üìã Files to include in artifact:"
          echo "  - .next/ (build output)"
          echo "  - public/ (static assets)"
          echo "  - package.json (for dependencies)"
          echo "  - package-lock.json (for exact versions)"
          
          # Check final sizes
          echo ""
          echo "üìä Final artifact contents size:"
          du -sh .next/ || echo ".next not found"
          du -sh public/ || echo "public not found"
          du -sh package.json
          du -sh package-lock.json
          
          echo ""
          echo "üìä Total size before compression:"
          du -sh -c .next public package.json package-lock.json | grep total
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: portfolio-build-${{ github.sha }}
          # IMPORTANT: Upload files directly, not a wrapper directory
          path: |
            .next/**
            !.next/**/*.map
            public/**
            !**/node_modules/**
            package.json
            package-lock.json
          retention-days: 2
          compression-level: 9  # Maximum compression      
      - name: Output artifact info
        run: |
          echo "‚úÖ Artifact created successfully"
          echo "Artifact name: portfolio-build-${{ github.sha }}"
          echo "This artifact will be used for deployment"